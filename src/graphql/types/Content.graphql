enum ContentType {
    VOD
    STREAM
    FILE
    APP
}

enum ContentState {
    DISCOVERED
    DOWNLOADING
    DOWNLOADED
    PURCHASING
    PURCHASED
    DECRYPTION_KEY_RECEIVED
    DECRYPTED
    VERIFIED
    ENCRYPTED
    STAKING
    STAKED
    DISCOVERABLE
}

type DatStats {
    files: Int
    byteLength: Int
    length: Int
    version: Int
    downloadSpeed: Float
    uploadSpeed: Float
    downloadTotal: Float
    uploadTotal: Float
    peersTotal: Int
    peersComplete: Int
}

type ContentTransactions {
    stakeTx: String
    purchaseTx: String
    hostTx: String
}

# Shared interface between all content types
interface IContent {
    id: ID!
    state: ContentState!
    stakeId: ID
    nodeId: ID!
    creatorId: ID!
    contentType: ContentType!
    isFolder: Boolean!
    isMutable: Boolean!
    fileName: String
    fileDatKey: String
    fileUrl: String
    metadataDatKey: ID!
    metadataDatStats: DatStats
    title: String
    description: String    
    # Econ
    stake: Float
    fileSize: Float
    premium: Float
    split: Float
    adSupport: Boolean
    # Network
    createdAt: String
    transactions: ContentTransactions
}

type VideoContent implements IContent {
    id: ID!
    state: ContentState!
    stakeId: ID
    nodeId: ID!
    creatorId: ID!
    contentType: ContentType!
    isFolder: Boolean!
    isMutable: Boolean!
    fileName: String
    fileDatKey: String
    fileUrl: String
    metadataDatKey: ID!
    metadataDatStats: DatStats
    title: String
    description: String    
    # Econ
    stake: Float
    fileSize: Float
    premium: Float
    split: Float
    adSupport: Boolean
    # Network
    createdAt: String
    transactions: ContentTransactions
    # VideoContent
    teaserUrl: String
    featuredImageUrl: String
    metadata: VideoMetadata
}

input VideoContentSubmissionInputs {
    ethAddress: String!
    video: Upload
    videoTeaser: Upload
    featuredImage: Upload
    title: String!
    description: String!
    stake: Float!
    profit: Float!
}

type VideoMetadata {
    duration: Float
    resolution: String
    encoding: String
}