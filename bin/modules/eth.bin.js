#!/usr/bin/env node
exports["eth"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./dist/modules/eth/eth.bin.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/modules/eth/eth.bin.js":
/*!*************************************!*\
  !*** ./dist/modules/eth/eth.bin.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var eth_1 = __importDefault(__webpack_require__(/*! ./eth */ "./dist/modules/eth/eth.js"));
var minimist = __webpack_require__(/*! minimist */ "./node_modules/minimist/index.js");
var argv = minimist(process.argv.slice(2), {
    default: {
        rpcMainnet: 'https://mainnet.infura.io/',
        rpcRinkeby: 'https://rinkeby.infura.io/',
    }
});
if (__webpack_require__.c[__webpack_require__.s] === module) {
    new eth_1.default(argv);
}
//# sourceMappingURL=eth.bin.js.map
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./dist/modules/eth/eth.js":
/*!*********************************!*\
  !*** ./dist/modules/eth/eth.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var AORouterInterface_1 = __importDefault(__webpack_require__(/*! ../../router/AORouterInterface */ "./dist/router/AORouterInterface.js"));
var web3_1 = __importDefault(__webpack_require__(/*! web3 */ "./node_modules/web3/index.js"));
var debug_1 = __importDefault(__webpack_require__(/*! debug */ "./node_modules/debug/src/index.js"));
var AOContent = __webpack_require__(/*! ao-contracts/build/contracts/AOContent.json */ "./node_modules/ao-contracts/build/contracts/AOContent.json");
var debug = debug_1.default('ao:eth');
/**
 * AOEth
 *
 * This is the main fs package for AO. Note all reads/writes are relative
 * to the `storageLocation` argument.
 */
var AOEth = /** @class */ (function (_super) {
    __extends(AOEth, _super);
    function AOEth(args) {
        var _this = _super.call(this) || this;
        _this.rpcMainnet = args.rpcMainnet;
        _this.rpcRinkeby = args.rpcRinkeby;
        _this.router.on('/eth/network/set', _this._handleNetworkChange.bind(_this));
        _this.router.on('/eth/content/isStaked', _this._handleContentIsStaked.bind(_this));
        debug("started");
        return _this;
    }
    AOEth.prototype._handleNetworkChange = function (request) {
        var _this = this;
        var requestData = request.data;
        if (['1', '4'].indexOf(requestData.networkId) < 0) {
            debug("Network currently not supported: " + requestData.networkId);
            request.reject(new Error("Network currently not supported: " + requestData.networkId));
            return;
        }
        if (this.web3)
            this.web3.reset(); // clears any filters etc that may have already existed
        var rpcEndpoint = this.rpcMainnet;
        if (requestData.networkId === '1') // mainnet
            rpcEndpoint = this.rpcMainnet;
        else if (requestData.networkId === '4') // rinkeby
            rpcEndpoint = this.rpcRinkeby;
        this.web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(rpcEndpoint));
        this.web3.version.getNetwork(function (error, networkId) {
            if (error) {
                debug('Error getting network:', error);
                request.reject(error);
            }
            else {
                debug("Connected to network with id [" + networkId + "]");
                _this.networkId = networkId;
                request.respond({
                    networkId: networkId
                });
            }
        });
    };
    AOEth.prototype._handleContentIsStaked = function (request) {
        var requestData = request.data;
        try {
            var aoContent = this.web3.eth.contract(AOContent.abi).at(AOContent.networks[this.networkId].address);
            // TODO: check if content is staked
            request.respond(true);
        }
        catch (error) {
            debug('Error checking if content is staked:', error);
            request.reject(error);
        }
    };
    return AOEth;
}(AORouterInterface_1.default));
exports.default = AOEth;
//# sourceMappingURL=eth.js.map

/***/ }),

/***/ "./dist/router/AORouterCoreProcessPretender.js":
/*!*****************************************************!*\
  !*** ./dist/router/AORouterCoreProcessPretender.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! events */ "events");
/**
 * AORouterCoreProcessPretender
 *
 * In order to keep the AORouter clean, we are making the core router
 * interface appear as a "process", or at least have the same
 * methods that the subprocesses would use to communicate up to
 * the router.
 */
var AORouterCoreProcessPretender = /** @class */ (function (_super) {
    __extends(AORouterCoreProcessPretender, _super);
    function AORouterCoreProcessPretender() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AORouterCoreProcessPretender.prototype.send = function (message, callback) {
        this.emit('message', message);
        if (typeof callback === 'function')
            callback();
        return true;
    };
    return AORouterCoreProcessPretender;
}(events_1.EventEmitter));
exports.default = AORouterCoreProcessPretender;
//# sourceMappingURL=AORouterCoreProcessPretender.js.map

/***/ }),

/***/ "./dist/router/AORouterInterface.js":
/*!******************************************!*\
  !*** ./dist/router/AORouterInterface.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! events */ "events");
var fs_1 = __importDefault(__webpack_require__(/*! fs */ "fs"));
var AORouterCoreProcessPretender_1 = __importDefault(__webpack_require__(/*! ./AORouterCoreProcessPretender */ "./dist/router/AORouterCoreProcessPretender.js"));
/**
 * Any class interfacing with the AORouter should handle these
 */
var AORouterInterface = /** @class */ (function () {
    function AORouterInterface() {
    }
    return AORouterInterface;
}());
/**
 * AOSubprocessRouter provides an abstraction on top of the
 * incoming and outgoing process messages. This simplifies
 * the API for subprocesses to interact with AO via the
 * following two mechanisms:
 *
 * 1. For sending messages/requests
 *      this.router.send('event', data).then().catch()
 *
 * 2. For handling incoming requests
 *      this.router.on('event', (incomingRequest) => {
 *          incomingRequest.respond(data)
 *          incomingRequest.reject(error)
 *      })
 */
var AOSubprocessRouter = /** @class */ (function (_super) {
    __extends(AOSubprocessRouter, _super);
    function AOSubprocessRouter() {
        var _this = _super.call(this) || this;
        _this.requestCount = 0;
        _this.processIdentifier = Math.random().toString(36).substring(5);
        _this.process = process;
        _this.process.on('message', _this._routeMessage.bind(_this));
        return _this;
    }
    /**
     * _routeMessage is used to wrap the incoming request
     * with a set of callbacks to respond directly to that
     * request
     *
     * @param message
     */
    AOSubprocessRouter.prototype._routeMessage = function (message) {
        if (message.responseId) {
            // This is a response to one of our earlier requests, we let 
            // the other event listener handle that
            return;
        }
        if (message.data && message.data.stream) {
            console.log('Subprocess - attempt to create readStream on fd4');
            message.data.stream = fs_1.default.createReadStream(null, { fd: 4 });
        }
        var incomingRequest = {
            id: message.requestId,
            event: message.event,
            data: message.data || {},
            ethAddress: message.ethAddress,
            respond: this._routeMessageResponse.bind(this, message, false),
            reject: this._routeMessageResponse.bind(this, message, true),
        };
        this.emit(message.event, incomingRequest);
    };
    AOSubprocessRouter.prototype._routeMessageResponse = function (originatingMessage, isReject, responseData) {
        var outgoingResponse = {
            routerMessageId: originatingMessage.routerMessageId,
            requestId: originatingMessage.requestId,
            responseId: originatingMessage.requestId,
            event: originatingMessage.event,
            ethAddress: originatingMessage.ethAddress,
            data: !isReject ? responseData : undefined,
            error: isReject ? (responseData instanceof Error ? responseData.message : responseData) : undefined,
        };
        this.process.send(outgoingResponse);
    };
    /**
     * Send-to-Router is wrapped in a promise for process
     * abstraction and better handling of responses.
     *
     * @param event
     * @param data
     * @returns Promise<any>
     */
    AOSubprocessRouter.prototype.send = function (event, data) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var requestId = _this.processIdentifier + ":" + ++_this.requestCount;
            var request = {
                requestId: requestId,
                event: event,
                data: data,
            };
            if (data && data.stream) {
                /**
                 * Reminder: we are sending the stream up to the parent
                 * process (core)
                 */
                var readableStream = data.stream;
                var outputStream = fs_1.default.createWriteStream(null, { fd: 4 });
                readableStream.pipe(outputStream);
                data.stream = true; // We dont pass the stream object through to the router 
            }
            _this.process.send(request, function (error) {
                if (error) {
                    // TODO data.stream.unpipe(this.process.stdio[3])
                    return reject(error);
                }
                _this.process.on('message', function (message) {
                    if (message.requestId === request.requestId) {
                        if (message.error) {
                            reject(message.error);
                        }
                        else {
                            resolve(message);
                        }
                    }
                });
            });
        });
    };
    return AOSubprocessRouter;
}(events_1.EventEmitter));
exports.AOSubprocessRouter = AOSubprocessRouter;
/**
 * Same as AOSubprocessRouter, but since this is running on the same process
 * as the router/core we need to make some modifications.
 */
var AOCoreProcessRouter = /** @class */ (function (_super) {
    __extends(AOCoreProcessRouter, _super);
    function AOCoreProcessRouter() {
        var _this = _super.call(this) || this;
        _this.requestCount = 0;
        _this.processIdentifier = Math.random().toString(36).substring(5);
        _this.process = new AORouterCoreProcessPretender_1.default();
        _this.process.on('message', _this._routeMessage.bind(_this));
        return _this;
    }
    /**
     * _routeMessage is used to wrap the incoming request
     * with a set of callbacks to respond directly to that
     * request
     *
     * @param message
     */
    AOCoreProcessRouter.prototype._routeMessage = function (message) {
        if (message.responseId) {
            // This is a response to one of our earlier requests, we let 
            // the other event listener handle that
            return;
        }
        var incomingRequest = {
            id: message.requestId,
            event: message.event,
            data: message.data || {},
            ethAddress: message.ethAddress,
            respond: this._routeMessageResponse.bind(this, message, false),
            reject: this._routeMessageResponse.bind(this, message, true),
        };
        this.emit(message.event, incomingRequest);
    };
    AOCoreProcessRouter.prototype._routeMessageResponse = function (originatingMessage, isReject, responseData) {
        var outgoingResponse = {
            routerMessageId: originatingMessage.routerMessageId,
            requestId: originatingMessage.requestId,
            responseId: originatingMessage.requestId,
            event: originatingMessage.event,
            ethAddress: originatingMessage.ethAddress,
            data: !isReject ? responseData : undefined,
            error: isReject ? (responseData instanceof Error ? responseData.message : responseData) : undefined,
        };
        this.process.send(outgoingResponse);
    };
    /**
     * Send-to-Router is wrapped in a promise for process
     * abstraction and better handling of responses.
     *
     * @param event
     * @param data
     * @returns Promise<any>
     */
    AOCoreProcessRouter.prototype.send = function (event, data) {
        var _this = this;
        // TODO: if we are sending a stream, make sure our stdio fd is not in use!
        // If so we need to move this onto a queue
        return new Promise(function (resolve, reject) {
            var requestId = _this.processIdentifier + ":" + ++_this.requestCount;
            var request = {
                requestId: requestId,
                event: event,
                data: data,
            };
            _this.process.send(request, function (error) {
                if (error) {
                    return reject(error);
                }
                _this.process.on('message', function (message) {
                    if (message.requestId === request.requestId) {
                        if (message.error) {
                            reject(message.error);
                        }
                        else {
                            resolve(message);
                        }
                    }
                });
            });
        });
    };
    return AOCoreProcessRouter;
}(events_1.EventEmitter));
exports.AOCoreProcessRouter = AOCoreProcessRouter;
/**
 * AORouterInterface
 *
 * Simple wrapper around the process router for now, but
 * will extend to handle lifecycle events as well.
 */
var AORouterSubprocessInterface = /** @class */ (function () {
    function AORouterSubprocessInterface() {
        this.router = new AOSubprocessRouter();
    }
    return AORouterSubprocessInterface;
}());
exports.default = AORouterSubprocessInterface;
var AORouterCoreProcessInterface = /** @class */ (function () {
    function AORouterCoreProcessInterface() {
        this.router = new AOCoreProcessRouter();
    }
    return AORouterCoreProcessInterface;
}());
exports.AORouterCoreProcessInterface = AORouterCoreProcessInterface;
//# sourceMappingURL=AORouterInterface.js.map

/***/ }),

/***/ "./node_modules/ao-contracts/build/contracts/AOContent.json":
/*!******************************************************************!*\
  !*** ./node_modules/ao-contracts/build/contracts/AOContent.json ***!
  \******************************************************************/
/*! exports provided: contractName, abi, bytecode, deployedBytecode, sourceMap, deployedSourceMap, source, sourcePath, ast, legacyAST, compiler, networks, schemaVersion, updatedAt, default */
/***/ (function(module) {

module.exports = {"contractName":"AOContent","abi":[{"constant":true,"inputs":[],"name":"killed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalStakedContents","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"inflationRate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalBoughtContents","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"buyContentPrimordialTokenProfit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_account","type":"address"},{"name":"_whitelist","type":"bool"}],"name":"setWhitelist","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"buyContentNetworkTokenProfit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"whitelist","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"PERCENTAGE_DIVISOR","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_treasuryAddress","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"stakeOwner","type":"address"},{"indexed":true,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"networkIntegerAmount","type":"uint256"},{"indexed":false,"name":"networkFractionAmount","type":"uint256"},{"indexed":false,"name":"denomination","type":"bytes8"},{"indexed":false,"name":"totalNetworkBaseAmount","type":"uint256"},{"indexed":false,"name":"primordialAmount","type":"uint256"},{"indexed":false,"name":"primordialWeightedIndex","type":"uint256"},{"indexed":false,"name":"datKey","type":"string"},{"indexed":false,"name":"fileSize","type":"uint256"},{"indexed":false,"name":"profitPercentage","type":"uint256"},{"indexed":false,"name":"createdOnTimestamp","type":"uint256"}],"name":"StakeContent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"stakeOwner","type":"address"},{"indexed":true,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"newProfitPercentage","type":"uint256"}],"name":"SetProfitPercentage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"stakeOwner","type":"address"},{"indexed":true,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"remainingNetworkAmount","type":"uint256"},{"indexed":false,"name":"remainingPrimordialAmount","type":"uint256"},{"indexed":false,"name":"primordialWeightedIndex","type":"uint256"}],"name":"UnstakePartialContent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"stakeOwner","type":"address"},{"indexed":true,"name":"stakeId","type":"bytes32"}],"name":"UnstakeContent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"stakeOwner","type":"address"},{"indexed":true,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"currentNetworkAmount","type":"uint256"},{"indexed":false,"name":"currentPrimordialAmount","type":"uint256"},{"indexed":false,"name":"currentPrimordialWeightedIndex","type":"uint256"}],"name":"StakeExistingContent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"recipient","type":"address"},{"indexed":true,"name":"buyId","type":"bytes32"},{"indexed":false,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"networkAmount","type":"uint256"},{"indexed":false,"name":"networkProfitAmount","type":"uint256"},{"indexed":false,"name":"profitPercentage","type":"uint256"},{"indexed":false,"name":"recipientType","type":"uint8"}],"name":"BuyContentNetworkTokenEarning","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"sender","type":"address"},{"indexed":true,"name":"recipient","type":"address"},{"indexed":true,"name":"buyId","type":"bytes32"},{"indexed":false,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"primordialAmount","type":"uint256"},{"indexed":false,"name":"primordialWeightedIndex","type":"uint256"},{"indexed":false,"name":"primordialProfitAmount","type":"uint256"},{"indexed":false,"name":"profitPercentage","type":"uint256"},{"indexed":false,"name":"recipientType","type":"uint8"}],"name":"BuyContentPrimordialTokenEarning","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"buyer","type":"address"},{"indexed":false,"name":"buyId","type":"bytes32"},{"indexed":false,"name":"stakeId","type":"bytes32"},{"indexed":false,"name":"host","type":"address"},{"indexed":false,"name":"networkIntegerAmount","type":"uint256"},{"indexed":false,"name":"networkFractionAmount","type":"uint256"},{"indexed":false,"name":"denomination","type":"bytes8"},{"indexed":false,"name":"totalNetworkAmount","type":"uint256"},{"indexed":false,"name":"primordialAmount","type":"uint256"},{"indexed":false,"name":"primordialWeightedIndex","type":"uint256"}],"name":"BuyContent","type":"event"},{"anonymous":false,"inputs":[],"name":"EscapeHatch","type":"event"},{"constant":false,"inputs":[{"name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"escapeHatch","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_inflationRate","type":"uint256"}],"name":"setInflationRate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_networkIntegerAmount","type":"uint256"},{"name":"_networkFractionAmount","type":"uint256"},{"name":"_denomination","type":"bytes8"},{"name":"_primordialAmount","type":"uint256"},{"name":"_datKey","type":"string"},{"name":"_fileSize","type":"uint256"},{"name":"_profitPercentage","type":"uint256"}],"name":"stakeContent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_stakeId","type":"bytes32"},{"name":"_profitPercentage","type":"uint256"}],"name":"setProfitPercentage","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_stakeId","type":"bytes32"}],"name":"stakedContentById","outputs":[{"name":"","type":"address"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"string"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"bool"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_stakeId","type":"bytes32"},{"name":"_networkIntegerAmount","type":"uint256"},{"name":"_networkFractionAmount","type":"uint256"},{"name":"_denomination","type":"bytes8"},{"name":"_primordialAmount","type":"uint256"}],"name":"unstakePartialContent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_stakeId","type":"bytes32"}],"name":"unstakeContent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_stakeId","type":"bytes32"},{"name":"_networkIntegerAmount","type":"uint256"},{"name":"_networkFractionAmount","type":"uint256"},{"name":"_denomination","type":"bytes8"},{"name":"_primordialAmount","type":"uint256"}],"name":"stakeExistingContent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_stakeId","type":"bytes32"},{"name":"_host","type":"address"},{"name":"_networkIntegerAmount","type":"uint256"},{"name":"_networkFractionAmount","type":"uint256"},{"name":"_denomination","type":"bytes8"},{"name":"_primordialAmount","type":"uint256"}],"name":"buyContent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506040516020806137c6833981016040525160008054600160a060020a0319908116331790915560068054600160a060020a03909316929091169190911790556137678061005f6000396000f30060806040526004361061010e5763ffffffff60e060020a6000350416631554611f811461011357806316c38b3c1461012a5780631f3a0e4114610144578063202352f71461016d57806331f9e35b146101945780633b6a08da146101a957806347eecd48146101be57806353d6fd59146101e2578063587996ed146102085780635c975abb1461028657806370660f7c1461029b5780637af33849146102c95780638da5cb5b146102ea5780639b19251a1461031b578063b1551b951461033c578063b380b0d414610354578063c3db397f1461036f578063caf297651461039d578063e2499b98146103b2578063e30d52e914610490578063e6ab96ed146104ca578063f2fde38b146104e2575b600080fd5b34801561011f57600080fd5b50610128610503565b005b34801561013657600080fd5b506101286004351515610569565b34801561015057600080fd5b50610159610593565b604080519115158252519081900360200190f35b34801561017957600080fd5b506101826105a1565b60408051918252519081900360200190f35b3480156101a057600080fd5b506101826105a7565b3480156101b557600080fd5b506101826105ad565b3480156101ca57600080fd5b50610182600160a060020a03600435166024356105b3565b3480156101ee57600080fd5b50610128600160a060020a036004351660243515156105d0565b34801561021457600080fd5b50604080516020601f608435600481810135928301849004840285018401909552818452610128948035946024803595600160c060020a031960443516956064359536959460a49490939101919081908401838280828437509497505084359550505060209092013591506106129050565b34801561029257600080fd5b506101596109bd565b3480156102a757600080fd5b50610128600435602435604435600160c060020a0319606435166084356109c6565b3480156102d557600080fd5b50610182600160a060020a0360043516610cb9565b3480156102f657600080fd5b506102ff610ccb565b60408051600160a060020a039092168252519081900360200190f35b34801561032757600080fd5b50610159600160a060020a0360043516610cda565b34801561034857600080fd5b50610128600435610cef565b34801561036057600080fd5b50610128600435602435610d31565b34801561037b57600080fd5b50610128600435602435604435600160c060020a031960643516608435610dfb565b3480156103a957600080fd5b50610182610fa4565b3480156103be57600080fd5b506103ca600435610fab565b604051808a600160a060020a0316600160a060020a031681526020018981526020018881526020018781526020018060200186815260200185815260200184151515158152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561044d578181015183820152602001610435565b50505050905090810190601f16801561047a5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561049c57600080fd5b50610128600435600160a060020a0360243516604435606435600160c060020a03196084351660a435611155565b3480156104d657600080fd5b506101286004356113f6565b3480156104ee57600080fd5b50610128600160a060020a03600435166115cc565b600054600160a060020a0316331461051a57600080fd5b600254610100900460ff161561052f57600080fd5b6002805461ff0019166101001790556040517f16ed36fbe43aed6ba7426b24d35620696380d398f2f22f918dd74e4d3e0ceef990600090a1565b600054600160a060020a0316331461058057600080fd5b6002805460ff1916911515919091179055565b600254610100900460ff1681565b60045481565b60035481565b60055481565b600d60209081526000928352604080842090915290825290205481565b600054600160a060020a031633146105e757600080fd5b600160a060020a03919091166000908152600160205260409020805460ff1916911515919091179055565b600254600090819060ff161580156106325750600254610100900460ff16155b151561063d57600080fd5b845160001061064b57600080fd5b6000841161065857600080fd5b60008911806106675750600088115b806106725750600086115b151561067d57600080fd5b620f424083111561068d57600080fd5b61069a8989898988611612565b15156001146106a857600080fd5b60048054600101908190556040516c01000000000000000000000000308181026020808501918252339384026034860152604885018690528a51929593948b936068909101918401908083835b602083106107145780518252601f1990920191602091820191016106f5565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040526040518082805190602001908083835b6020831061077a5780518252601f19909201916020918201910161075b565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600454600090815260078352939093208381556001810180543373ffffffffffffffffffffffffffffffffffffffff199091161790558a5193975095506107f49450600586019350890191905061363e565b5060068101849055600781018390556008808201805460ff19166001179055426009830155600454600084815260209290925260408220558911806108395750600088115b156108555761084a828a8a8a6116f8565b151561085557600080fd5b6000861115610873576108688287611ba5565b151561087357600080fd5b816000191633600160a060020a03167f6fbbdc0d9f31b60e23dd3e55df0d034195309d1930f93bc275eec07be7c9f6f88b8b8b866002015487600301548860040154896005018a600601548b600701548c60090154604051808b81526020018a815260200189600160c060020a031916600160c060020a03191681526020018881526020018781526020018681526020018060200185815260200184815260200183815260200182810382528681815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b50509b50505050505050505050505060405180910390a3505050505050505050565b60025460ff1681565b60025460009081908190819060ff161580156109ea5750600254610100900460ff16155b15156109f557600080fd5b60008981526008602052604081205411610a0e57600080fd5b6000898152600860209081526040808320548352600790915290206001810154909450600160a060020a03163314610a4557600080fd5b6000881180610a545750600087115b80610a5f5750600085115b1515610a6a57600080fd5b610a778989898989611df5565b1515610a8257600080fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b505050506040513d6060811015610aff57600080fd5b5060208101516040909101519093509150600160a060020a0383161515610b2557600080fd5b600182151514610b3457600080fd5b5081600085118015610b4a5750600884015460ff165b8015610b5a575060008460030154115b8015610b6a575060008460040154115b15610c0557836004015481600160a060020a03166356307efc336040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050506040513d6020811015610bf957600080fd5b505114610c0557600080fd5b60088401805460ff191660011790556000881180610c235750600087115b15610c3f57610c34898989896116f8565b1515610c3f57600080fd5b6000851115610c5d57610c528986611ba5565b1515610c5d57600080fd5b60028401546003850154600486015460408051938452602084019290925282820152518a9133917f59178f3d20de8be99cc2de6de96d8b2555aff301b54fc420faf0af67348a399e9181900360600190a3505050505050505050565b600c6020526000908152604090205481565b600054600160a060020a031681565b60016020526000908152604090205460ff1681565b3360008181526001602081905260409091205460ff1615151480610d205750600054600160a060020a038281169116145b1515610d2b57600080fd5b50600355565b60025460009060ff16158015610d4f5750600254610100900460ff16155b1515610d5a57600080fd5b620f4240821115610d6a57600080fd5b60008381526008602052604081205411610d8357600080fd5b506000828152600860209081526040808320548352600790915290206001810154600160a060020a03163314610db857600080fd5b60078101829055604080518381529051849133917f6c4a0cfd4af9f173dec0ac350616d6c855be630c8c83b3cd18879ad5a6bf6d299181900360200190a3505050565b60025460009060ff16158015610e195750600254610100900460ff16155b1515610e2457600080fd5b60008681526008602052604081205411610e3d57600080fd5b6000851180610e4c5750600084115b80610e575750600082115b1515610e6257600080fd5b506000858152600860209081526040808320548352600790915290206001810154600160a060020a03163314610e9757600080fd5b600881015460ff1615156001148015610ec25750600081600201541180610ec2575060008160030154115b1515610ecd57600080fd5b610ee885858585856002015486600301548760060154612005565b1515610ef357600080fd5b6000851180610f025750600084115b15610f1e57610f13868686866121b6565b1515610f1e57600080fd5b6000821115610f3c57610f318683612651565b1515610f3c57600080fd5b805460018201546002830154600384015460048501546040805193845260208401929092528282015251600160a060020a03909216917f39144879f55f49a6ea59a28ae61f331e8ce510cd47c82bd317abba766c8f56649181900360600190a3505050505050565b620f424081565b6000806000806060600080600080610fc16136bc565b60008b81526008602052604081205411610fda57600080fd5b60008b8152600860209081526040808320548352600782529182902082516101408101845281548152600180830154600160a060020a0316828501526002808401548387015260038401546060840152600484015460808401526005840180548751601f948216156101000260001901909116929092049283018690048602820186019096528181529194929360a086019391908301828280156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982015481525050905080602001518160400151826060015183608001518460a001518560c001518660e00151876101000151886101200151849450995099509950995099509950995099509950509193959799909294969850565b600254600090819060ff161580156111755750600254610100900460ff16155b151561118057600080fd5b6000888152600860205260408120541161119957600080fd5b336000908152600b6020908152604082208a8352905280fd5b602083106111d15780518252601f1990920191602091820191016111b2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060096000600554815260200190815260200160002090508181600001816000191690555087816001018160001916905550338160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550868160030160006101000a815481600160a060020a030219169083600160a060020a03160217905550428160070181905550600554600a600084600019166000191681526020019081526020016000208190555081600b600033600160a060020a0316600160a060020a0316815260200190815260200160002060008a6000191660001916815260200190815260200160002081600019169055506000600860ff16118015611313575060008611806113135750600085115b1561132f57611324828787876128e7565b151561132f57600080fd5b600083111561134d576113428284612db5565b151561134d57600080fd5b6002810154815460018301546003840154600485015460058601546006870154604080519687526020870195909552600160a060020a0393841686860152606086018d9052608086018c9052600160c060020a03198b1660a087015260c086019290925260e085015261010084015290519216917f94c9c25d021fd2b1f6476cdbfdb7c2eaed2113f9e8a1652415edae376b861085918190036101200190a25050505050505050565b600254600090819060ff161580156114165750600254610100900460ff16155b151561142157600080fd5b6000838152600860205260408120541161143a57600080fd5b6000838152600860209081526040808320548352600790915290206001810154909250600160a060020a0316331461147157600080fd5b600882015460ff161515600114801561149c575060008260020154118061149c575060008260030154115b15156114a757600080fd5b60088201805460ff1916905560028201546000101561156057600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b15801561151357600080fd5b505af1158015611527573d6000803e3d6000fd5b505050506040513d606081101561153d57600080fd5b505160028301549091506115559084906000846121b6565b151561156057600080fd5b60008260030154111561158e5761157b838360030154612651565b151561158657600080fd5b600060048301555b60018201546040518491600160a060020a0316907eeb6a306a149d2ec8a5e5f228483a31d06863f4cd48237ddf5c1c236805def890600090a3505050565b600054600160a060020a031633146115e357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000808611806116225750600085115b156116e4576006546040805160e360020a63042fb71d0281526004810189905260248101889052600160c060020a031987166044820152905184926116cf928792600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561169757600080fd5b505af11580156116ab573d6000803e3d6000fd5b505050506040513d60208110156116c157600080fd5b50519063ffffffff61334616565b106116dc575060016116ef565b5060006116ef565b8183106116dc575060015b95945050505050565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319841660048201528151600093849360609384938693899385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561177657600080fd5b505af115801561178a573d6000803e3d6000fd5b505050506040513d60408110156117a057600080fd5b5080516020909101519092509050600160a060020a038216158015906117c857506001811515145b15156117d357600080fd5b60076000600860008f600019166000191681526020019081526020016000205481526020019081526020016000209650600660009054906101000a9004600160a060020a0316600160a060020a031663492611438860010160009054906101000a9004600160a060020a03168d8d8d6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183815260200182600160c060020a031916600160c060020a0319168152602001945050505050600060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156118f357600080fd5b81019080805164010000000081111561190b57600080fd5b8201602081018481111561191e57600080fd5b815185602082028301116401000000008211171561193b57600080fd5b5050929190602001805164010000000081111561195757600080fd5b8201602081018481111561196a57600080fd5b815185602082028301116401000000008211171561198757600080fd5b505092919050505095509550611a55600660009054906101000a9004600160a060020a0316600160a060020a031663217db8e88d8d8d6040518463ffffffff1660e060020a0281526004018084815260200183815260200182600160c060020a031916600160c060020a03191681526020019350505050602060405180830381600087803b158015611a1857600080fd5b505af1158015611a2c573d6000803e3d6000fd5b505050506040513d6020811015611a4257600080fd5b505160028901549063ffffffff61334616565b6002880155600093505b8551841015611b93578551600090879086908110611a7957fe5b90602001906020020151600160a060020a031614158015611ab1575060008585815181101515611aa557fe5b90602001906020020151115b15611b88578584815181101515611ac457fe5b6020908102909101015160018801548651600160a060020a03928316926331a8aeb3921690889088908110611af557fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611b5157600080fd5b505af1158015611b65573d6000803e3d6000fd5b505050506040513d6020811015611b7b57600080fd5b50511515611b8857600080fd5b600190930192611a5f565b5060019b9a5050505050505050505050565b6000806000806000600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015611c0057600080fd5b505af1158015611c14573d6000803e3d6000fd5b505050506040513d6060811015611c2a57600080fd5b5060208101516040909101519094509250600160a060020a0384161515611c5057600080fd5b600183151514611c5f57600080fd5b6000878152600860209081526040808320548352600790915290206003810154909250611c92908763ffffffff61334616565b6003830155506001810154604080517f56307efc000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152905185928316916356307efc9160248083019260209291908290030181600087803b158015611d0257600080fd5b505af1158015611d16573d6000803e3d6000fd5b505050506040513d6020811015611d2c57600080fd5b505160048084018290556001840154604080517f9b66da9c000000000000000000000000000000000000000000000000000000008152600160a060020a0392831693810193909352602483018a90526044830193909352915191831691639b66da9c916064808201926020929091908290030181600087803b158015611db157600080fd5b505af1158015611dc5573d6000803e3d6000fd5b505050506040513d6020811015611ddb57600080fd5b50511515611de857600080fd5b5060019695505050505050565b6000611dff6136bc565b6000878152600860209081526040808320548352600782529182902082516101408101845281548152600180830154600160a060020a0316828501526002808401548387015260038401546060840152600484015460808401526005840180548751601f948216156101000260001901909116929092049283018690048602820186019096528181529194929360a08601939190830182828015611ee45780601f10611eb957610100808354040283529160200191611ee4565b820191906000526020600020905b815481529060010190602001808311611ec757829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff161515606082015260099091015460809091015290506000861180611f2c5750600085115b15611fc95760c08101516060820151604080840151600654825160e360020a63042fb71d028152600481018c9052602481018b9052600160c060020a03198a1660448201529251611fc09493611fb4939284928b92600160a060020a039092169163217db8e89160648083019260209291908290030181600087803b15801561169757600080fd5b9063ffffffff61334616565b10159150611ffb565b6000831115611ff6578060c00151611fc084611fb48460600151856040015161334690919063ffffffff16565b600091505b5095945050505050565b6000808811806120155750600087115b80156120b357506006546040805160e360020a63042fb71d028152600481018b9052602481018a9052600160c060020a0319891660448201529051600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561208457600080fd5b505af1158015612098573d6000803e3d6000fd5b505050506040513d60208110156120ae57600080fd5b505184105b806120bd57508483105b80612191575060008811806120d25750600087115b801561219157508161218f6120ed858863ffffffff61335916565b6006546040805160e360020a63042fb71d028152600481018e9052602481018d9052600160c060020a03198c1660448201529051611fb492600160a060020a03169163217db8e89160648083019260209291908290030181600087803b15801561215657600080fd5b505af115801561216a573d6000803e3d6000fd5b505050506040513d602081101561218057600080fd5b5051889063ffffffff61335916565b105b8061219a575060005b156121a7575060006121ab565b5060015b979650505050505050565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319841660048201528151600093849360609384938693899385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b505050506040513d604081101561225e57600080fd5b5080516020909101519092509050600160a060020a0382161580159061228657506001811515145b151561229157600080fd5b60076000600860008f600019166000191681526020019081526020016000205481526020019081526020016000209650600660009054906101000a9004600160a060020a0316600160a060020a0316630db460bc8860010160009054906101000a9004600160a060020a03168d8d8d6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183815260200182600160c060020a031916600160c060020a0319168152602001945050505050600060405180830381600087803b15801561237457600080fd5b505af1158015612388573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156123b157600080fd5b8101908080516401000000008111156123c957600080fd5b820160208101848111156123dc57600080fd5b81518560208202830111640100000000821117156123f957600080fd5b5050929190602001805164010000000081111561241557600080fd5b8201602081018481111561242857600080fd5b815185602082028301116401000000008211171561244557600080fd5b505092919050505095509550612513600660009054906101000a9004600160a060020a0316600160a060020a031663217db8e88d8d8d6040518463ffffffff1660e060020a0281526004018084815260200183815260200182600160c060020a031916600160c060020a03191681526020019350505050602060405180830381600087803b1580156124d657600080fd5b505af11580156124ea573d6000803e3d6000fd5b505050506040513d602081101561250057600080fd5b505160028901549063ffffffff61335916565b6002880155600093505b8551841015611b9357855160009087908690811061253757fe5b90602001906020020151600160a060020a03161415801561256f57506000858581518110151561256357fe5b90602001906020020151115b1561264657858481518110151561258257fe5b6020908102909101015160018801548651600160a060020a039283169263731a3b069216908890889081106125b357fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561260f57600080fd5b505af1158015612623573d6000803e3d6000fd5b505050506040513d602081101561263957600080fd5b5051151561264657600080fd5b60019093019261251d565b6000806000806000600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b1580156126ac57600080fd5b505af11580156126c0573d6000803e3d6000fd5b505050506040513d60608110156126d657600080fd5b5060208101516040909101519094509250600160a060020a03841615156126fc57600080fd5b60018315151461270b57600080fd5b600087815260086020908152604080832054835260079091529020600381015490925061273e908763ffffffff61335916565b6003830155506001810154600480830154604080517f9d8c1eed000000000000000000000000000000000000000000000000000000008152600160a060020a0394851693810193909352602483018990526044830191909152518592831691639d8c1eed9160648083019260209291908290030181600087803b158015611db157600080fd5b8154815290600101906020018083116127c4575050509183525050600682015460208201526007820154604080830191909152600883015460ff1615156060808401919091526009909301546080909201919091529082015190820151919350612834919063ffffffff61334616565b905060008711806128455750600086115b156128c3576006546040805160e360020a63042fb71d028152600481018a905260248101899052600160c060020a031988166044820152905183926128ba928892600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561169757600080fd5b101592506128dc565b60008411156128d7578084101592506128dc565b600092505b505095945050505050565b6000806128f26136bc565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319871660048201528151600093889385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561296757600080fd5b505af115801561297b573d6000803e3d6000fd5b505050506040513d604081101561299157600080fd5b5080516020909101519092509050600160a060020a038216158015906129b957506001811515145b15156129c457600080fd5b60008b8152600a602090815260408083205483526009825280832060018082015485526008845282852054855260078452938290208251610140810184528154815281860154600160a060020a0316818601526002808301548286015260038301546060830152600483015460808301526005830180548651601f99821615610100026000190190911692909204978801879004870282018701909552868152929b5094909360a08601939190830182828015612ac25780601f10612a9757610100808354040283529160200191612ac2565b820191906000526020600020905b815481529060010190602001808311612aa557829003601f168201915b50505091835250506006828101546020808401919091526007840154604080850191909152600885015460ff161515606085015260099094015460809093019290925254825160e360020a63042fb71d028152600481018f9052602481018e9052600160c060020a03198d1660448201529251939850600160a060020a03169263217db8e89260648082019392918290030181600087803b158015612b6657600080fd5b505af1158015612b7a573d6000803e3d6000fd5b505050506040513d6020811015612b9057600080fd5b505160048701556002860154612bb190600160a060020a03168b8b8b61336b565b1515612bbc57600080fd5b612bea620f4240612bde8760e00151896004015461360090919063ffffffff16565b9063ffffffff61362916565b602080870151600160a060020a03166000908152600c9091526040902054909450612c1b908563ffffffff61334616565b60208087018051600160a060020a039081166000908152600c84526040808220959095558a54925160028c015460018d015460048e015460e08e01518951928352978201528088018c905260608101969096526080860192909252945192948216939116917f8b0e560b6684dceda8198167e8321a34e29f12089e560d042082e653853643139181900360a00190a46004860154612cec90612cc3908663ffffffff61335916565b6003880154600160a060020a03166000908152600c60205260409020549063ffffffff61334616565b600387018054600160a060020a039081166000908152600c602052604090209290925587549054600289015460018a015460048b015493949283169391909216917f8b0e560b6684dceda8198167e8321a34e29f12089e560d042082e6538536431391612d5f818b63ffffffff61335916565b60e08c0151612d7890620f42409063ffffffff61335916565b60408051948552602085019390935283830191909152606083015260016080830152519081900360a00190a45060019a9950505050505050505050565b600080600080612dc36136bc565b600080600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015612e1957600080fd5b505af1158015612e2d573d6000803e3d6000fd5b505050506040513d6060811015612e4357600080fd5b5060208101516040909101519096509450600160a060020a0386161515612e6957600080fd5b600185151514612e7857600080fd5b6000898152600a602090815260408083205483526009825280832060018082015485526008845282852054855260078452938290208251610140810184528154815281860154600160a060020a0316818601526002808301548286015260038301546060830152600483015460808301526005830180548651601f9982161561010002600019019091169290920497880187900487028201870190955286815292995094909360a08601939190830182828015612f765780601f10612f4b57610100808354040283529160200191612f76565b820191906000526020600020905b815481529060010190602001808311612f5957829003601f168201915b505050918352505060068201546020808301919091526007830154604080840191909152600884015460ff1615156060840152600990930154608090920191909152600587018b9055600287015482517f56307efc000000000000000000000000000000000000000000000000000000008152600160a060020a03918216600482015292519396508995508516926356307efc9260248082019392918290030181600087803b15801561302857600080fd5b505af115801561303c573d6000803e3d6000fd5b505050506040513d602081101561305257600080fd5b5051600685015560028401546005850154604080517feca74981000000000000000000000000000000000000000000000000000000008152600160a060020a0393841660048201523060248201526044810192909252519184169163eca74981916064808201926020929091908290030181600087803b1580156130d557600080fd5b505af11580156130e9573d6000803e3d6000fd5b505050506040513d60208110156130ff57600080fd5b5051151561310c57600080fd5b61312e620f4240612bde8560e00151876005015461360090919063ffffffff16565b602080850151600160a060020a03166000908152600d8252604080822060068901548352909252205490915061316a908263ffffffff61334616565b60208085018051600160a060020a039081166000908152600d8452604080822060068b0180548452908652818320969096558954935160028b015460018c015460058d0154985460e08d01518551928352988201999099528084019890985260608801899052608088019690965260a087019290925251929490821693909116917f149919c59d6285d010a6d0e7d8dde6789a91a4d40e84b23d400c44b1d0428ddd9181900360c00190a460058401546132669061322e908363ffffffff61335916565b6003860154600160a060020a03166000908152600d6020908152604080832060068a015484529091529020549063ffffffff61334616565b600385018054600160a060020a039081166000908152600d6020908152604080832060068b0180548552925290912093909355865491546002880154600189015460058a0154955494959284169491909316927f149919c59d6285d010a6d0e7d8dde6789a91a4d40e84b23d400c44b1d0428ddd9290916132ed828963ffffffff61335916565b60e08b015161330690620f42409063ffffffff61335916565b6040805195865260208601949094528484019290925260608401526080830152600160a0830152519081900360c00190a450600198975050505050505050565b8181018281101561335357fe5b92915050565b60008282111561336557fe5b50900390565b600654604080517f49261143000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820187905260448201869052600160c060020a03198516606483015291516000936060938493869391909216916349261143916084808301928692919082900301818387803b1580156133f957600080fd5b505af115801561340d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561343657600080fd5b81019080805164010000000081111561344e57600080fd5b8201602081018481111561346157600080fd5b815185602082028301116401000000008211171561347e57600080fd5b5050929190602001805164010000000081111561349a57600080fd5b820160208101848111156134ad57600080fd5b81518560208202830111640100000000821117156134ca57600080fd5b50949750955060009450505050505b82518110156121a75782516000908490839081106134f357fe5b90602001906020020151600160a060020a03161415801561352b57506000828281518110151561351f57fe5b90602001906020020151115b156135f857828181518110151561353e57fe5b90602001906020020151600160a060020a031663a144a3e08930858581518110151561356657fe5b60209081029091018101516040805160e060020a63ffffffff8816028152600160a060020a03958616600482015293909416602484015260448301529151606480830193928290030181600087803b1580156135c157600080fd5b505af11580156135d5573d6000803e3d6000fd5b505050506040513d60208110156135eb57600080fd5b505115156135f857600080fd5b6001016134d9565b600082151561361157506000613353565b5081810281838281151561362157fe5b041461335357fe5b6000818381151561363657fe5b049392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061367f57805160ff19168380011785556136ac565b828001600101855582156136ac579182015b828111156136ac578251825591602001919060010190613691565b506136b892915061371e565b5090565b61014060405190810160405280600080191681526020016000600160a060020a03168152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600015158152602001600081525090565b61373891905b808211156136b85760008155600101613724565b905600a165627a7a723058207277813acbbccdc0225482944a60dea593e6b0bebabd97b74e67feff2237a9880029","deployedBytecode":"0x60806040526004361061010e5763ffffffff60e060020a6000350416631554611f811461011357806316c38b3c1461012a5780631f3a0e4114610144578063202352f71461016d57806331f9e35b146101945780633b6a08da146101a957806347eecd48146101be57806353d6fd59146101e2578063587996ed146102085780635c975abb1461028657806370660f7c1461029b5780637af33849146102c95780638da5cb5b146102ea5780639b19251a1461031b578063b1551b951461033c578063b380b0d414610354578063c3db397f1461036f578063caf297651461039d578063e2499b98146103b2578063e30d52e914610490578063e6ab96ed146104ca578063f2fde38b146104e2575b600080fd5b34801561011f57600080fd5b50610128610503565b005b34801561013657600080fd5b506101286004351515610569565b34801561015057600080fd5b50610159610593565b604080519115158252519081900360200190f35b34801561017957600080fd5b506101826105a1565b60408051918252519081900360200190f35b3480156101a057600080fd5b506101826105a7565b3480156101b557600080fd5b506101826105ad565b3480156101ca57600080fd5b50610182600160a060020a03600435166024356105b3565b3480156101ee57600080fd5b50610128600160a060020a036004351660243515156105d0565b34801561021457600080fd5b50604080516020601f608435600481810135928301849004840285018401909552818452610128948035946024803595600160c060020a031960443516956064359536959460a49490939101919081908401838280828437509497505084359550505060209092013591506106129050565b34801561029257600080fd5b506101596109bd565b3480156102a757600080fd5b50610128600435602435604435600160c060020a0319606435166084356109c6565b3480156102d557600080fd5b50610182600160a060020a0360043516610cb9565b3480156102f657600080fd5b506102ff610ccb565b60408051600160a060020a039092168252519081900360200190f35b34801561032757600080fd5b50610159600160a060020a0360043516610cda565b34801561034857600080fd5b50610128600435610cef565b34801561036057600080fd5b50610128600435602435610d31565b34801561037b57600080fd5b50610128600435602435604435600160c060020a031960643516608435610dfb565b3480156103a957600080fd5b50610182610fa4565b3480156103be57600080fd5b506103ca600435610fab565b604051808a600160a060020a0316600160a060020a031681526020018981526020018881526020018781526020018060200186815260200185815260200184151515158152602001838152602001828103825287818151815260200191508051906020019080838360005b8381101561044d578181015183820152602001610435565b50505050905090810190601f16801561047a5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b34801561049c57600080fd5b50610128600435600160a060020a0360243516604435606435600160c060020a03196084351660a435611155565b3480156104d657600080fd5b506101286004356113f6565b3480156104ee57600080fd5b50610128600160a060020a03600435166115cc565b600054600160a060020a0316331461051a57600080fd5b600254610100900460ff161561052f57600080fd5b6002805461ff0019166101001790556040517f16ed36fbe43aed6ba7426b24d35620696380d398f2f22f918dd74e4d3e0ceef990600090a1565b600054600160a060020a0316331461058057600080fd5b6002805460ff1916911515919091179055565b600254610100900460ff1681565b60045481565b60035481565b60055481565b600d60209081526000928352604080842090915290825290205481565b600054600160a060020a031633146105e757600080fd5b600160a060020a03919091166000908152600160205260409020805460ff1916911515919091179055565b600254600090819060ff161580156106325750600254610100900460ff16155b151561063d57600080fd5b845160001061064b57600080fd5b6000841161065857600080fd5b60008911806106675750600088115b806106725750600086115b151561067d57600080fd5b620f424083111561068d57600080fd5b61069a8989898988611612565b15156001146106a857600080fd5b60048054600101908190556040516c01000000000000000000000000308181026020808501918252339384026034860152604885018690528a51929593948b936068909101918401908083835b602083106107145780518252601f1990920191602091820191016106f5565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040526040518082805190602001908083835b6020831061077a5780518252601f19909201916020918201910161075b565b51815160209384036101000a60001901801990921691161790526040805192909401829003909120600454600090815260078352939093208381556001810180543373ffffffffffffffffffffffffffffffffffffffff199091161790558a5193975095506107f49450600586019350890191905061363e565b5060068101849055600781018390556008808201805460ff19166001179055426009830155600454600084815260209290925260408220558911806108395750600088115b156108555761084a828a8a8a6116f8565b151561085557600080fd5b6000861115610873576108688287611ba5565b151561087357600080fd5b816000191633600160a060020a03167f6fbbdc0d9f31b60e23dd3e55df0d034195309d1930f93bc275eec07be7c9f6f88b8b8b866002015487600301548860040154896005018a600601548b600701548c60090154604051808b81526020018a815260200189600160c060020a031916600160c060020a03191681526020018881526020018781526020018681526020018060200185815260200184815260200183815260200182810382528681815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561099b5780601f106109705761010080835404028352916020019161099b565b820191906000526020600020905b81548152906001019060200180831161097e57829003601f168201915b50509b50505050505050505050505060405180910390a3505050505050505050565b60025460ff1681565b60025460009081908190819060ff161580156109ea5750600254610100900460ff16155b15156109f557600080fd5b60008981526008602052604081205411610a0e57600080fd5b6000898152600860209081526040808320548352600790915290206001810154909450600160a060020a03163314610a4557600080fd5b6000881180610a545750600087115b80610a5f5750600085115b1515610a6a57600080fd5b610a778989898989611df5565b1515610a8257600080fd5b600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015610ad557600080fd5b505af1158015610ae9573d6000803e3d6000fd5b505050506040513d6060811015610aff57600080fd5b5060208101516040909101519093509150600160a060020a0383161515610b2557600080fd5b600182151514610b3457600080fd5b5081600085118015610b4a5750600884015460ff165b8015610b5a575060008460030154115b8015610b6a575060008460040154115b15610c0557836004015481600160a060020a03166356307efc336040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a03168152602001915050602060405180830381600087803b158015610bcf57600080fd5b505af1158015610be3573d6000803e3d6000fd5b505050506040513d6020811015610bf957600080fd5b505114610c0557600080fd5b60088401805460ff191660011790556000881180610c235750600087115b15610c3f57610c34898989896116f8565b1515610c3f57600080fd5b6000851115610c5d57610c528986611ba5565b1515610c5d57600080fd5b60028401546003850154600486015460408051938452602084019290925282820152518a9133917f59178f3d20de8be99cc2de6de96d8b2555aff301b54fc420faf0af67348a399e9181900360600190a3505050505050505050565b600c6020526000908152604090205481565b600054600160a060020a031681565b60016020526000908152604090205460ff1681565b3360008181526001602081905260409091205460ff1615151480610d205750600054600160a060020a038281169116145b1515610d2b57600080fd5b50600355565b60025460009060ff16158015610d4f5750600254610100900460ff16155b1515610d5a57600080fd5b620f4240821115610d6a57600080fd5b60008381526008602052604081205411610d8357600080fd5b506000828152600860209081526040808320548352600790915290206001810154600160a060020a03163314610db857600080fd5b60078101829055604080518381529051849133917f6c4a0cfd4af9f173dec0ac350616d6c855be630c8c83b3cd18879ad5a6bf6d299181900360200190a3505050565b60025460009060ff16158015610e195750600254610100900460ff16155b1515610e2457600080fd5b60008681526008602052604081205411610e3d57600080fd5b6000851180610e4c5750600084115b80610e575750600082115b1515610e6257600080fd5b506000858152600860209081526040808320548352600790915290206001810154600160a060020a03163314610e9757600080fd5b600881015460ff1615156001148015610ec25750600081600201541180610ec2575060008160030154115b1515610ecd57600080fd5b610ee885858585856002015486600301548760060154612005565b1515610ef357600080fd5b6000851180610f025750600084115b15610f1e57610f13868686866121b6565b1515610f1e57600080fd5b6000821115610f3c57610f318683612651565b1515610f3c57600080fd5b805460018201546002830154600384015460048501546040805193845260208401929092528282015251600160a060020a03909216917f39144879f55f49a6ea59a28ae61f331e8ce510cd47c82bd317abba766c8f56649181900360600190a3505050505050565b620f424081565b6000806000806060600080600080610fc16136bc565b60008b81526008602052604081205411610fda57600080fd5b60008b8152600860209081526040808320548352600782529182902082516101408101845281548152600180830154600160a060020a0316828501526002808401548387015260038401546060840152600484015460808401526005840180548751601f948216156101000260001901909116929092049283018690048602820186019096528181529194929360a086019391908301828280156110bf5780601f10611094576101008083540402835291602001916110bf565b820191906000526020600020905b8154815290600101906020018083116110a257829003601f168201915b5050505050815260200160068201548152602001600782015481526020016008820160009054906101000a900460ff16151515158152602001600982015481525050905080602001518160400151826060015183608001518460a001518560c001518660e00151876101000151886101200151849450995099509950995099509950995099509950509193959799909294969850565b600254600090819060ff161580156111755750600254610100900460ff16155b151561118057600080fd5b6000888152600860205260408120541161119957600080fd5b336000908152600b6020908152604082208a8352905280fd5b602083106111d15780518252601f1990920191602091820191016111b2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060096000600554815260200190815260200160002090508181600001816000191690555087816001018160001916905550338160020160006101000a815481600160a060020a030219169083600160a060020a03160217905550868160030160006101000a815481600160a060020a030219169083600160a060020a03160217905550428160070181905550600554600a600084600019166000191681526020019081526020016000208190555081600b600033600160a060020a0316600160a060020a0316815260200190815260200160002060008a6000191660001916815260200190815260200160002081600019169055506000600860ff16118015611313575060008611806113135750600085115b1561132f57611324828787876128e7565b151561132f57600080fd5b600083111561134d576113428284612db5565b151561134d57600080fd5b6002810154815460018301546003840154600485015460058601546006870154604080519687526020870195909552600160a060020a0393841686860152606086018d9052608086018c9052600160c060020a03198b1660a087015260c086019290925260e085015261010084015290519216917f94c9c25d021fd2b1f6476cdbfdb7c2eaed2113f9e8a1652415edae376b861085918190036101200190a25050505050505050565b600254600090819060ff161580156114165750600254610100900460ff16155b151561142157600080fd5b6000838152600860205260408120541161143a57600080fd5b6000838152600860209081526040808320548352600790915290206001810154909250600160a060020a0316331461147157600080fd5b600882015460ff161515600114801561149c575060008260020154118061149c575060008260030154115b15156114a757600080fd5b60088201805460ff1916905560028201546000101561156057600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b15801561151357600080fd5b505af1158015611527573d6000803e3d6000fd5b505050506040513d606081101561153d57600080fd5b505160028301549091506115559084906000846121b6565b151561156057600080fd5b60008260030154111561158e5761157b838360030154612651565b151561158657600080fd5b600060048301555b60018201546040518491600160a060020a0316907eeb6a306a149d2ec8a5e5f228483a31d06863f4cd48237ddf5c1c236805def890600090a3505050565b600054600160a060020a031633146115e357600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6000808611806116225750600085115b156116e4576006546040805160e360020a63042fb71d0281526004810189905260248101889052600160c060020a031987166044820152905184926116cf928792600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561169757600080fd5b505af11580156116ab573d6000803e3d6000fd5b505050506040513d60208110156116c157600080fd5b50519063ffffffff61334616565b106116dc575060016116ef565b5060006116ef565b8183106116dc575060015b95945050505050565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319841660048201528151600093849360609384938693899385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561177657600080fd5b505af115801561178a573d6000803e3d6000fd5b505050506040513d60408110156117a057600080fd5b5080516020909101519092509050600160a060020a038216158015906117c857506001811515145b15156117d357600080fd5b60076000600860008f600019166000191681526020019081526020016000205481526020019081526020016000209650600660009054906101000a9004600160a060020a0316600160a060020a031663492611438860010160009054906101000a9004600160a060020a03168d8d8d6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183815260200182600160c060020a031916600160c060020a0319168152602001945050505050600060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156118f357600080fd5b81019080805164010000000081111561190b57600080fd5b8201602081018481111561191e57600080fd5b815185602082028301116401000000008211171561193b57600080fd5b5050929190602001805164010000000081111561195757600080fd5b8201602081018481111561196a57600080fd5b815185602082028301116401000000008211171561198757600080fd5b505092919050505095509550611a55600660009054906101000a9004600160a060020a0316600160a060020a031663217db8e88d8d8d6040518463ffffffff1660e060020a0281526004018084815260200183815260200182600160c060020a031916600160c060020a03191681526020019350505050602060405180830381600087803b158015611a1857600080fd5b505af1158015611a2c573d6000803e3d6000fd5b505050506040513d6020811015611a4257600080fd5b505160028901549063ffffffff61334616565b6002880155600093505b8551841015611b93578551600090879086908110611a7957fe5b90602001906020020151600160a060020a031614158015611ab1575060008585815181101515611aa557fe5b90602001906020020151115b15611b88578584815181101515611ac457fe5b6020908102909101015160018801548651600160a060020a03928316926331a8aeb3921690889088908110611af557fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b158015611b5157600080fd5b505af1158015611b65573d6000803e3d6000fd5b505050506040513d6020811015611b7b57600080fd5b50511515611b8857600080fd5b600190930192611a5f565b5060019b9a5050505050505050505050565b6000806000806000600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015611c0057600080fd5b505af1158015611c14573d6000803e3d6000fd5b505050506040513d6060811015611c2a57600080fd5b5060208101516040909101519094509250600160a060020a0384161515611c5057600080fd5b600183151514611c5f57600080fd5b6000878152600860209081526040808320548352600790915290206003810154909250611c92908763ffffffff61334616565b6003830155506001810154604080517f56307efc000000000000000000000000000000000000000000000000000000008152600160a060020a039283166004820152905185928316916356307efc9160248083019260209291908290030181600087803b158015611d0257600080fd5b505af1158015611d16573d6000803e3d6000fd5b505050506040513d6020811015611d2c57600080fd5b505160048084018290556001840154604080517f9b66da9c000000000000000000000000000000000000000000000000000000008152600160a060020a0392831693810193909352602483018a90526044830193909352915191831691639b66da9c916064808201926020929091908290030181600087803b158015611db157600080fd5b505af1158015611dc5573d6000803e3d6000fd5b505050506040513d6020811015611ddb57600080fd5b50511515611de857600080fd5b5060019695505050505050565b6000611dff6136bc565b6000878152600860209081526040808320548352600782529182902082516101408101845281548152600180830154600160a060020a0316828501526002808401548387015260038401546060840152600484015460808401526005840180548751601f948216156101000260001901909116929092049283018690048602820186019096528181529194929360a08601939190830182828015611ee45780601f10611eb957610100808354040283529160200191611ee4565b820191906000526020600020905b815481529060010190602001808311611ec757829003601f168201915b50505091835250506006820154602082015260078201546040820152600882015460ff161515606082015260099091015460809091015290506000861180611f2c5750600085115b15611fc95760c08101516060820151604080840151600654825160e360020a63042fb71d028152600481018c9052602481018b9052600160c060020a03198a1660448201529251611fc09493611fb4939284928b92600160a060020a039092169163217db8e89160648083019260209291908290030181600087803b15801561169757600080fd5b9063ffffffff61334616565b10159150611ffb565b6000831115611ff6578060c00151611fc084611fb48460600151856040015161334690919063ffffffff16565b600091505b5095945050505050565b6000808811806120155750600087115b80156120b357506006546040805160e360020a63042fb71d028152600481018b9052602481018a9052600160c060020a0319891660448201529051600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561208457600080fd5b505af1158015612098573d6000803e3d6000fd5b505050506040513d60208110156120ae57600080fd5b505184105b806120bd57508483105b80612191575060008811806120d25750600087115b801561219157508161218f6120ed858863ffffffff61335916565b6006546040805160e360020a63042fb71d028152600481018e9052602481018d9052600160c060020a03198c1660448201529051611fb492600160a060020a03169163217db8e89160648083019260209291908290030181600087803b15801561215657600080fd5b505af115801561216a573d6000803e3d6000fd5b505050506040513d602081101561218057600080fd5b5051889063ffffffff61335916565b105b8061219a575060005b156121a7575060006121ab565b5060015b979650505050505050565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319841660048201528151600093849360609384938693899385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b505050506040513d604081101561225e57600080fd5b5080516020909101519092509050600160a060020a0382161580159061228657506001811515145b151561229157600080fd5b60076000600860008f600019166000191681526020019081526020016000205481526020019081526020016000209650600660009054906101000a9004600160a060020a0316600160a060020a0316630db460bc8860010160009054906101000a9004600160a060020a03168d8d8d6040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183815260200182600160c060020a031916600160c060020a0319168152602001945050505050600060405180830381600087803b15801561237457600080fd5b505af1158015612388573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156123b157600080fd5b8101908080516401000000008111156123c957600080fd5b820160208101848111156123dc57600080fd5b81518560208202830111640100000000821117156123f957600080fd5b5050929190602001805164010000000081111561241557600080fd5b8201602081018481111561242857600080fd5b815185602082028301116401000000008211171561244557600080fd5b505092919050505095509550612513600660009054906101000a9004600160a060020a0316600160a060020a031663217db8e88d8d8d6040518463ffffffff1660e060020a0281526004018084815260200183815260200182600160c060020a031916600160c060020a03191681526020019350505050602060405180830381600087803b1580156124d657600080fd5b505af11580156124ea573d6000803e3d6000fd5b505050506040513d602081101561250057600080fd5b505160028901549063ffffffff61335916565b6002880155600093505b8551841015611b9357855160009087908690811061253757fe5b90602001906020020151600160a060020a03161415801561256f57506000858581518110151561256357fe5b90602001906020020151115b1561264657858481518110151561258257fe5b6020908102909101015160018801548651600160a060020a039283169263731a3b069216908890889081106125b357fe5b906020019060200201516040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050602060405180830381600087803b15801561260f57600080fd5b505af1158015612623573d6000803e3d6000fd5b505050506040513d602081101561263957600080fd5b5051151561264657600080fd5b60019093019261251d565b6000806000806000600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b1580156126ac57600080fd5b505af11580156126c0573d6000803e3d6000fd5b505050506040513d60608110156126d657600080fd5b5060208101516040909101519094509250600160a060020a03841615156126fc57600080fd5b60018315151461270b57600080fd5b600087815260086020908152604080832054835260079091529020600381015490925061273e908763ffffffff61335916565b6003830155506001810154600480830154604080517f9d8c1eed000000000000000000000000000000000000000000000000000000008152600160a060020a0394851693810193909352602483018990526044830191909152518592831691639d8c1eed9160648083019260209291908290030181600087803b158015611db157600080fd5b8154815290600101906020018083116127c4575050509183525050600682015460208201526007820154604080830191909152600883015460ff1615156060808401919091526009909301546080909201919091529082015190820151919350612834919063ffffffff61334616565b905060008711806128455750600086115b156128c3576006546040805160e360020a63042fb71d028152600481018a905260248101899052600160c060020a031988166044820152905183926128ba928892600160a060020a039092169163217db8e8916064808201926020929091908290030181600087803b15801561169757600080fd5b101592506128dc565b60008411156128d7578084101592506128dc565b600092505b505095945050505050565b6000806128f26136bc565b600654604080517f5ba6ff10000000000000000000000000000000000000000000000000000000008152600160c060020a0319871660048201528151600093889385938493600160a060020a0390931692635ba6ff109260248084019391929182900301818787803b15801561296757600080fd5b505af115801561297b573d6000803e3d6000fd5b505050506040513d604081101561299157600080fd5b5080516020909101519092509050600160a060020a038216158015906129b957506001811515145b15156129c457600080fd5b60008b8152600a602090815260408083205483526009825280832060018082015485526008845282852054855260078452938290208251610140810184528154815281860154600160a060020a0316818601526002808301548286015260038301546060830152600483015460808301526005830180548651601f99821615610100026000190190911692909204978801879004870282018701909552868152929b5094909360a08601939190830182828015612ac25780601f10612a9757610100808354040283529160200191612ac2565b820191906000526020600020905b815481529060010190602001808311612aa557829003601f168201915b50505091835250506006828101546020808401919091526007840154604080850191909152600885015460ff161515606085015260099094015460809093019290925254825160e360020a63042fb71d028152600481018f9052602481018e9052600160c060020a03198d1660448201529251939850600160a060020a03169263217db8e89260648082019392918290030181600087803b158015612b6657600080fd5b505af1158015612b7a573d6000803e3d6000fd5b505050506040513d6020811015612b9057600080fd5b505160048701556002860154612bb190600160a060020a03168b8b8b61336b565b1515612bbc57600080fd5b612bea620f4240612bde8760e00151896004015461360090919063ffffffff16565b9063ffffffff61362916565b602080870151600160a060020a03166000908152600c9091526040902054909450612c1b908563ffffffff61334616565b60208087018051600160a060020a039081166000908152600c84526040808220959095558a54925160028c015460018d015460048e015460e08e01518951928352978201528088018c905260608101969096526080860192909252945192948216939116917f8b0e560b6684dceda8198167e8321a34e29f12089e560d042082e653853643139181900360a00190a46004860154612cec90612cc3908663ffffffff61335916565b6003880154600160a060020a03166000908152600c60205260409020549063ffffffff61334616565b600387018054600160a060020a039081166000908152600c602052604090209290925587549054600289015460018a015460048b015493949283169391909216917f8b0e560b6684dceda8198167e8321a34e29f12089e560d042082e6538536431391612d5f818b63ffffffff61335916565b60e08c0151612d7890620f42409063ffffffff61335916565b60408051948552602085019390935283830191909152606083015260016080830152519081900360a00190a45060019a9950505050505050505050565b600080600080612dc36136bc565b600080600660009054906101000a9004600160a060020a0316600160a060020a031663dc689d3c6040518163ffffffff1660e060020a028152600401606060405180830381600087803b158015612e1957600080fd5b505af1158015612e2d573d6000803e3d6000fd5b505050506040513d6060811015612e4357600080fd5b5060208101516040909101519096509450600160a060020a0386161515612e6957600080fd5b600185151514612e7857600080fd5b6000898152600a602090815260408083205483526009825280832060018082015485526008845282852054855260078452938290208251610140810184528154815281860154600160a060020a0316818601526002808301548286015260038301546060830152600483015460808301526005830180548651601f9982161561010002600019019091169290920497880187900487028201870190955286815292995094909360a08601939190830182828015612f765780601f10612f4b57610100808354040283529160200191612f76565b820191906000526020600020905b815481529060010190602001808311612f5957829003601f168201915b505050918352505060068201546020808301919091526007830154604080840191909152600884015460ff1615156060840152600990930154608090920191909152600587018b9055600287015482517f56307efc000000000000000000000000000000000000000000000000000000008152600160a060020a03918216600482015292519396508995508516926356307efc9260248082019392918290030181600087803b15801561302857600080fd5b505af115801561303c573d6000803e3d6000fd5b505050506040513d602081101561305257600080fd5b5051600685015560028401546005850154604080517feca74981000000000000000000000000000000000000000000000000000000008152600160a060020a0393841660048201523060248201526044810192909252519184169163eca74981916064808201926020929091908290030181600087803b1580156130d557600080fd5b505af11580156130e9573d6000803e3d6000fd5b505050506040513d60208110156130ff57600080fd5b5051151561310c57600080fd5b61312e620f4240612bde8560e00151876005015461360090919063ffffffff16565b602080850151600160a060020a03166000908152600d8252604080822060068901548352909252205490915061316a908263ffffffff61334616565b60208085018051600160a060020a039081166000908152600d8452604080822060068b0180548452908652818320969096558954935160028b015460018c015460058d0154985460e08d01518551928352988201999099528084019890985260608801899052608088019690965260a087019290925251929490821693909116917f149919c59d6285d010a6d0e7d8dde6789a91a4d40e84b23d400c44b1d0428ddd9181900360c00190a460058401546132669061322e908363ffffffff61335916565b6003860154600160a060020a03166000908152600d6020908152604080832060068a015484529091529020549063ffffffff61334616565b600385018054600160a060020a039081166000908152600d6020908152604080832060068b0180548552925290912093909355865491546002880154600189015460058a0154955494959284169491909316927f149919c59d6285d010a6d0e7d8dde6789a91a4d40e84b23d400c44b1d0428ddd9290916132ed828963ffffffff61335916565b60e08b015161330690620f42409063ffffffff61335916565b6040805195865260208601949094528484019290925260608401526080830152600160a0830152519081900360c00190a450600198975050505050505050565b8181018281101561335357fe5b92915050565b60008282111561336557fe5b50900390565b600654604080517f49261143000000000000000000000000000000000000000000000000000000008152600160a060020a0387811660048301526024820187905260448201869052600160c060020a03198516606483015291516000936060938493869391909216916349261143916084808301928692919082900301818387803b1580156133f957600080fd5b505af115801561340d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561343657600080fd5b81019080805164010000000081111561344e57600080fd5b8201602081018481111561346157600080fd5b815185602082028301116401000000008211171561347e57600080fd5b5050929190602001805164010000000081111561349a57600080fd5b820160208101848111156134ad57600080fd5b81518560208202830111640100000000821117156134ca57600080fd5b50949750955060009450505050505b82518110156121a75782516000908490839081106134f357fe5b90602001906020020151600160a060020a03161415801561352b57506000828281518110151561351f57fe5b90602001906020020151115b156135f857828181518110151561353e57fe5b90602001906020020151600160a060020a031663a144a3e08930858581518110151561356657fe5b60209081029091018101516040805160e060020a63ffffffff8816028152600160a060020a03958616600482015293909416602484015260448301529151606480830193928290030181600087803b1580156135c157600080fd5b505af11580156135d5573d6000803e3d6000fd5b505050506040513d60208110156135eb57600080fd5b505115156135f857600080fd5b6001016134d9565b600082151561361157506000613353565b5081810281838281151561362157fe5b041461335357fe5b6000818381151561363657fe5b049392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061367f57805160ff19168380011785556136ac565b828001600101855582156136ac579182015b828111156136ac578251825591602001919060010190613691565b506136b892915061371e565b5090565b61014060405190810160405280600080191681526020016000600160a060020a03168152602001600081526020016000815260200160008152602001606081526020016000815260200160008152602001600015158152602001600081525090565b61373891905b808211156136b85760008155600101613724565b905600a165627a7a723058207277813acbbccdc0225482944a60dea593e6b0bebabd97b74e67feff2237a9880029","sourceMap":"299:34909:0:-;;;5259:93;8:9:-1;5:2;;;30:1;27;20:12;5:2;5259:93:0;;;;;;;;;;;;;238:5:15;:18;;-1:-1:-1;;;;;;238:18:15;;;246:10;238:18;;;;5308:9:0;:40;;-1:-1:-1;;;;;5308:40:0;;;;;;;;;;;;;299:34909;;;;;;","deployedSourceMap":"299:34909:0:-;;;;;;;;;-1:-1:-1;;;299:34909:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6183:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6183:112:0;;;;;;5984:74;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5984:74:0;;;;;;;381:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:18:0;;;;;;;;;;;;;;;;;;;;;;557:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:34:0;;;;;;;;;;;;;;;;;;;;402:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:28:0;;;;594:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:34:0;;;;2567:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2567:88:0;-1:-1:-1;;;;;2567:88:0;;;;;;;830:114:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;830:114:15;-1:-1:-1;;;;;830:114:15;;;;;;;;;7236:1838:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7236:1838:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7236:1838:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7236:1838:0;;-1:-1:-1;;7236:1838:0;;;-1:-1:-1;;;7236:1838:0;;;;;;-1:-1:-1;7236:1838:0;;-1:-1:-1;7236:1838:0;360:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:18:0;;;;14973:2027;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14973:2027:0;;;;;;;-1:-1:-1;;;;;;14973:2027:0;;;;;;;2353:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2353:64:0;-1:-1:-1;;;;;2353:64:0;;;;;44:20:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44:20:15;;;;;;;;-1:-1:-1;;;;;44:20:15;;;;;;;;;;;;;;167:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;167:42:15;-1:-1:-1;;;;;167:42:15;;;;;6422:119:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6422:119:0;;;;;9247:567;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9247:567:0;;;;;;;11672:1541;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11672:1541:0;;;;;;;-1:-1:-1;;;;;;11672:1541:0;;;;;;;484:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;484:52:0;;;;10409:631;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10409:631:0;;;;;;;;;;-1:-1:-1;;;;;10409:631:0;-1:-1:-1;;;;;10409:631:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10409:631:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17462:2114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;17462:2114:0;;;-1:-1:-1;;;;;17462:2114:0;;;;;;;-1:-1:-1;;;;;;17462:2114:0;;;;;;;13370:1060;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13370:1060:0;;;;;567:86:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;567:86:15;-1:-1:-1;;;;;567:86:15;;;;;6183:112:0;308:5:15;;-1:-1:-1;;;;;308:5:15;294:10;:19;286:28;;;;;;6236:6:0;;;;;;;:15;6227:25;;;;;;6256:6;:13;;-1:-1:-1;;6256:13:0;;;;;6278;;;;6256;;6278;6183:112::o;5984:74::-;308:5:15;;-1:-1:-1;;;;;308:5:15;294:10;:19;286:28;;;;;;6038:6:0;:16;;-1:-1:-1;;6038:16:0;;;;;;;;;;5984:74::o;381:18::-;;;;;;;;;:::o;557:34::-;;;;:::o;402:28::-;;;;:::o;594:34::-;;;;:::o;2567:88::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;830:114:15:-;308:5;;-1:-1:-1;;;;;308:5:15;294:10;:19;286:28;;;;;;-1:-1:-1;;;;;908:19:15;;;;;;;;:9;:19;;;;;:32;;-1:-1:-1;;908:32:15;;;;;;;;;;830:114::o;7236:1838:0:-;5444:6;;7891:16;;;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;7480:21;;7504:1;-1:-1:-1;7471:35:0;;;;;;7531:1;7519:13;;7510:23;;;;;;7570:1;7546:21;:25;:55;;;;7600:1;7575:22;:26;7546:55;:80;;;;7625:1;7605:17;:21;7546:80;7537:90;;;;;;;;529:7;7640:39;;;7631:49;;;;;;7693:101;7703:21;7726:22;7750:13;7765:17;7784:9;7693;:101::i;:::-;:109;;7798:4;7693:109;7684:119;;;;;;7843:19;:21;;;;;;;;7920:64;;;7937:4;7920:64;;;;;;;;;;7943:10;7920:64;;;;;;;;;;;;;;;7937:4;;7943:10;;7976:7;;7920:64;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7920:64:0;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7920:64:0;;;7910:75;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;7910:75:0;;;;;;;;;;;;;8043:19;;-1:-1:-1;8028:35:0;;;:14;:35;;;;;;8067:33;;;274:1:-1;8104:25:0;;:38;;8132:10;-1:-1:-1;;8104:38:0;;;;;;8146:31;;7910:75;;-1:-1:-1;8028:35:0;-1:-1:-1;8146:31:0;;-1:-1:-1;8146:21:0;;;;-1:-1:-1;8146:31:0;;;;-1:-1:-1;8146:31:0;:::i;:::-;-1:-1:-1;8181:23:0;;;:35;;;8220:31;;;:51;;;8275:21;;;;:28;;-1:-1:-1;;8275:28:0;8299:4;8275:28;;;8343:3;8307:33;;;:39;8382:19;;-1:-1:-1;8351:28:0;;;;;;;;;;;:50;8439:25;;;:55;;;8493:1;8468:22;:26;8439:55;8406:201;;;8511:90;8530:8;8540:21;8563:22;8587:13;8511:18;:90::i;:::-;8502:100;;;;;;;;8634:1;8614:17;:21;8610:97;;;8651:50;8673:8;8683:17;8651:21;:50::i;:::-;8642:60;;;;;;;;8747:8;8715:355;;;8732:10;-1:-1:-1;;;;;8715:355:0;;8760:21;8786:22;8813:13;8831:14;:28;;;8864:14;:31;;;8900:14;:38;;;8943:14;:21;;8969:14;:23;;;8997:14;:31;;;9033:14;:33;;;8715:355;;;;;;;;;;;;;;-1:-1:-1;;;;;8715:355:0;;-1:-1:-1;;;;;8715:355:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7236:1838;;;;;;;;;:::o;360:18::-;;;;;;:::o;14973:2027::-;5444:6;;15240:36;;;;;;;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;15233:1;15202:28;;;:18;:28;;;;;;:32;15193:42;;;;;;15279:44;15294:28;;;:18;:28;;;;;;;;;15279:44;;:14;:44;;;;;15402:25;;;;15279:44;;-1:-1:-1;;;;;;15402:25:0;15431:10;15402:39;15393:49;;;;;;15479:1;15455:21;:25;:55;;;;15509:1;15484:22;:26;15455:55;:80;;;;15534:1;15514:17;:21;15455:80;15446:90;;;;;;;;15549:108;15567:8;15577:21;15600:22;15624:13;15639:17;15549;:108::i;:::-;15540:118;;;;;;;;16059:9;;;;;;;;;-1:-1:-1;;;;;16059:9:0;-1:-1:-1;;;;;16059:29:0;;:31;;;;;-1:-1:-1;;;16059:31:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16059:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16059:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16059:31:0;;;;;;;;;;;-1:-1:-1;16059:31:0;-1:-1:-1;;;;;;16103:38:0;;;;16094:48;;;;;;16182:4;16155:31;;;;16146:41;;;;;;-1:-1:-1;16226:24:0;16279:1;16259:21;;:46;;;;-1:-1:-1;16284:21:0;;;;;;16259:46;:85;;;;;16343:1;16309:14;:31;;;:35;16259:85;:131;;;;;16389:1;16348:14;:38;;;:42;16259:131;16255:250;;;16461:14;:38;;;16406:16;-1:-1:-1;;;;;16406:39:0;;16446:10;16406:51;;;;;-1:-1:-1;;;16406:51:0;;;;;;;-1:-1:-1;;;;;16406:51:0;-1:-1:-1;;;;;16406:51:0;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16406:51:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16406:51:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16406:51:0;:93;16397:103;;;;;;16509:21;;;:28;;-1:-1:-1;;16509:28:0;16533:4;16509:28;;;-1:-1:-1;16574:25:0;;;:55;;;16628:1;16603:22;:26;16574:55;16541:201;;;16646:90;16665:8;16675:21;16698:22;16722:13;16646:18;:90::i;:::-;16637:100;;;;;;;;16769:1;16749:17;:21;16745:97;;;16786:50;16808:8;16818:17;16786:21;:50::i;:::-;16777:60;;;;;;;;16894:28;;;;16924:31;;;;16957:38;;;;16851:145;;;;;;;;;;;;;;;;;;16884:8;;16872:10;;16851:145;;;;;;;;;14973:2027;;;;;;;;;:::o;2353:64::-;;;;;;;;;;;;;:::o;44:20:15:-;;;-1:-1:-1;;;;;44:20:15;;:::o;167:42::-;;;;;;;;;;;;;;;:::o;6422:119:0:-;6491:10;506:19:15;;;;:9;:19;;;;;;;;;;;:27;;;;:48;;-1:-1:-1;549:5:15;;-1:-1:-1;;;;;537:17:15;;;549:5;;537:17;506:48;497:58;;;;;;;;-1:-1:-1;6507:13:0;:30;6422:119::o;9247:567::-;5444:6;;9482:36;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;529:7;9350:39;;;9341:49;;;;;;9475:1;9444:28;;;:18;:28;;;;;;:32;9435:42;;;;;;-1:-1:-1;9521:44:0;9536:28;;;:18;:28;;;;;;;;;9521:44;;:14;:44;;;;;9644:25;;;;-1:-1:-1;;;;;9644:25:0;9673:10;9644:39;9635:49;;;;;;9689:31;;;:51;;;9750:60;;;;;;;;9782:8;;9770:10;;9750:60;;;;;;;;;9247:567;;;:::o;11672:1541::-;5444:6;;12034:36;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;11933:1;11902:28;;;:18;:28;;;;;;:32;11893:42;;;;;;11972:1;11948:21;:25;:55;;;;12002:1;11977:22;:26;11948:55;:80;;;;12027:1;12007:17;:21;11948:80;11939:90;;;;;;;;-1:-1:-1;12073:44:0;12088:28;;;:18;:28;;;;;;;;;12073:44;;:14;:44;;;;;12196:25;;;;-1:-1:-1;;;;;12196:25:0;12225:10;12196:39;12187:49;;;;;;12330:21;;;;;;:29;;:21;:29;:106;;;;;12395:1;12364:14;:28;;;:32;:71;;;;12434:1;12400:14;:31;;;:35;12364:71;12321:116;;;;;;;;12514:187;12533:21;12556:22;12580:13;12595:17;12614:14;:28;;;12644:14;:31;;;12677:14;:23;;;12514:18;:187::i;:::-;12505:197;;;;;;;;12764:1;12740:21;:25;:55;;;;12794:1;12769:22;:26;12740:55;12707:210;;;12812:99;12840:8;12850:21;12873:22;12897:13;12812:27;:99::i;:::-;12803:109;;;;;;;;12944:1;12924:17;:21;12920:106;;;12961:59;12992:8;13002:17;12961:30;:59::i;:::-;12952:69;;;;;;;;13083:22;;13056:25;;;;13107:28;;;;13137:31;;;;13170:38;;;;13034:175;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13056:25:0;;;;13034:175;;;;;;;;;11672:1541;;;;;;:::o;484:52::-;529:7;484:52;:::o;10409:631::-;10475:7;10484;10493;10502;10511:6;10519:7;10528;10537:4;10543:7;10643:35;;:::i;:::-;10636:1;10605:28;;;:18;:28;;;;;;:32;10596:42;;;;;;10681:44;10696:28;;;:18;:28;;;;;;;;;10681:44;;:14;:44;;;;;;10643:82;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10643:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10643:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;10681:44;;10643:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10741:14;:25;;;10771:14;:28;;;10804:14;:31;;;10840:14;:38;;;10883:14;:21;;;10909:14;:23;;;10937:14;:31;;;10973:14;:21;;;10999:14;:33;;;10729:307;;;;;;;;;;;;;;;;;;;;;10409:631;;;;;;;;;;;;:::o;17462:2114::-;5444:6;;18451:14;;;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;17727:1;17696:28;;;:18;:28;;;;;;:32;17687:42;;;;;;17820:10;17802:29;;;;:17;:29;;;;;;;:39;;;;;:29;17793:61;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;18468:76:0;;;;;;;;;;;;;;;;18451:93;;18588:14;:35;18603:19;;18588:35;;;;;;;;;;;18549:74;;18650:6;18627:14;:20;;:29;;;;;;;18685:8;18660:14;:22;;:33;;;;;;;18720:10;18697:14;:20;;;:33;;;;;-1:-1:-1;;;;;18697:33:0;;;;;-1:-1:-1;;;;;18697:33:0;;;;;;18756:5;18734:14;:19;;;:27;;;;;-1:-1:-1;;;;;18734:27:0;;;;;-1:-1:-1;;;;;18734:27:0;;;;;;18801:3;18765:14;:33;;:39;;;;18838:19;;18809:18;:26;18828:6;18809:26;;;;;;;;;;;;;;;;;:48;;;;18903:6;18861:17;:29;18879:10;-1:-1:-1;;;;;18861:29:0;-1:-1:-1;;;;;18861:29:0;;;;;;;;;;;;:39;18891:8;18861:39;;;;;;;;;;;;;;;;;:48;;;;;;;18941:1;18918:20;:24;;;:85;;;;;18971:1;18947:21;:25;:55;;;;19001:1;18976:22;:26;18947:55;18914:197;;;19019:86;19036:6;19044:21;19067:22;19091:13;19019:16;:86::i;:::-;19010:96;;;;;;;;19138:1;19118:17;:21;19114:93;;;19155:46;19175:6;19183:17;19155:19;:46::i;:::-;19146:56;;;;;;;;19319:20;;;;19341;;19319;19363:22;;;19387:19;;;;19470:28;;;;19500:31;;;;19533:38;;;;19308:264;;;;;;;;;;;;;-1:-1:-1;;;;;19387:19:0;;;19308:264;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19308:264:0;;;;;;;;;;;;;;;;;19319:20;19308:264;;;;;19319:20;;;19308:264;;;;;;;;;17462:2114;;;;;;;;:::o;13370:1060::-;5444:6;;13519:36;;;;5444:6;;:15;;;:34;;-1:-1:-1;5463:6:0;;;;;;;:15;5444:34;5435:44;;;;;;;;13512:1;13481:28;;;:18;:28;;;;;;:32;13472:42;;;;;;13558:44;13573:28;;;:18;:28;;;;;;;;;13558:44;;:14;:44;;;;;13681:25;;;;13558:44;;-1:-1:-1;;;;;;13681:25:0;13710:10;13681:39;13672:49;;;;;;13815:21;;;;;;:29;;:21;:29;:106;;;;;13880:1;13849:14;:28;;;:32;:71;;;;13919:1;13885:14;:31;;;:35;13849:71;13806:116;;;;;;;;13927:21;;;:29;;-1:-1:-1;;13927:29:0;;;13965:28;;;;13951:5;-1:-1:-1;13961:222:0;;;14039:9;;;;;;;;;-1:-1:-1;;;;;14039:9:0;-1:-1:-1;;;;;14039:29:0;;:31;;;;;-1:-1:-1;;;14039:31:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14039:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14039:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14039:31:0;14122:28;;;;14039:31;;-1:-1:-1;14084:93:0;;14112:8;;14152:1;14039:31;14084:27;:93::i;:::-;14075:103;;;;;;;;14224:1;14190:14;:31;;;:35;14186:181;;;14241:73;14272:8;14282:14;:31;;;14241:30;:73::i;:::-;14232:83;;;;;;;;14361:1;14320:38;;;:42;14186:181;14390:25;;;;14375:51;;14417:8;;-1:-1:-1;;;;;14390:25:0;;14375:51;;;;;13370:1060;;;:::o;567:86:15:-;308:5;;-1:-1:-1;;;;;308:5:15;294:10;:19;286:28;;;;;;633:5;:16;;-1:-1:-1;;633:16:15;-1:-1:-1;;;;;633:16:15;;;;;;;;;;567:86::o;20111:550:0:-;20284:4;20351:1;20327:21;:25;:55;;;;20381:1;20356:22;:26;20327:55;20294:364;;;20394:9;;:78;;;-1:-1:-1;;;;;20394:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;20394:78:0;;;;;;;;20499:9;;20394:101;;20477:17;;-1:-1:-1;;;;;20394:9:0;;;;:16;;:78;;;;;;;;;;;;;;;:9;;:78;;;5:2:-1;;;;30:1;27;20:12;5:2;20394:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20394:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;20394:78:0;;:101;:82;:101;:::i;:::-;:114;20390:173;;-1:-1:-1;20523:4:0;20516:11;;20390:173;-1:-1:-1;20552:5:0;20545:12;;20294:364;20577:30;;;20573:85;;-1:-1:-1;20621:4:0;20573:85;20111:550;;;;;;;:::o;22740:925::-;5718:9;;:40;;;;;;-1:-1:-1;;;;;;5718:40:0;;;;;;;;22924:4;;;;23022:32;;;;22924:4;;22900:13;;22924:4;;;;-1:-1:-1;;;;;5718:9:0;;;;:25;;:40;;;;;;;;;;;;;22924:4;5718:9;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;5718:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5718:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5718:40:0;;;;;;;;;-1:-1:-1;5718:40:0;-1:-1:-1;;;;;;5771:34:0;;;;;;:65;;-1:-1:-1;5832:4:0;5809:27;;;;5771:65;5762:75;;;;;;;;22973:14;:44;22988:18;:28;23007:8;22988:28;;;;;;;;;;;;;;;;;;22973:44;;;;;;;;;;;22934:83;;23091:9;;;;;;;;;-1:-1:-1;;;;;23091:9:0;-1:-1:-1;;;;;23091:26:0;;23118:14;:25;;;;;;;;;;-1:-1:-1;;;;;23118:25:0;23145:21;23168:22;23192:13;23091:115;;;;;-1:-1:-1;;;23091:115:0;;;;;;;-1:-1:-1;;;;;23091:115:0;-1:-1:-1;;;;;23091:115:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23091:115:0;;-1:-1:-1;;;;;23091:115:0;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23091:115:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23091:115:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;23091:115:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;5:11;;2:2;;;29:1;26;19:12;2:2;23091:115:0;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;23091:115:0;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;23091:115:0;;;;;;23021:185;;;;23242:112;23275:9;;;;;;;;;-1:-1:-1;;;;;23275:9:0;-1:-1:-1;;;;;23275:16:0;;23292:21;23315:22;23339:13;23275:78;;;;;-1:-1:-1;;;23275:78:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23275:78:0;;-1:-1:-1;;;;;23275:78:0;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23275:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23275:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23275:78:0;23242:28;;;;;:112;:32;:112;:::i;:::-;23211:28;;;:143;23434:1;;-1:-1:-1;23419:228:0;23441:15;:22;23437:1;:26;23419:228;;;23479:18;;23509:1;;23479:15;;23495:1;;23479:18;;;;;;;;;;;;;;-1:-1:-1;;;;;23479:32:0;;;:57;;;;;23535:1;23515:14;23530:1;23515:17;;;;;;;;;;;;;;;;;;:21;23479:57;23475:168;;;23561:15;23577:1;23561:18;;;;;;;;;;;;;;;;;;;23591:25;;;;23618:17;;-1:-1:-1;;;;;23553:37:0;;;;;;23591:25;;23618:14;;23633:1;;23618:17;;;;;;;;;;;;;;23553:83;;;;;-1:-1:-1;;;23553:83:0;;;;;;;-1:-1:-1;;;;;23553:83:0;-1:-1:-1;;;;;23553:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23553:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23553:83:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23553:83:0;23544:93;;;;;;;;23465:3;;;;;23419:228;;;-1:-1:-1;23657:4:0;;22740:925;-1:-1:-1;;;;;;;;;;;22740:925:0:o;23887:897::-;23981:4;24037:32;24071:28;24236:36;24460:24;24103:9;;;;;;;;;-1:-1:-1;;;;;24103:9:0;-1:-1:-1;;;;;24103:29:0;;:31;;;;;-1:-1:-1;;;24103:31:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24103:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24103:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24103:31:0;;;;;;;;;;;-1:-1:-1;24103:31:0;-1:-1:-1;;;;;;24147:38:0;;;;24138:48;;;;;;24226:4;24199:31;;;;24190:41;;;;;;24275:44;24290:28;;;:18;:28;;;;;;;;;24275:44;;:14;:44;;;;;24358:31;;;;24275:44;;-1:-1:-1;24358:54:0;;24394:17;24358:54;:35;:54;:::i;:::-;24324:31;;;:88;-1:-1:-1;24605:25:0;;;;24565:66;;;;;;-1:-1:-1;;;;;24605:25:0;;;24565:66;;;;;;24495:24;;24565:39;;;;;:66;;;;;;;;;;;;;;24605:25;24565:39;:66;;;5:2:-1;;;;30:1;27;20:12;5:2;24565:66:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24565:66:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24565:66:0;24524:38;;;;:107;;;24679:25;;;;24644:120;;;;;;-1:-1:-1;;;;;24679:25:0;;;24644:120;;;;;;;;;;;;;;;;;;;;;;:34;;;;;;:120;;;;;24565:66;;24644:120;;;;;;;;24679:25;24644:34;:120;;;5:2:-1;;;;30:1;27;20:12;5:2;24644:120:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24644:120:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24644:120:0;24635:130;;;;;;;;-1:-1:-1;24776:4:0;;23887:897;-1:-1:-1;;;;;;23887:897:0:o;27662:780::-;27842:4;27852:35;;:::i;:::-;27890:44;27905:28;;;:18;:28;;;;;;;;;27890:44;;:14;:44;;;;;;27852:82;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27852:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27852:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;27890:44;;27852:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27852:82:0;;;-1:-1:-1;;27852:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27996:1:0;27972:21;:25;:55;;;;28026:1;28001:22;:26;27972:55;27939:500;;;28218:23;;;;28182:31;;;;28148:28;;;;;28042:9;;:78;;-1:-1:-1;;;;;28042:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;28042:78:0;;;;;;;;:172;;28182:31;28042:135;;28148:28;28042:135;;28125:17;;-1:-1:-1;;;;;28042:9:0;;;;:16;;:78;;;;;;;;;;;;;;:9;;:78;;;5:2:-1;;;;30:1;27;20:12;28042:101:0;:105;:135;:105;:135;:::i;:172::-;:199;;28035:206;;;;27939:500;28276:1;28256:17;:21;28252:187;;;28383:14;:23;;;28291:88;28361:17;28291:65;28324:14;:31;;;28291:14;:28;;;:32;;:65;;;;:::i;28252:187::-;28429:5;28422:12;;28252:187;27662:780;;;;;;;;:::o;21275:1077::-;21541:4;21617:1;21593:21;:25;:55;;;;21647:1;21622:22;:26;21593:55;21560:198;;;;-1:-1:-1;21680:9:0;;:78;;;-1:-1:-1;;;;;21680:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;21680:78:0;;;;;;;;-1:-1:-1;;;;;21680:9:0;;;;:16;;:78;;;;;;;;;;;;;;;:9;;:78;;;5:2:-1;;;;30:1;27;20:12;5:2;21680:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21680:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21680:78:0;21657:101;;21560:198;21559:254;;;;21796:17;21770:23;:43;21559:254;:547;;;-1:-1:-1;21884:1:0;21860:21;:25;:55;;;;21914:1;21889:22;:26;21860:55;21826:275;;;;-1:-1:-1;22085:15:0;21926:156;22035:46;:23;22063:17;22035:46;:27;:46;:::i;:::-;21951:9;;:78;;;-1:-1:-1;;;;;21951:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;21951:78:0;;;;;;;;21926:104;;-1:-1:-1;;;;;21951:9:0;;:16;;:78;;;;;;;;;;;;;;:9;;:78;;;5:2:-1;;;;30:1;27;20:12;5:2;21951:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21951:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21951:78:0;21926:20;;:104;:24;:104;:::i;:156::-;:174;21826:275;21559:736;;;-1:-1:-1;22139:1:0;22115:179;21551:798;;;-1:-1:-1;22312:5:0;22305:12;;21551:798;-1:-1:-1;22340:4:0;21551:798;21275:1077;;;;;;;;;:::o;25185:938::-;5718:9;;:40;;;;;;-1:-1:-1;;;;;;5718:40:0;;;;;;;;25378:4;;;;25476:32;;;;25378:4;;25354:13;;25378:4;;;;-1:-1:-1;;;;;5718:9:0;;;;:25;;:40;;;;;;;;;;;;;25378:4;5718:9;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;5718:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5718:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5718:40:0;;;;;;;;;-1:-1:-1;5718:40:0;-1:-1:-1;;;;;;5771:34:0;;;;;;:65;;-1:-1:-1;5832:4:0;5809:27;;;;5771:65;5762:75;;;;;;;;25427:14;:44;25442:18;:28;25461:8;25442:28;;;;;;;;;;;;;;;;;;25427:44;;;;;;;;;;;25388:83;;25545:9;;;;;;;;;-1:-1:-1;;;;;25545:9:0;-1:-1:-1;;;;;25545:26:0;;25572:14;:25;;;;;;;;;;-1:-1:-1;;;;;25572:25:0;25599:21;25622:22;25646:13;25545:115;;;;;-1:-1:-1;;;25545:115:0;;;;;;;-1:-1:-1;;;;;25545:115:0;-1:-1:-1;;;;;25545:115:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25545:115:0;;-1:-1:-1;;;;;25545:115:0;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25545:115:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25545:115:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;25545:115:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;5:11;;2:2;;;29:1;26;19:12;2:2;25545:115:0;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;25545:115:0;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;25545:115:0;;;;;;25475:185;;;;25696:112;25729:9;;;;;;;;;-1:-1:-1;;;;;25729:9:0;-1:-1:-1;;;;;25729:16:0;;25746:21;25769:22;25793:13;25729:78;;;;;-1:-1:-1;;;25729:78:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25729:78:0;;-1:-1:-1;;;;;25729:78:0;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25729:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25729:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25729:78:0;25696:28;;;;;:112;:32;:112;:::i;:::-;25665:28;;;:143;25890:1;;-1:-1:-1;25875:230:0;25897:15;:22;25893:1;:26;25875:230;;;25935:18;;25965:1;;25935:15;;25951:1;;25935:18;;;;;;;;;;;;;;-1:-1:-1;;;;;25935:32:0;;;:57;;;;;25991:1;25971:14;25986:1;25971:17;;;;;;;;;;;;;;;;;;:21;25935:57;25931:170;;;26017:15;26033:1;26017:18;;;;;;;;;;;;;;;;;;;26049:25;;;;26076:17;;-1:-1:-1;;;;;26009:39:0;;;;;;26049:25;;26076:14;;26091:1;;26076:17;;;;;;;;;;;;;;26009:85;;;;;-1:-1:-1;;;26009:85:0;;;;;;;-1:-1:-1;;;;;26009:85:0;-1:-1:-1;;;;;26009:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26009:85:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26009:85:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26009:85:0;26000:95;;;;;;;;25921:3;;;;;25875:230;;26354:797;26457:4;26513:32;26547:28;26712:36;26936:24;26579:9;;;;;;;;;-1:-1:-1;;;;;26579:9:0;-1:-1:-1;;;;;26579:29:0;;:31;;;;;-1:-1:-1;;;26579:31:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26579:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26579:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26579:31:0;;;;;;;;;;;-1:-1:-1;26579:31:0;-1:-1:-1;;;;;;26623:38:0;;;;26614:48;;;;;;26702:4;26675:31;;;;26666:41;;;;;;26751:44;26766:28;;;:18;:28;;;;;;;;;26751:44;;:14;:44;;;;;26834:31;;;;26751:44;;-1:-1:-1;26834:54:0;;26870:17;26834:54;:35;:54;:::i;:::-;26800:31;;;:88;-1:-1:-1;27046:25:0;;;;27092:38;;;;;27009:122;;;;;;-1:-1:-1;;;;;27046:25:0;;;27009:122;;;;;;;;;;;;;;;;;;;;;26971:24;;27009:36;;;;;:122;;;;;;;;;;;;;;27046:25;27009:36;:122;;;5:2:-1;;;;30:1;27;20:12;29133:82:0;;;;;;;;;;;;;;;;-1:-1:-1;;;29133:82:0;;;-1:-1:-1;;29133:82:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29269:31;;;;29236:28;;;;29133:82;;-1:-1:-1;29236:65:0;;:28;:65;:32;:65;:::i;:::-;29219:82;-1:-1:-1;29363:1:0;29339:21;:25;:55;;;;29393:1;29368:22;:26;29339:55;29306:324;;;29409:9;;:78;;;-1:-1:-1;;;;;29409:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;29409:78:0;;;;;;;;29514:6;;29409:101;;29492:17;;-1:-1:-1;;;;;29409:9:0;;;;:16;;:78;;;;;;;;;;;;;;;:9;;:78;;;5:2:-1;;;;30:1;27;20:12;29409:101:0;:111;;29402:118;;;;29306:324;29555:1;29535:17;:21;29531:99;;;29591:6;29570:17;:27;;29563:34;;;;29531:99;29620:5;29613:12;;29531:99;28953:680;;;;;;;;;:::o;30005:1674::-;30185:4;30195:36;30280:35;;:::i;:::-;5718:9;;:40;;;;;;-1:-1:-1;;;;;;5718:40:0;;;;;;;;30690:29;;30161:13;;30690:29;;;;-1:-1:-1;;;;;5718:9:0;;;;:25;;:40;;;;;;;;;;;;;30690:29;5718:9;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;5718:40:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5718:40:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5718:40:0;;;;;;;;;-1:-1:-1;5718:40:0;-1:-1:-1;;;;;;5771:34:0;;;;;;:65;;-1:-1:-1;5832:4:0;5809:27;;;;5771:65;5762:75;;;;;;;;30234:42;30249:26;;;:18;:26;;;;;;;;;30234:42;;:14;:42;;;;;30352:22;;;;;30333:42;;:18;:42;;;;;;30318:58;;:14;:58;;;;;;30280:96;;;;;;;;;;;;;;;-1:-1:-1;;;;;30280:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30280:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;30234:42;;-1:-1:-1;30280:96:0;30318:58;;30280:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;30280:96:0;;;-1:-1:-1;;30280:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30412:9;:78;;-1:-1:-1;;;;;30412:78:0;;;;;;;;;;;;;;-1:-1:-1;;;;;;30412:78:0;;;;;;;;30280:96;;-1:-1:-1;;;;;;30412:9:0;;:16;;:78;;;;;30280:96;30412:78;;;;;;-1:-1:-1;30412:9:0;:78;;;5:2:-1;;;;30:1;27;20:12;5:2;30412:78:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30412:78:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;30412:78:0;30381:28;;;:109;30555:20;;;;30526:112;;-1:-1:-1;;;;;30555:20:0;30577:21;30600:22;30624:13;30526:28;:112::i;:::-;30517:122;;;;;;;;30722:91;529:7;30723:65;30756:14;:31;;;30723:14;:28;;;:32;;:65;;;;:::i;:::-;30722:71;:91;:71;:91;:::i;:::-;30904:25;;;;;-1:-1:-1;;;;;30875:55:0;;;;;:28;:55;;;;;;;30690:123;;-1:-1:-1;30875:82:0;;30690:123;30875:82;:59;:82;:::i;:::-;30846:25;;;;;;-1:-1:-1;;;;;30817:55:0;;;;;;;:28;:55;;;;;;:140;;;;31045:20;;31018:25;;30996:20;;;;;31067:22;;;31091:28;;;;31144:31;;;;30966:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31045:20;;30966:213;;;30996:20;;;30966:213;;;;;;;;;31330:28;;;;31276:110;;31330:55;;31363:21;31330:55;:32;:55;:::i;:::-;31305:19;;;;-1:-1:-1;;;;;31305:19:0;31276:49;;;;:28;:49;;;;;;;:110;:53;:110;:::i;:::-;31253:19;;;;;-1:-1:-1;;;;;31253:19:0;;;31224:49;;;;:28;:49;;;;;:162;;;;31468:20;;31447:19;;31425:20;;;;31253:19;31490:22;;;31514:28;;;;31468:20;;31447:19;;;;31425:20;;;;;31395:265;;31544:55;31514:28;31577:21;31544:55;:32;:55;:::i;:::-;31624:31;;;;31601:55;;529:7;;31601:55;:22;:55;:::i;:::-;31395:265;;;;;;;;;;;;;;;;;;;;;;;;31658:1;31395:265;;;;;;;;;;;;;-1:-1:-1;31671:4:0;;30005:1674;-1:-1:-1;;;;;;;;;;30005:1674:0:o;32953:2253::-;33043:4;33099:32;33133:28;33298:36;33383:35;;:::i;:::-;33583:24;33944:29;33165:9;;;;;;;;;-1:-1:-1;;;;;33165:9:0;-1:-1:-1;;;;;33165:29:0;;:31;;;;;-1:-1:-1;;;33165:31:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33165:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33165:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33165:31:0;;;;;;;;;;;-1:-1:-1;33165:31:0;-1:-1:-1;;;;;;33209:38:0;;;;33200:48;;;;;;33288:4;33261:31;;;;33252:41;;;;;;33337:42;33352:26;;;:18;:26;;;;;;;;;33337:42;;:14;:42;;;;;33455:22;;;;;33436:42;;:18;:42;;;;;;33421:58;;:14;:58;;;;;;33383:96;;;;;;;;;;;;;;;-1:-1:-1;;;;;33383:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33383:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;33337:42;;-1:-1:-1;33383:96:0;33421:58;;33383:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;33383:96:0;;;-1:-1:-1;;33383:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33484:31;;;:51;;;-1:-1:-1;33728:20:0;;;33688:61;;;;;-1:-1:-1;;;;;33728:20:0;;;-1:-1:-1;33688:61:0;;;;;33383:96;;-1:-1:-1;33618:24:0;;-1:-1:-1;33688:39:0;;;;;:61;;;;;33383:96;33688:61;;;;;;-1:-1:-1;33688:39:0;:61;;;5:2:-1;;;;30:1;27;20:12;5:2;33688:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33688:61:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33688:61:0;33647:38;;;:102;33832:20;;;;33860:31;;;;33785:107;;;;;;-1:-1:-1;;;;;33832:20:0;;;33785:107;;;;33854:4;33785:107;;;;;;;;;;;;:46;;;;;;:107;;;;;33688:61;;33785:107;;;;;;;;33832:20;33785:46;:107;;;5:2:-1;;;;30:1;27;20:12;5:2;33785:107:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33785:107:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33785:107:0;33776:117;;;;;;;;33976:94;529:7;33977:68;34013:14;:31;;;33977:14;:31;;;:35;;:68;;;;:::i;33976:94::-;34207:25;;;;;-1:-1:-1;;;;;34175:58:0;;;;;:31;:58;;;;;;34234:38;;;;34175:98;;;;;;;33944:126;;-1:-1:-1;34175:125:0;;33944:126;34175:125;:102;:125;:::i;:::-;34106:25;;;;;;-1:-1:-1;;;;;34074:58:0;;;;;;;:31;:58;;;;;;34133:38;;;;;34074:98;;;;;;;;:226;;;;34391:20;;34364:25;;34342:20;;;;;34413:22;;;34437:31;;;;34470:38;;34533:31;;;;34309:259;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34391:20;;34309:259;;;;34342:20;;;;34309:259;;;;;;;;;34805:31;;;;34708:156;;34805:58;;34841:21;34805:58;:35;:58;:::i;:::-;34740:19;;;;-1:-1:-1;;;;;34740:19:0;34708:52;;;;:31;:52;;;;;;;;34761:38;;;;34708:92;;;;;;;;;:156;:96;:156;:::i;:::-;34645:19;;;;;-1:-1:-1;;;;;34645:19:0;;;34613:52;;;;:31;:52;;;;;;;;34666:38;;;;;34613:92;;;;;;;:251;;;;34949:20;;34928:19;;34906:20;;;;34645:19;34971:22;;;34995:31;;;;35028:38;;34949:20;;34928:19;;;;34906:20;;;;;34873:314;;34971:22;;35068:58;34995:31;35104:21;35068:58;:35;:58;:::i;:::-;35151:31;;;;35128:55;;529:7;;35128:55;:22;:55;:::i;:::-;34873:314;;;;;;;;;;;;;;;;;;;;;;;;;;;;35185:1;34873:314;;;;;;;;;;;;;-1:-1:-1;35198:4:0;;32953:2253;-1:-1:-1;;;;;;;;32953:2253:0:o;1171:116:13:-;1248:5;;;1264:6;;;;1257:14;;;;1171:116;;;;:::o;1006:105::-;1064:7;1084:6;;;;1077:14;;;;-1:-1:-1;1102:5:13;;;1006:105::o;32078:666:0:-;32396:9;;:97;;;;;;-1:-1:-1;;;;;32396:97:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;32396:97:0;;;;;;;;32236:4;;32327:32;;;;32236:4;;32396:9;;;;;:26;;:97;;;;;32236:4;;32396:97;;;;;;;32236:4;32396:9;:97;;;5:2:-1;;;;30:1;27;20:12;5:2;32396:97:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32396:97:0;;;;;;39:16:-1;36:1;17:17;2:54;101:4;32396:97:0;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;;;5:11;;2:2;;;29:1;26;19:12;2:2;32396:97:0;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;0:383;;32396:97:0;;;;;;;20:11:-1;15:3;12:20;9:2;;;45:1;42;35:12;9:2;64:21;;126:4;117:14;;142:31;;;139:2;;;186:1;183;176:12;139:2;224:3;218:10;339:9;333:2;319:12;315:21;297:16;293:44;290:59;268:11;254:12;251:29;239:119;236:2;;;371:1;368;361:12;236:2;-1:-1;32326:167:0;;-1:-1:-1;32396:97:0;-1:-1:-1;32513:1:0;;-1:-1:-1;;;;;32498:228:0;32520:15;:22;32516:1;:26;32498:228;;;32558:18;;32588:1;;32558:15;;32574:1;;32558:18;;;;;;;;;;;;;;-1:-1:-1;;;;;32558:32:0;;;:57;;;;;32614:1;32594:14;32609:1;32594:17;;;;;;;;;;;;;;;;;;:21;32558:57;32554:168;;;32640:15;32656:1;32640:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32632:49:0;;32682:7;32691:4;32697:14;32712:1;32697:17;;;;;;;;;;;;;;;;;;;;32632:83;;;-1:-1:-1;;;32632:83:0;;;;;;-1:-1:-1;;;;;32632:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;32697:17;32632:83;;;;;-1:-1:-1;32632:83:0;;;;5:2:-1;;;;30:1;27;20:12;5:2;32632:83:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32632:83:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32632:83:0;32623:93;;;;;;;;32544:3;;32498:228;;200:353:13;258:9;476:6;;472:30;;;-1:-1:-1;496:1:13;489:8;;472:30;-1:-1:-1;510:5:13;;;514:1;510;:5;526;;;;;;;;:10;519:18;;;633:263;691:7;891:1;887;:5;;;;;;;;;633:263;-1:-1:-1;;;633:263:13:o;299:34909:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;299:34909:0;;;-1:-1:-1;299:34909:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;299:34909:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o","source":"pragma solidity ^0.4.24;\n\nimport './SafeMath.sol';\nimport './owned.sol';\nimport './AOToken.sol';\nimport './AOTreasury.sol';\n\n/**\n * @title AOContent\n *\n * The purpose of this contract is to allow content creator to stake network ERC20 AO tokens and/or primordial AO Tokens\n * on his/her content\n */\ncontract AOContent is owned {\n\tusing SafeMath for uint256;\n\n\tbool public paused;\n\tbool public killed;\n\tuint256 public inflationRate; // support up to 4 decimals, i.e 12.3456% = 123456\n\tuint256 constant public PERCENTAGE_DIVISOR = 10 ** 6; // 100% = 1000000\n\tuint256 public totalStakedContents;\n\tuint256 public totalBoughtContents;\n\tAOTreasury private _treasury;\n\n\tstruct StakedContent {\n\t\tbytes32 stakeId;\n\t\taddress stakeOwner;\n\t\tuint256 networkAmount; // total network token staked in base denomination\n\t\tuint256 primordialAmount;\t// the amount of primordial AO Token to stake (always in base denomination)\n\t\tuint256 primordialWeightedIndex;\n\t\tstring datKey;\n\t\tuint256 fileSize;\n\t\tuint256 profitPercentage; // support up to 4 decimals, 100% = 1000000\n\t\tbool active; // true if currently staked, false when unstaked\n\t\tuint256 createdOnTimestamp;\n\t}\n\n\tstruct BoughtContent {\n\t\tbytes32 buyId;\n\t\tbytes32 stakeId;\n\t\taddress buyer;\n\t\taddress host; // The host address that holds the data\n\t\tuint256 networkAmount; // total network token staked in base denomination\n\t\tuint256 primordialAmount;\t// the amount of primordial AO Token to stake (always in base denomination)\n\t\tuint256 primordialWeightedIndex;\n\t\tuint256 createdOnTimestamp;\n\t}\n\n\t// Mapping from StakedContent index to the StakedContent object\n\tmapping (uint256 => StakedContent) private stakedContents;\n\n\t// Mapping from stake ID to index of the stakedContents list\n\tmapping (bytes32 => uint256) private stakedContentIndex;\n\n\t// Mapping from BoughtContent index to the BoughtContent object\n\tmapping (uint256 => BoughtContent) private boughtContents;\n\n\t// Mapping from buy ID to index of the boughtContents list\n\tmapping (bytes32 => uint256) private boughtContentIndex;\n\n\t// Mapping from buyer's bought stake ID to the buy ID\n\t// To check whether or not a stakedContent has been bought by buyer\n\tmapping (address => mapping (bytes32 => bytes32)) internal buyerOwnedStakeId;\n\n\t// Mapping from address to his/her network token profit\n\t// Accumulated when someone buys content from content creator/host\n\tmapping (address => uint256) public buyContentNetworkTokenProfit;\n\n\t// Mapping from address to his/her primordial token profit at weighted index\n\t// Accumulated when someone buys content from content creator/host\n\tmapping (address => mapping (uint256 => uint256)) public buyContentPrimordialTokenProfit;\n\n\t// Event to be broadcasted to public when `stakeOwner` stakes a new content\n\tevent StakeContent(\n\t\taddress indexed stakeOwner,\n\t\tbytes32 indexed stakeId,\n\t\tuint256 networkIntegerAmount,\n\t\tuint256 networkFractionAmount,\n\t\tbytes8 denomination,\n\t\tuint256 totalNetworkBaseAmount,\n\t\tuint256 primordialAmount,\n\t\tuint256 primordialWeightedIndex,\n\t\tstring datKey,\n\t\tuint256 fileSize,\n\t\tuint256 profitPercentage,\n\t\tuint256 createdOnTimestamp\n\t);\n\n\t// Event to be broadcasted to public when `stakeOwner` updates the staked content's profit percentage\n\tevent SetProfitPercentage(address indexed stakeOwner, bytes32 indexed stakeId, uint256 newProfitPercentage);\n\n\t// Event to be broadcasted to public when `stakeOwner` unstakes some network/primordial token from an existing content\n\tevent UnstakePartialContent(address indexed stakeOwner, bytes32 indexed stakeId, uint256 remainingNetworkAmount, uint256 remainingPrimordialAmount, uint256 primordialWeightedIndex);\n\n\t// Event to be broadcasted to public when `stakeOwner` unstakes all token amount on an existing content\n\tevent UnstakeContent(address indexed stakeOwner, bytes32 indexed stakeId);\n\n\t// Event to be broadcasted to public when `stakeOwner` re-stakes an existing content\n\tevent StakeExistingContent(address indexed stakeOwner, bytes32 indexed stakeId, uint256 currentNetworkAmount, uint256 currentPrimordialAmount, uint256 currentPrimordialWeightedIndex);\n\n\t// Event to be broadcasted to public when we reward content/creator when someone buys the content\n\t// recipientType:\n\t// 0 => Stake Owner (Content Creator)\n\t// 1 => Node Host\n\tevent BuyContentNetworkTokenEarning(address indexed sender, address indexed recipient, bytes32 indexed buyId, bytes32 stakeId, uint256  networkAmount, uint256 networkProfitAmount, uint256 profitPercentage, uint8 recipientType);\n\n\tevent BuyContentPrimordialTokenEarning(address indexed sender, address indexed recipient, bytes32 indexed buyId, bytes32 stakeId, uint256 primordialAmount, uint256 primordialWeightedIndex, uint256 primordialProfitAmount, uint256 profitPercentage, uint8 recipientType);\n\n\t// Event to be broadcasted to public when `buyer` buys a content\n\tevent BuyContent(address indexed buyer, bytes32 buyId, bytes32 stakeId, address host, uint256 networkIntegerAmount, uint256 networkFractionAmount, bytes8 denomination, uint256 totalNetworkAmount, uint256 primordialAmount, uint256 primordialWeightedIndex);\n\n\t// Event to be broadcasted to public when emergency mode is triggered\n\tevent EscapeHatch();\n\n\t/**\n\t * @dev Constructor function\n\t * @param _treasuryAddress The address of AOTreasury\n\t */\n\tconstructor(address _treasuryAddress) public {\n\t\t_treasury = AOTreasury(_treasuryAddress);\n\t}\n\n\t/**\n\t * @dev Checks if contract is currently active\n\t */\n\tmodifier isActive {\n\t\trequire (paused == false && killed == false);\n\t\t_;\n\t}\n\n\t/**\n\t * @dev Checks if the denomination is valid\n\t */\n\tmodifier isValidDenomination(bytes8 _denomination) {\n\t\t// Make sure the _denomination is in the available list\n\t\t(address _networkTokenAddress, bool _networkTokenActive) = _treasury.getDenomination(_denomination);\n\t\trequire (_networkTokenAddress != address(0) && _networkTokenActive == true);\n\t\t_;\n\t}\n\n\t/***** OWNER ONLY METHODS *****/\n\t/**\n\t * @dev Owner pauses/unpauses contract\n\t * @param _paused Either to pause contract or not\n\t */\n\tfunction setPaused(bool _paused) public onlyOwner {\n\t\tpaused = _paused;\n\t}\n\n\t/**\n\t * @dev Owner triggers emergency mode.\n\t *\n\t * Allow stake owners to withdraw all existing active staked funds\n\t */\n\tfunction escapeHatch() public onlyOwner {\n\t\trequire (killed == false);\n\t\tkilled = true;\n\t\temit EscapeHatch();\n\t}\n\n\t/**\n\t * @dev Whitelisted address sets inflation rate\n\t * @param _inflationRate The new inflation rate value to be set\n\t */\n\tfunction setInflationRate(uint256 _inflationRate) public inWhitelist(msg.sender) {\n\t\tinflationRate = _inflationRate;\n\t}\n\n\t/***** PUBLIC METHODS *****/\n\t/**\n\t * @dev Stake `_networkIntegerAmount` + `_networkFractionAmount` of network token in `_denomination` and/or `_primordialAmount` primordial Tokens for a content\n\t * @param _networkIntegerAmount The integer amount of network token to stake\n\t * @param _networkFractionAmount The fraction amount of network token to stake\n\t * @param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n\t * @param _primordialAmount The amount of primordial Token to stake\n\t * @param _datKey The dat key of the file\n\t * @param _fileSize The size of the file\n\t * @param _profitPercentage The percentage of profit the stake owner's media will charge\n\t */\n\tfunction stakeContent(\n\t\tuint256 _networkIntegerAmount,\n\t\tuint256 _networkFractionAmount,\n\t\tbytes8 _denomination,\n\t\tuint256 _primordialAmount,\n\t\tstring _datKey,\n\t\tuint256 _fileSize,\n\t\tuint256 _profitPercentage)\n\t\tpublic\n\t\tisActive {\n\t\trequire (bytes(_datKey).length > 0);\n\t\trequire (_fileSize > 0);\n\t\trequire (_networkIntegerAmount > 0 || _networkFractionAmount > 0 || _primordialAmount > 0);\n\t\trequire (_profitPercentage <= PERCENTAGE_DIVISOR);\n\t\trequire (_canStake(_networkIntegerAmount, _networkFractionAmount, _denomination, _primordialAmount, _fileSize) == true);\n\n\t\t// Increment totalStakedContents\n\t\ttotalStakedContents++;\n\n\t\t// Generate stakeId\n\t\tbytes32 _stakeId = keccak256(abi.encodePacked(this, msg.sender, totalStakedContents, _datKey));\n\t\tStakedContent storage _stakedContent = stakedContents[totalStakedContents];\n\t\t_stakedContent.stakeId = _stakeId;\n\t\t_stakedContent.stakeOwner = msg.sender;\n\t\t_stakedContent.datKey = _datKey;\n\t\t_stakedContent.fileSize = _fileSize;\n\t\t_stakedContent.profitPercentage = _profitPercentage;\n\t\t_stakedContent.active = true;\n\t\t_stakedContent.createdOnTimestamp = now;\n\n\t\tstakedContentIndex[_stakeId] = totalStakedContents;\n\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\trequire (_stakeNetworkToken(_stakeId, _networkIntegerAmount, _networkFractionAmount, _denomination));\n\t\t}\n\t\tif (_primordialAmount > 0) {\n\t\t\trequire (_stakePrimordialToken(_stakeId, _primordialAmount));\n\t\t}\n\t\temit StakeContent(\n\t\t\tmsg.sender,\n\t\t\t_stakeId,\n\t\t\t_networkIntegerAmount,\n\t\t\t_networkFractionAmount,\n\t\t\t_denomination,\n\t\t\t_stakedContent.networkAmount,\n\t\t\t_stakedContent.primordialAmount,\n\t\t\t_stakedContent.primordialWeightedIndex,\n\t\t\t_stakedContent.datKey,\n\t\t\t_stakedContent.fileSize,\n\t\t\t_stakedContent.profitPercentage,\n\t\t\t_stakedContent.createdOnTimestamp\n\t\t);\n\t}\n\n\t/**\n\t * @dev Set profit percentage on existing staked content\n\t * @param _stakeId The ID of the staked content\n\t * @param _profitPercentage The new value to be set\n\t */\n\tfunction setProfitPercentage(bytes32 _stakeId, uint256 _profitPercentage) public isActive {\n\t\trequire (_profitPercentage <= PERCENTAGE_DIVISOR);\n\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t// Make sure the staked content owner is the same as the sender\n\t\trequire (_stakedContent.stakeOwner == msg.sender);\n\n\t\t_stakedContent.profitPercentage = _profitPercentage;\n\n\t\temit SetProfitPercentage(msg.sender, _stakeId, _profitPercentage);\n\t}\n\n\t/**\n\t * @dev Return staked content information at a given ID\n\t * @param _stakeId The ID of the staked content\n\t * @return address of the staked content's owner\n\t * @return the network base token amount staked for this content\n\t * @return the primordial token amount staked for this content\n\t * @return the primordial weighted index of the staked content\n\t * @return the dat key of the content\n\t * @return the file size of the content\n\t * @return the profit percentage of the content\n\t * @return status of the staked content\n\t * @return the timestamp when the staked content was created\n\t */\n\tfunction stakedContentById(bytes32 _stakeId) public view returns (address, uint256, uint256, uint256, string, uint256, uint256, bool, uint256) {\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\n\t\tStakedContent memory _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\treturn (\n\t\t\t_stakedContent.stakeOwner,\n\t\t\t_stakedContent.networkAmount,\n\t\t\t_stakedContent.primordialAmount,\n\t\t\t_stakedContent.primordialWeightedIndex,\n\t\t\t_stakedContent.datKey,\n\t\t\t_stakedContent.fileSize,\n\t\t\t_stakedContent.profitPercentage,\n\t\t\t_stakedContent.active,\n\t\t\t_stakedContent.createdOnTimestamp\n\t\t);\n\t}\n\n\t/**\n\t * @dev Unstake existing staked content and refund partial staked amount to the stake owner\n\t *\t\tUse unstakeContent() to unstake all staked token amount. unstakePartialContent() can unstake only up to\n\t *\t\tthe mininum required to pay the fileSize\n\t * @param _stakeId The ID of the staked content\n\t * @param _networkIntegerAmount The integer amount of network token to unstake\n\t * @param _networkFractionAmount The fraction amount of network token to unstake\n\t * @param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n\t * @param _primordialAmount The amount of primordial Token to unstake\n\t */\n\tfunction unstakePartialContent(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount) public isActive {\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\t\trequire (_networkIntegerAmount > 0 || _networkFractionAmount > 0 || _primordialAmount > 0);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t// Make sure the staked content owner is the same as the sender\n\t\trequire (_stakedContent.stakeOwner == msg.sender);\n\t\t// Make sure the staked content is currently active (staked) with some amounts\n\t\trequire (_stakedContent.active == true && (_stakedContent.networkAmount > 0 || _stakedContent.primordialAmount > 0));\n\t\t// Make sure the staked content has enough balance to unstake\n\t\trequire (_canUnstakePartial(_networkIntegerAmount, _networkFractionAmount, _denomination, _primordialAmount, _stakedContent.networkAmount, _stakedContent.primordialAmount, _stakedContent.fileSize));\n\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\trequire (_unstakePartialNetworkToken(_stakeId, _networkIntegerAmount, _networkFractionAmount, _denomination));\n\t\t}\n\t\tif (_primordialAmount > 0) {\n\t\t\trequire (_unstakePartialPrimordialToken(_stakeId, _primordialAmount));\n\t\t}\n\t\temit UnstakePartialContent(_stakedContent.stakeOwner, _stakedContent.stakeId, _stakedContent.networkAmount, _stakedContent.primordialAmount, _stakedContent.primordialWeightedIndex);\n\t}\n\n\t/**\n\t * @dev Unstake existing staked content and refund the total staked amount to the stake owner\n\t * @param _stakeId The ID of the staked content\n\t */\n\tfunction unstakeContent(bytes32 _stakeId) public isActive {\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t// Make sure the staked content owner is the same as the sender\n\t\trequire (_stakedContent.stakeOwner == msg.sender);\n\t\t// Make sure the staked content is currently active (staked) with some amounts\n\t\trequire (_stakedContent.active == true && (_stakedContent.networkAmount > 0 || _stakedContent.primordialAmount > 0));\n\n\t\t_stakedContent.active = false;\n\n\t\tif (_stakedContent.networkAmount > 0) {\n\t\t\t(bytes8 _baseDenominationName,,) = _treasury.getBaseDenomination();\n\t\t\trequire (_unstakePartialNetworkToken(_stakeId, _stakedContent.networkAmount, 0, _baseDenominationName));\n\t\t}\n\t\tif (_stakedContent.primordialAmount > 0) {\n\t\t\trequire (_unstakePartialPrimordialToken(_stakeId, _stakedContent.primordialAmount));\n\t\t\t_stakedContent.primordialWeightedIndex = 0;\n\t\t}\n\t\temit UnstakeContent(_stakedContent.stakeOwner, _stakeId);\n\t}\n\n\t/**\n\t * @dev Stake existing content with more tokens (this is to increase the price)\n\t *\n\t * @param _stakeId The ID of the staked content\n\t * @param _networkIntegerAmount The integer amount of network token to stake\n\t * @param _networkFractionAmount The fraction amount of network token to stake\n\t * @param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n\t * @param _primordialAmount The amount of primordial Token to stake. (The primordial weighted index has to match the current staked weighted index)\n\t */\n\tfunction stakeExistingContent(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount) public isActive {\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t// Make sure the staked content owner is the same as the sender\n\t\trequire (_stakedContent.stakeOwner == msg.sender);\n\t\trequire (_networkIntegerAmount > 0 || _networkFractionAmount > 0 || _primordialAmount > 0);\n\t\trequire (_canStakeExisting(_stakeId, _networkIntegerAmount, _networkFractionAmount, _denomination, _primordialAmount));\n\n\t\t// Make sure we can stake primordial token\n\t\t// If we are currently staking an active staked content, then the stake owner's weighted index has to match `stakedContent.primordialWeightedIndex`\n\t\t// i.e, can't use a combination of different weighted index. Stake owner has to call unstakeContent() to unstake all tokens first\n\t\t(, address _baseDenominationAddress, bool _baseDenominationActive) = _treasury.getBaseDenomination();\n\t\trequire (_baseDenominationAddress != address(0));\n\t\trequire (_baseDenominationActive == true);\n\t\tAOToken _primordialToken = AOToken(_baseDenominationAddress);\n\t\tif (_primordialAmount > 0 && _stakedContent.active && _stakedContent.primordialAmount > 0 && _stakedContent.primordialWeightedIndex > 0) {\n\t\t\trequire (_primordialToken.weightedIndexByAddress(msg.sender) == _stakedContent.primordialWeightedIndex);\n\t\t}\n\n\t\t_stakedContent.active = true;\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\trequire (_stakeNetworkToken(_stakeId, _networkIntegerAmount, _networkFractionAmount, _denomination));\n\t\t}\n\t\tif (_primordialAmount > 0) {\n\t\t\trequire (_stakePrimordialToken(_stakeId, _primordialAmount));\n\t\t}\n\n\t\temit StakeExistingContent(msg.sender, _stakeId, _stakedContent.networkAmount, _stakedContent.primordialAmount, _stakedContent.primordialWeightedIndex);\n\t}\n\n\t/**\n\t * @dev Buy existing content\n\t * @param _stakeId The ID of the staked content\n\t * @param _host The node address that hosts the file\n\t * @param _networkIntegerAmount The integer amount of network token to spend\n\t * @param _networkFractionAmount The fraction amount of network token to spend\n\t * @param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n\t * @param _primordialAmount The amount of primordial Token to spend\n\t */\n\tfunction buyContent(bytes32 _stakeId, address _host, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount) public isActive {\n\t\t// Make sure the staked content exist\n\t\trequire (stakedContentIndex[_stakeId] > 0);\n\t\t// Make sure buyer has not bought this content previously\n\t\trequire (buyerOwnedStakeId[msg.sender][_stakeId].length == 0);\n\t\t// _host has to be either the stake owner (content creator) or someone who has purchased the content previously\n\t\trequire (_host == stakedContents[stakedContentIndex[_stakeId]].stakeOwner || buyerOwnedStakeId[_host][_stakeId].length > 0);\n\n\t\trequire (_networkIntegerAmount > 0 || _networkFractionAmount > 0 || _primordialAmount > 0);\n\t\t// Make sure the token amount can pay for the content price\n\t\trequire (_canBuy(_stakeId, _networkIntegerAmount, _networkFractionAmount, _denomination, _primordialAmount));\n\n\t\t// Increment totalBoughtContents;\n\t\ttotalBoughtContents++;\n\n\t\t// Generate buyId\n\t\tbytes32 _buyId = keccak256(abi.encodePacked(this, msg.sender, totalBoughtContents, _stakeId));\n\n\t\tBoughtContent storage _boughtContent = boughtContents[totalBoughtContents];\n\t\t_boughtContent.buyId = _buyId;\n\t\t_boughtContent.stakeId = _stakeId;\n\t\t_boughtContent.buyer = msg.sender;\n\t\t_boughtContent.host = _host;\n\t\t_boughtContent.createdOnTimestamp = now;\n\n\t\tboughtContentIndex[_buyId] = totalBoughtContents;\n\t\tbuyerOwnedStakeId[msg.sender][_stakeId] = _buyId;\n\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\trequire (_payNetworkToken(_buyId, _networkIntegerAmount, _networkFractionAmount, _denomination));\n\t\t}\n\t\tif (_primordialAmount > 0) {\n\t\t\trequire (_payPrimordialToken(_buyId, _primordialAmount));\n\t\t}\n\n\t\t// TODO:\n\t\t// Mint network token and reward Foundation, stake owner and host accordingly\n\n\t\temit BuyContent(_boughtContent.buyer, _boughtContent.buyId, _boughtContent.stakeId, _boughtContent.host, _networkIntegerAmount, _networkFractionAmount, _denomination, _boughtContent.networkAmount, _boughtContent.primordialAmount, _boughtContent.primordialWeightedIndex);\n\t}\n\n\t/***** INTERNAL METHODS *****/\n\t/**\n\t * @dev Check whether the network token and/or primordial token is adequate to pay for the filesize\n\t * @param _networkIntegerAmount The integer amount of the network token\n\t * @param _networkFractionAmount The fraction amount of the network token\n\t * @param _denomination The denomination of the the network token\n\t * @param _primordialAmount The amount of primordial token\n\t * @param _fileSize The file size of the content\n\t * @return true when the amount is sufficient, false otherwise\n\t */\n\tfunction _canStake(uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount, uint256 _fileSize) internal view returns (bool) {\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\tif (_treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination).add(_primordialAmount) >= _fileSize) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (_primordialAmount >= _fileSize) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @dev Check whether or the requested unstake amount is valid\n\t * @param _networkIntegerAmount The integer amount of the network token\n\t * @param _networkFractionAmount The fraction amount of the network token\n\t * @param _denomination The denomination of the the network token\n\t * @param _primordialAmount The amount of primordial token\n\t * @param _stakedNetworkAmount The current staked network token amount\n\t * @param _stakedPrimordialAmount The current staked primordial token amount\n\t * @param _stakedFileSize The file size of the staked content\n\t * @return true if can unstake, false otherwise\n\t */\n\tfunction _canUnstakePartial(\n\t\tuint256 _networkIntegerAmount,\n\t\tuint256 _networkFractionAmount,\n\t\tbytes8 _denomination,\n\t\tuint256 _primordialAmount,\n\t\tuint256 _stakedNetworkAmount,\n\t\tuint256 _stakedPrimordialAmount,\n\t\tuint256 _stakedFileSize) internal view returns (bool) {\n\t\tif (\n\t\t\t(_denomination.length > 0 &&\n\t\t\t\t(_networkIntegerAmount > 0 || _networkFractionAmount > 0) &&\n\t\t\t\t_stakedNetworkAmount < _treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination)\n\t\t\t) ||\n\t\t\t_stakedPrimordialAmount < _primordialAmount ||\n\t\t\t(\n\t\t\t\t_denomination.length > 0\n\t\t\t\t\t&& (_networkIntegerAmount > 0 || _networkFractionAmount > 0)\n\t\t\t\t\t&& (_stakedNetworkAmount.sub(_treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination)).add(_stakedPrimordialAmount.sub(_primordialAmount)) < _stakedFileSize)\n\t\t\t) ||\n\t\t\t( _denomination.length == 0 && _networkIntegerAmount == 0 && _networkFractionAmount == 0 && _primordialAmount > 0 && _stakedPrimordialAmount.sub(_primordialAmount) < _stakedFileSize)\n\t\t) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @dev Stake network token on existing staked content\n\t * @param _stakeId The ID of the staked content\n\t * @param _networkIntegerAmount The integer amount of the network token to stake\n\t * @param _networkFractionAmount The fraction amount of the network token to stake\n\t * @param _denomination The denomination of the the network token to stake\n\t * @return true on success\n\t */\n\tfunction _stakeNetworkToken(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination) internal isValidDenomination(_denomination) returns (bool) {\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t(address[] memory _paymentAddress, uint256[] memory _paymentAmount) = _treasury.determinePayment(_stakedContent.stakeOwner, _networkIntegerAmount, _networkFractionAmount, _denomination);\n\n\t\t_stakedContent.networkAmount = _stakedContent.networkAmount.add(_treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination));\n\n\t\t// Stake tokens from each denomination in payment address\n\t\tfor (uint256 i=0; i < _paymentAddress.length; i++) {\n\t\t\tif (_paymentAddress[i] != address(0) && _paymentAmount[i] > 0) {\n\t\t\t\trequire (AOToken(_paymentAddress[i]).stakeFrom(_stakedContent.stakeOwner, _paymentAmount[i]));\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Stake primordial token on existing staked content\n\t * @param _stakeId The ID of the staked content\n\t * @param _primordialAmount The amount of the primordial token to stake\n\t * @return true on success\n\t */\n\tfunction _stakePrimordialToken(bytes32 _stakeId, uint256 _primordialAmount) internal returns (bool) {\n\t\t// Make sure base denomination is active\n\t\t(, address _baseDenominationAddress, bool _baseDenominationActive) = _treasury.getBaseDenomination();\n\t\trequire (_baseDenominationAddress != address(0));\n\t\trequire (_baseDenominationActive == true);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\n\t\t_stakedContent.primordialAmount = _stakedContent.primordialAmount.add(_primordialAmount);\n\n\t\t// Primordial Token is the base AO Token\n\t\tAOToken _primordialToken = AOToken(_baseDenominationAddress);\n\t\t_stakedContent.primordialWeightedIndex = _primordialToken.weightedIndexByAddress(_stakedContent.stakeOwner);\n\t\trequire (_primordialToken.stakeIcoTokenFrom(_stakedContent.stakeOwner, _primordialAmount, _stakedContent.primordialWeightedIndex));\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Unstake some network token on existing staked content\n\t * @param _stakeId The ID of the staked content\n\t * @param _networkIntegerAmount The integer amount of the network token to unstake\n\t * @param _networkFractionAmount The fraction amount of the network token to unstake\n\t * @param _denomination The denomination of the the network token to unstake\n\t * @return true on success\n\t */\n\tfunction _unstakePartialNetworkToken(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination) internal isValidDenomination(_denomination) returns (bool) {\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\t(address[] memory _unstakeAddress, uint256[] memory _unstakeAmount) = _treasury.determineUnstake(_stakedContent.stakeOwner, _networkIntegerAmount, _networkFractionAmount, _denomination);\n\n\t\t_stakedContent.networkAmount = _stakedContent.networkAmount.sub(_treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination));\n\n\t\t// Unstake tokens from each denomination in unstake address\n\t\tfor (uint256 i=0; i < _unstakeAddress.length; i++) {\n\t\t\tif (_unstakeAddress[i] != address(0) && _unstakeAmount[i] > 0) {\n\t\t\t\trequire (AOToken(_unstakeAddress[i]).unstakeFrom(_stakedContent.stakeOwner, _unstakeAmount[i]));\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Unstake some primordial token on existing staked content\n\t * @param _stakeId The ID of the staked content\n\t * @param _primordialAmount The amount of the primordial token to unstake\n\t * @return true on success\n\t */\n\tfunction _unstakePartialPrimordialToken(bytes32 _stakeId, uint256 _primordialAmount) internal returns (bool) {\n\t\t// Make sure base denomination is active\n\t\t(, address _baseDenominationAddress, bool _baseDenominationActive) = _treasury.getBaseDenomination();\n\t\trequire (_baseDenominationAddress != address(0));\n\t\trequire (_baseDenominationActive == true);\n\n\t\tStakedContent storage _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\n\t\t_stakedContent.primordialAmount = _stakedContent.primordialAmount.sub(_primordialAmount);\n\n\t\t// Primordial Token is the base AO Token\n\t\tAOToken _primordialToken = AOToken(_baseDenominationAddress);\n\t\trequire (_primordialToken.unstakeIcoTokenFrom(_stakedContent.stakeOwner, _primordialAmount, _stakedContent.primordialWeightedIndex));\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n\t * @param _stakeId The stake ID to be checked\n\t * @param _networkIntegerAmount The integer amount of the network token\n\t * @param _networkFractionAmount The fraction amount of the network token\n\t * @param _denomination The denomination of the the network token\n\t * @param _primordialAmount The amount of primordial token\n\t * @return true when the amount is sufficient, false otherwise\n\t */\n\tfunction _canStakeExisting(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount) internal view returns (bool) {\n\t\tStakedContent memory _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\treturn _treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination).add(_primordialAmount).add(_stakedContent.networkAmount).add(_stakedContent.primordialAmount) >= _stakedContent.fileSize;\n\t\t} else if (_primordialAmount > 0) {\n\t\t\treturn _stakedContent.networkAmount.add(_stakedContent.primordialAmount).add(_primordialAmount) >= _stakedContent.fileSize;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * @dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n\t * @param _stakeId The stake ID to be checked\n\t * @param _networkIntegerAmount The integer amount of the network token\n\t * @param _networkFractionAmount The fraction amount of the network token\n\t * @param _denomination The denomination of the the network token\n\t * @param _primordialAmount The amount of primordial token\n\t * @return true when the amount is sufficient, false otherwise\n\t */\n\tfunction _canBuy(bytes32 _stakeId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination, uint256 _primordialAmount) internal view returns (bool) {\n\t\tStakedContent memory _stakedContent = stakedContents[stakedContentIndex[_stakeId]];\n\t\tuint256 _price = _stakedContent.networkAmount.add(_stakedContent.primordialAmount);\n\n\t\tif (_denomination.length > 0 && (_networkIntegerAmount > 0 || _networkFractionAmount > 0)) {\n\t\t\treturn _treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination).add(_primordialAmount) >= _price;\n\t\t} else if (_primordialAmount > 0) {\n\t\t\treturn _primordialAmount >= _price;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @dev Pay bought content with network token\n\t * @param _buyId The ID of the bought content\n\t * @param _networkIntegerAmount The integer amount of the network token to pay\n\t * @param _networkFractionAmount The fraction amount of the network token to pay\n\t * @param _denomination The denomination of the the network token to pay\n\t * @return true on success\n\t */\n\tfunction _payNetworkToken(bytes32 _buyId, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination) internal isValidDenomination(_denomination) returns (bool) {\n\t\tBoughtContent storage _boughtContent = boughtContents[boughtContentIndex[_buyId]];\n\t\tStakedContent memory _stakedContent = stakedContents[stakedContentIndex[_boughtContent.stakeId]];\n\n\t\t_boughtContent.networkAmount = _treasury.toBase(_networkIntegerAmount, _networkFractionAmount, _denomination);\n\n\t\t// Transfer payment\n\t\trequire (_transferNetworkTokenPayment(_boughtContent.buyer, _networkIntegerAmount, _networkFractionAmount, _denomination));\n\n\t\t// Store how much the content creator earns\n\t\tuint256 _contentCreatorProfit = (_boughtContent.networkAmount.mul(_stakedContent.profitPercentage)).div(PERCENTAGE_DIVISOR);\n\t\tbuyContentNetworkTokenProfit[_stakedContent.stakeOwner] = buyContentNetworkTokenProfit[_stakedContent.stakeOwner].add(_contentCreatorProfit);\n\t\temit BuyContentNetworkTokenEarning(_boughtContent.buyer, _stakedContent.stakeOwner, _boughtContent.buyId, _boughtContent.stakeId, _boughtContent.networkAmount, _contentCreatorProfit, _stakedContent.profitPercentage, 0);\n\n\t\t// Store how much the node host earns\n\t\tbuyContentNetworkTokenProfit[_boughtContent.host] = buyContentNetworkTokenProfit[_boughtContent.host].add(_boughtContent.networkAmount.sub(_contentCreatorProfit));\n\t\temit BuyContentNetworkTokenEarning(_boughtContent.buyer, _boughtContent.host, _boughtContent.buyId, _boughtContent.stakeId, _boughtContent.networkAmount, _boughtContent.networkAmount.sub(_contentCreatorProfit), PERCENTAGE_DIVISOR.sub(_stakedContent.profitPercentage), 1);\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Actually transfer the network token for the purchase\n\t * @param _sender The address of the sender\n\t * @param _networkIntegerAmount The integer amount of the network token to transfer\n\t * @param _networkFractionAmount The fraction amount of the network token to transfer\n\t * @param _denomination The denomination of the the network token to transfer\n\t * @return true on success\n\t */\n\tfunction _transferNetworkTokenPayment(address _sender, uint256 _networkIntegerAmount, uint256 _networkFractionAmount, bytes8 _denomination) internal returns (bool) {\n\t\t// Transfer tokens from each denomination in payment address to this contract\n\t\t(address[] memory _paymentAddress, uint256[] memory _paymentAmount) = _treasury.determinePayment(_sender, _networkIntegerAmount, _networkFractionAmount, _denomination);\n\n\t\tfor (uint256 i=0; i < _paymentAddress.length; i++) {\n\t\t\tif (_paymentAddress[i] != address(0) && _paymentAmount[i] > 0) {\n\t\t\t\trequire (AOToken(_paymentAddress[i]).whitelistTransferFrom(_sender, this, _paymentAmount[i]));\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @dev Pay bought content with primordial token\n\t * @param _buyId The ID of the bought content\n\t * @param _primordialAmount The amount of the primordial token to pay\n\t * @return true on success\n\t */\n\tfunction _payPrimordialToken(bytes32 _buyId, uint256 _primordialAmount) internal returns (bool) {\n\t\t// Make sure base denomination is active\n\t\t(, address _baseDenominationAddress, bool _baseDenominationActive) = _treasury.getBaseDenomination();\n\t\trequire (_baseDenominationAddress != address(0));\n\t\trequire (_baseDenominationActive == true);\n\n\t\tBoughtContent storage _boughtContent = boughtContents[boughtContentIndex[_buyId]];\n\t\tStakedContent memory _stakedContent = stakedContents[stakedContentIndex[_boughtContent.stakeId]];\n\n\t\t_boughtContent.primordialAmount = _primordialAmount;\n\n\t\t// Primordial Token is the base AO Token\n\t\tAOToken _primordialToken = AOToken(_baseDenominationAddress);\n\t\t_boughtContent.primordialWeightedIndex = _primordialToken.weightedIndexByAddress(_boughtContent.buyer);\n\n\t\t// Transfer payment\n\t\trequire (_primordialToken.whitelistTransferIcoTokenFrom(_boughtContent.buyer, this, _boughtContent.primordialAmount));\n\n\t\t// Store how much the content creator earns\n\t\tuint256 _contentCreatorProfit = (_boughtContent.primordialAmount.mul(_stakedContent.profitPercentage)).div(PERCENTAGE_DIVISOR);\n\t\tbuyContentPrimordialTokenProfit[_stakedContent.stakeOwner][_boughtContent.primordialWeightedIndex] = buyContentPrimordialTokenProfit[_stakedContent.stakeOwner][_boughtContent.primordialWeightedIndex].add(_contentCreatorProfit);\n\t\temit BuyContentPrimordialTokenEarning(_boughtContent.buyer, _stakedContent.stakeOwner, _boughtContent.buyId, _boughtContent.stakeId, _boughtContent.primordialAmount, _boughtContent.primordialWeightedIndex, _contentCreatorProfit, _stakedContent.profitPercentage, 0);\n\n\t\t// Store how much the node host earns\n\t\tbuyContentPrimordialTokenProfit[_boughtContent.host][_boughtContent.primordialWeightedIndex] = buyContentPrimordialTokenProfit[_boughtContent.host][_boughtContent.primordialWeightedIndex].add(_boughtContent.primordialAmount.sub(_contentCreatorProfit));\n\t\temit BuyContentPrimordialTokenEarning(_boughtContent.buyer, _boughtContent.host, _boughtContent.buyId, _boughtContent.stakeId, _boughtContent.primordialAmount, _boughtContent.primordialWeightedIndex, _boughtContent.primordialAmount.sub(_contentCreatorProfit), PERCENTAGE_DIVISOR.sub(_stakedContent.profitPercentage), 1);\n\t\treturn true;\n\t}\n}\n","sourcePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOContent.sol","ast":{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOContent.sol","exportedSymbols":{"AOContent":[2327]},"id":2328,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:0"},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/SafeMath.sol","file":"./SafeMath.sol","id":2,"nodeType":"ImportDirective","scope":2328,"sourceUnit":6013,"src":"26:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/owned.sol","file":"./owned.sol","id":3,"nodeType":"ImportDirective","scope":2328,"sourceUnit":6458,"src":"51:21:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOToken.sol","file":"./AOToken.sol","id":4,"nodeType":"ImportDirective","scope":2328,"sourceUnit":4678,"src":"73:23:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOTreasury.sol","file":"./AOTreasury.sol","id":5,"nodeType":"ImportDirective","scope":2328,"sourceUnit":5763,"src":"97:26:0","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":6,"name":"owned","nodeType":"UserDefinedTypeName","referencedDeclaration":6457,"src":"321:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_owned_$6457","typeString":"contract owned"}},"id":7,"nodeType":"InheritanceSpecifier","src":"321:5:0"}],"contractDependencies":[6457],"contractKind":"contract","documentation":"@title AOContent\n * The purpose of this contract is to allow content creator to stake network ERC20 AO tokens and/or primordial AO Tokens\non his/her content","fullyImplemented":true,"id":2327,"linearizedBaseContracts":[2327,6457],"name":"AOContent","nodeType":"ContractDefinition","nodes":[{"id":10,"libraryName":{"contractScope":null,"id":8,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":6012,"src":"336:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$6012","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"330:27:0","typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":12,"name":"paused","nodeType":"VariableDeclaration","scope":2327,"src":"360:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11,"name":"bool","nodeType":"ElementaryTypeName","src":"360:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"public"},{"constant":false,"id":14,"name":"killed","nodeType":"VariableDeclaration","scope":2327,"src":"381:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13,"name":"bool","nodeType":"ElementaryTypeName","src":"381:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"public"},{"constant":false,"id":16,"name":"inflationRate","nodeType":"VariableDeclaration","scope":2327,"src":"402:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":true,"id":21,"name":"PERCENTAGE_DIVISOR","nodeType":"VariableDeclaration","scope":2327,"src":"484:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":20,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"529:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"36","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"535:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"529:7:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"visibility":"public"},{"constant":false,"id":23,"name":"totalStakedContents","nodeType":"VariableDeclaration","scope":2327,"src":"557:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"id":25,"name":"totalBoughtContents","nodeType":"VariableDeclaration","scope":2327,"src":"594:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"594:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"id":27,"name":"_treasury","nodeType":"VariableDeclaration","scope":2327,"src":"631:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"},"typeName":{"contractScope":null,"id":26,"name":"AOTreasury","nodeType":"UserDefinedTypeName","referencedDeclaration":5762,"src":"631:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"value":null,"visibility":"private"},{"canonicalName":"AOContent.StakedContent","id":48,"members":[{"constant":false,"id":29,"name":"stakeId","nodeType":"VariableDeclaration","scope":48,"src":"688:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"688:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":31,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":48,"src":"707:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":33,"name":"networkAmount","nodeType":"VariableDeclaration","scope":48,"src":"729:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":35,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":48,"src":"805:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":37,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":48,"src":"909:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":39,"name":"datKey","nodeType":"VariableDeclaration","scope":48,"src":"944:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":38,"name":"string","nodeType":"ElementaryTypeName","src":"944:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"fileSize","nodeType":"VariableDeclaration","scope":48,"src":"961:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":48,"src":"981:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"name":"active","nodeType":"VariableDeclaration","scope":48,"src":"1053:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"1053:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":47,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":48,"src":"1117:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"StakedContent","nodeType":"StructDefinition","scope":2327,"src":"663:484:0","visibility":"public"},{"canonicalName":"AOContent.BoughtContent","id":65,"members":[{"constant":false,"id":50,"name":"buyId","nodeType":"VariableDeclaration","scope":65,"src":"1175:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"name":"stakeId","nodeType":"VariableDeclaration","scope":65,"src":"1192:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1192:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":54,"name":"buyer","nodeType":"VariableDeclaration","scope":65,"src":"1211:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":56,"name":"host","nodeType":"VariableDeclaration","scope":65,"src":"1228:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":58,"name":"networkAmount","nodeType":"VariableDeclaration","scope":65,"src":"1284:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":60,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":65,"src":"1360:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":62,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":65,"src":"1464:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":64,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":65,"src":"1499:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"BoughtContent","nodeType":"StructDefinition","scope":2327,"src":"1150:379:0","visibility":"public"},{"constant":false,"id":69,"name":"stakedContents","nodeType":"VariableDeclaration","scope":2327,"src":"1597:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent)"},"typeName":{"id":68,"keyType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1597:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent)"},"valueType":{"contractScope":null,"id":67,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"1617:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}}},"value":null,"visibility":"private"},{"constant":false,"id":73,"name":"stakedContentIndex","nodeType":"VariableDeclaration","scope":2327,"src":"1720:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":72,"keyType":{"id":70,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1720:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"private"},{"constant":false,"id":77,"name":"boughtContents","nodeType":"VariableDeclaration","scope":2327,"src":"1844:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent)"},"typeName":{"id":76,"keyType":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1844:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent)"},"valueType":{"contractScope":null,"id":75,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"1864:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}}},"value":null,"visibility":"private"},{"constant":false,"id":81,"name":"boughtContentIndex","nodeType":"VariableDeclaration","scope":2327,"src":"1965:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":80,"keyType":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1965:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"private"},{"constant":false,"id":87,"name":"buyerOwnedStakeId","nodeType":"VariableDeclaration","scope":2327,"src":"2148:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"},"typeName":{"id":86,"keyType":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2148:49:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"},"valueType":{"id":85,"keyType":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2177:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2168:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueType":{"id":84,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2188:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}},"value":null,"visibility":"internal"},{"constant":false,"id":91,"name":"buyContentNetworkTokenProfit","nodeType":"VariableDeclaration","scope":2327,"src":"2353:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":90,"keyType":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2353:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"public"},{"constant":false,"id":97,"name":"buyContentPrimordialTokenProfit","nodeType":"VariableDeclaration","scope":2327,"src":"2567:88:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":96,"keyType":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2567:49:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":95,"keyType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2587:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"public"},{"anonymous":false,"documentation":null,"id":123,"name":"StakeContent","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":123,"src":"2758:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":101,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":123,"src":"2788:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":103,"indexed":false,"name":"networkIntegerAmount","nodeType":"VariableDeclaration","scope":123,"src":"2815:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":105,"indexed":false,"name":"networkFractionAmount","nodeType":"VariableDeclaration","scope":123,"src":"2847:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"name":"denomination","nodeType":"VariableDeclaration","scope":123,"src":"2880:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":106,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2880:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":109,"indexed":false,"name":"totalNetworkBaseAmount","nodeType":"VariableDeclaration","scope":123,"src":"2903:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":123,"src":"2937:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":123,"src":"2965:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":115,"indexed":false,"name":"datKey","nodeType":"VariableDeclaration","scope":123,"src":"3000:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":114,"name":"string","nodeType":"ElementaryTypeName","src":"3000:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":117,"indexed":false,"name":"fileSize","nodeType":"VariableDeclaration","scope":123,"src":"3017:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3017:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":123,"src":"3037:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":123,"src":"3065:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2754:340:0"},"src":"2736:359:0"},{"anonymous":false,"documentation":null,"id":131,"name":"SetProfitPercentage","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":131,"src":"3227:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"3227:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":127,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":131,"src":"3255:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"name":"newProfitPercentage","nodeType":"VariableDeclaration","scope":131,"src":"3280:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3226:82:0"},"src":"3201:108:0"},{"anonymous":false,"documentation":null,"id":143,"name":"UnstakePartialContent","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":143,"src":"3460:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":143,"src":"3488:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3488:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"name":"remainingNetworkAmount","nodeType":"VariableDeclaration","scope":143,"src":"3513:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"name":"remainingPrimordialAmount","nodeType":"VariableDeclaration","scope":143,"src":"3545:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":141,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":143,"src":"3580:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3459:153:0"},"src":"3432:181:0"},{"anonymous":false,"documentation":null,"id":149,"name":"UnstakeContent","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":149,"src":"3742:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"3742:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":147,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":149,"src":"3770:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3741:53:0"},"src":"3721:74:0"},{"anonymous":false,"documentation":null,"id":161,"name":"StakeExistingContent","nodeType":"EventDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":161,"src":"3911:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"3911:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":153,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":161,"src":"3939:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3939:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":155,"indexed":false,"name":"currentNetworkAmount","nodeType":"VariableDeclaration","scope":161,"src":"3964:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"name":"currentPrimordialAmount","nodeType":"VariableDeclaration","scope":161,"src":"3994:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"name":"currentPrimordialWeightedIndex","nodeType":"VariableDeclaration","scope":161,"src":"4027:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3910:156:0"},"src":"3884:183:0"},{"anonymous":false,"documentation":null,"id":179,"name":"BuyContentNetworkTokenEarning","nodeType":"EventDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","scope":179,"src":"4282:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"4282:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"name":"recipient","nodeType":"VariableDeclaration","scope":179,"src":"4306:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4306:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":167,"indexed":true,"name":"buyId","nodeType":"VariableDeclaration","scope":179,"src":"4333:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4333:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":179,"src":"4356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"name":"networkAmount","nodeType":"VariableDeclaration","scope":179,"src":"4373:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4373:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":173,"indexed":false,"name":"networkProfitAmount","nodeType":"VariableDeclaration","scope":179,"src":"4397:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":175,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":179,"src":"4426:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":177,"indexed":false,"name":"recipientType","nodeType":"VariableDeclaration","scope":179,"src":"4452:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":176,"name":"uint8","nodeType":"ElementaryTypeName","src":"4452:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"4281:191:0"},"src":"4246:227:0"},{"anonymous":false,"documentation":null,"id":199,"name":"BuyContentPrimordialTokenEarning","nodeType":"EventDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","scope":199,"src":"4515:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"4515:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":183,"indexed":true,"name":"recipient","nodeType":"VariableDeclaration","scope":199,"src":"4539:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"4539:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":185,"indexed":true,"name":"buyId","nodeType":"VariableDeclaration","scope":199,"src":"4566:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4566:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":199,"src":"4589:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4589:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":199,"src":"4606:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":199,"src":"4632:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4632:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":193,"indexed":false,"name":"primordialProfitAmount","nodeType":"VariableDeclaration","scope":199,"src":"4665:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":199,"src":"4697:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":197,"indexed":false,"name":"recipientType","nodeType":"VariableDeclaration","scope":199,"src":"4723:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":196,"name":"uint8","nodeType":"ElementaryTypeName","src":"4723:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"4514:229:0"},"src":"4476:268:0"},{"anonymous":false,"documentation":null,"id":221,"name":"BuyContent","nodeType":"EventDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"name":"buyer","nodeType":"VariableDeclaration","scope":221,"src":"4830:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"4830:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":203,"indexed":false,"name":"buyId","nodeType":"VariableDeclaration","scope":221,"src":"4853:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4853:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":205,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":221,"src":"4868:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4868:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":207,"indexed":false,"name":"host","nodeType":"VariableDeclaration","scope":221,"src":"4885:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":209,"indexed":false,"name":"networkIntegerAmount","nodeType":"VariableDeclaration","scope":221,"src":"4899:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4899:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"name":"networkFractionAmount","nodeType":"VariableDeclaration","scope":221,"src":"4929:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":213,"indexed":false,"name":"denomination","nodeType":"VariableDeclaration","scope":221,"src":"4960:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":212,"name":"bytes8","nodeType":"ElementaryTypeName","src":"4960:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":215,"indexed":false,"name":"totalNetworkAmount","nodeType":"VariableDeclaration","scope":221,"src":"4981:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":217,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":221,"src":"5009:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":219,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":221,"src":"5035:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5035:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4829:238:0"},"src":"4813:255:0"},{"anonymous":false,"documentation":null,"id":223,"name":"EscapeHatch","nodeType":"EventDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"5159:2:0"},"src":"5142:20:0"},{"body":{"id":234,"nodeType":"Block","src":"5304:48:0","statements":[{"expression":{"argumentTypes":null,"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":228,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5308:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":230,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5331:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":229,"name":"AOTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"5320:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOTreasury_$5762_$","typeString":"type(contract AOTreasury)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5320:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"src":"5308:40:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":233,"nodeType":"ExpressionStatement","src":"5308:40:0"}]},"documentation":"@dev Constructor function\n@param _treasuryAddress The address of AOTreasury","id":235,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"name":"_treasuryAddress","nodeType":"VariableDeclaration","scope":235,"src":"5271:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"5271:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5270:26:0"},"payable":false,"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"5304:0:0"},"scope":2327,"src":"5259:93:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":248,"nodeType":"Block","src":"5431:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":238,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"5444:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5454:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5444:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":241,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5463:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5473:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5463:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5444:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"5435:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5435:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"5435:44:0"},{"id":247,"nodeType":"PlaceholderStatement","src":"5483:1:0"}]},"documentation":"@dev Checks if contract is currently active","id":249,"name":"isActive","nodeType":"ModifierDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"5431:0:0"},"src":"5413:75:0","visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"5597:249:0","statements":[{"assignments":[254,256],"declarations":[{"constant":false,"id":254,"name":"_networkTokenAddress","nodeType":"VariableDeclaration","scope":276,"src":"5660:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"5660:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"name":"_networkTokenActive","nodeType":"VariableDeclaration","scope":276,"src":"5690:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"5690:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":261,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":259,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"5744:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":257,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5718:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getDenomination","nodeType":"MemberAccess","referencedDeclaration":5003,"src":"5718:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes8_$returns$_t_address_$_t_bool_$","typeString":"function (bytes8) view external returns (address,bool)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5718:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"5659:99:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":263,"name":"_networkTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5771:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5803:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5795:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5795:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5771:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":268,"name":"_networkTokenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5809:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5832:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5809:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5771:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"5762:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5762:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"5762:75:0"},{"id":274,"nodeType":"PlaceholderStatement","src":"5841:1:0"}]},"documentation":"@dev Checks if the denomination is valid","id":276,"name":"isValidDenomination","nodeType":"ModifierDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"name":"_denomination","nodeType":"VariableDeclaration","scope":276,"src":"5575:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":250,"name":"bytes8","nodeType":"ElementaryTypeName","src":"5575:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"5574:22:0"},"src":"5546:300:0","visibility":"internal"},{"body":{"id":287,"nodeType":"Block","src":"6034:24:0","statements":[{"expression":{"argumentTypes":null,"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":283,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"6038:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":284,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"6047:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6038:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"ExpressionStatement","src":"6038:16:0"}]},"documentation":"@dev Owner pauses/unpauses contract\n@param _paused Either to pause contract or not","id":288,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":281,"modifierName":{"argumentTypes":null,"id":280,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"6024:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6024:9:0"}],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"name":"_paused","nodeType":"VariableDeclaration","scope":288,"src":"6003:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"6003:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6002:14:0"},"payable":false,"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"6034:0:0"},"scope":2327,"src":"5984:74:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":306,"nodeType":"Block","src":"6223:72:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":294,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6236:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6246:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6236:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"6227:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6227:25:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"6227:25:0"},{"expression":{"argumentTypes":null,"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":299,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6256:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6265:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6256:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"ExpressionStatement","src":"6256:13:0"},{"eventCall":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"EscapeHatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6278:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6278:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":305,"nodeType":"EmitStatement","src":"6273:18:0"}]},"documentation":"@dev Owner triggers emergency mode.\n\t * Allow stake owners to withdraw all existing active staked funds","id":307,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":291,"modifierName":{"argumentTypes":null,"id":290,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"6213:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6213:9:0"}],"name":"escapeHatch","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"6203:2:0"},"payable":false,"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"6223:0:0"},"scope":2327,"src":"6183:112:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":320,"nodeType":"Block","src":"6503:38:0","statements":[{"expression":{"argumentTypes":null,"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":316,"name":"inflationRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"6507:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":317,"name":"_inflationRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6523:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6507:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"6507:30:0"}]},"documentation":"@dev Whitelisted address sets inflation rate\n@param _inflationRate The new inflation rate value to be set","id":321,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"6491:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6491:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":314,"modifierName":{"argumentTypes":null,"id":311,"name":"inWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"6479:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6479:23:0"}],"name":"setInflationRate","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"name":"_inflationRate","nodeType":"VariableDeclaration","scope":321,"src":"6448:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6447:24:0"},"payable":false,"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[],"src":"6503:0:0"},"scope":2327,"src":"6422:119:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"7467:1607:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":342,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7486:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7480:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":"bytes"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7480:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7480:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7504:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7480:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7471:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7471:35:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"7471:35:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":350,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7519:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7531:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7519:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7510:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7510:23:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"7510:23:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":356,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7546:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7570:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7546:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":359,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7575:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7600:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7575:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7546:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":363,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7605:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7605:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7546:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7537:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7537:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"7537:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":370,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"7640:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":371,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7661:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7631:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7631:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"7631:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":377,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7703:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":378,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7726:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":379,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7750:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":380,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7765:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":381,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7784:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":376,"name":"_canStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7693:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,bytes8,uint256,uint256) view returns (bool)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7693:101:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7798:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7693:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7684:119:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"7684:119:0"},{"expression":{"argumentTypes":null,"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7843:21:0","subExpression":{"argumentTypes":null,"id":387,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"7843:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":389,"nodeType":"ExpressionStatement","src":"7843:21:0"},{"assignments":[391],"declarations":[{"constant":false,"id":391,"name":"_stakeId","nodeType":"VariableDeclaration","scope":518,"src":"7891:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7891:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":402,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"7937:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7943:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7943:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":398,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"7955:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":399,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7976:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"argumentTypes":null,"id":393,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"7920:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7920:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7920:64:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":392,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7910:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7910:75:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7891:94:0"},{"assignments":[404],"declarations":[{"constant":false,"id":404,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":518,"src":"7989:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":403,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"7989:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":408,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":405,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"8028:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":407,"indexExpression":{"argumentTypes":null,"id":406,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8043:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8028:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7989:74:0"},{"expression":{"argumentTypes":null,"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":409,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8067:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":29,"src":"8067:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":412,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8092:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8067:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":414,"nodeType":"ExpressionStatement","src":"8067:33:0"},{"expression":{"argumentTypes":null,"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":415,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8104:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8104:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8132:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8132:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8104:38:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"nodeType":"ExpressionStatement","src":"8104:38:0"},{"expression":{"argumentTypes":null,"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":422,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8146:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"8146:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":425,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8146:31:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":427,"nodeType":"ExpressionStatement","src":"8146:31:0"},{"expression":{"argumentTypes":null,"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":428,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8181:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8181:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":431,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8207:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":433,"nodeType":"ExpressionStatement","src":"8181:35:0"},{"expression":{"argumentTypes":null,"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":434,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8220:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8220:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":437,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"8254:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8220:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"8220:51:0"},{"expression":{"argumentTypes":null,"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":440,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8275:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"8275:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8299:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8275:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"ExpressionStatement","src":"8275:28:0"},{"expression":{"argumentTypes":null,"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":446,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8307:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"8307:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":449,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"8343:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8307:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"8307:39:0"},{"expression":{"argumentTypes":null,"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":452,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"8351:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":454,"indexExpression":{"argumentTypes":null,"id":453,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8370:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8351:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":455,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8382:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8351:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":457,"nodeType":"ExpressionStatement","src":"8351:50:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":458,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8410:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8410:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8433:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8410:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":462,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8439:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8463:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8439:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":465,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8468:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8493:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8468:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8439:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8438:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8410:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":481,"nodeType":"IfStatement","src":"8406:201:0","trueBody":{"id":480,"nodeType":"Block","src":"8497:110:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":473,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8530:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":474,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8540:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":475,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8563:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":476,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8587:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":472,"name":"_stakeNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8511:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8511:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"8502:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8502:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"8502:100:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":482,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8614:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8614:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":493,"nodeType":"IfStatement","src":"8610:97:0","trueBody":{"id":492,"nodeType":"Block","src":"8637:70:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":487,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8673:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":488,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8683:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":486,"name":"_stakePrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"8651:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8651:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"8642:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"8642:60:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8732:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8732:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":497,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8747:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8760:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":499,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8786:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":500,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8813:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":501,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8831:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"8831:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":503,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8864:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"8864:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":505,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8900:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"8900:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":507,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8943:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"8943:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":509,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8969:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8969:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":511,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8997:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8997:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":513,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9033:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"9033:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":494,"name":"StakeContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"8715:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,bytes8,uint256,uint256,uint256,string memory,uint256,uint256,uint256)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8715:355:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"EmitStatement","src":"8710:360:0"}]},"documentation":"@dev Stake `_networkIntegerAmount` + `_networkFractionAmount` of network token in `_denomination` and/or `_primordialAmount` primordial Tokens for a content\n@param _networkIntegerAmount The integer amount of network token to stake\n@param _networkFractionAmount The fraction amount of network token to stake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to stake\n@param _datKey The dat key of the file\n@param _fileSize The size of the file\n@param _profitPercentage The percentage of profit the stake owner's media will charge","id":518,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":338,"modifierName":{"argumentTypes":null,"id":337,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7458:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7458:8:0"}],"name":"stakeContent","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":518,"src":"7261:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":325,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":518,"src":"7294:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"7294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":327,"name":"_denomination","nodeType":"VariableDeclaration","scope":518,"src":"7328:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":326,"name":"bytes8","nodeType":"ElementaryTypeName","src":"7328:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":329,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":518,"src":"7352:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7352:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":331,"name":"_datKey","nodeType":"VariableDeclaration","scope":518,"src":"7381:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"7381:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":333,"name":"_fileSize","nodeType":"VariableDeclaration","scope":518,"src":"7399:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":335,"name":"_profitPercentage","nodeType":"VariableDeclaration","scope":518,"src":"7420:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7257:189:0"},"payable":false,"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"7467:0:0"},"scope":2327,"src":"7236:1838:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":570,"nodeType":"Block","src":"9337:477:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":528,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9350:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":529,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"9371:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9341:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9341:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"9341:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":534,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"9444:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":536,"indexExpression":{"argumentTypes":null,"id":535,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9463:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9444:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9475:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9444:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9435:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9435:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9435:42:0"},{"assignments":[542],"declarations":[{"constant":false,"id":542,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":571,"src":"9482:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":541,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"9482:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":548,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":543,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"9521:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":547,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":544,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"9536:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":546,"indexExpression":{"argumentTypes":null,"id":545,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9555:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9536:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9521:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9482:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":550,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9644:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"9644:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9673:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9673:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9644:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9635:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"9635:49:0"},{"expression":{"argumentTypes":null,"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":557,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9689:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"9689:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":560,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9723:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"9689:51:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9770:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9770:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":566,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9782:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":567,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9792:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"SetProfitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"9750:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9750:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"EmitStatement","src":"9745:65:0"}]},"documentation":"@dev Set profit percentage on existing staked content\n@param _stakeId The ID of the staked content\n@param _profitPercentage The new value to be set","id":571,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":525,"modifierName":{"argumentTypes":null,"id":524,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"9328:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9328:8:0"}],"name":"setProfitPercentage","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_stakeId","nodeType":"VariableDeclaration","scope":571,"src":"9276:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_profitPercentage","nodeType":"VariableDeclaration","scope":571,"src":"9294:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"9294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9275:45:0"},"payable":false,"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"9337:0:0"},"scope":2327,"src":"9247:567:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":630,"nodeType":"Block","src":"10552:488:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":595,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"10605:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":597,"indexExpression":{"argumentTypes":null,"id":596,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10624:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10605:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10636:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10605:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"10596:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10596:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"10596:42:0"},{"assignments":[603],"declarations":[{"constant":false,"id":603,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":631,"src":"10643:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":602,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"10643:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":609,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":604,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"10681:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":608,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":605,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"10696:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":607,"indexExpression":{"argumentTypes":null,"id":606,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10715:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10681:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10643:82:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":610,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10741:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"10741:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":612,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10771:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"10771:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":614,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10804:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"10804:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":616,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10840:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"10840:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":618,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10883:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"10883:21:0","typeDescriptions":{"typeIdentifier":"t_string_memory","typeString":"string memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":620,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10909:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10909:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":622,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10937:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"10937:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":624,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10973:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"10973:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":626,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10999:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"10999:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10736:300:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(address,uint256,uint256,uint256,string memory,uint256,uint256,bool,uint256)"}},"functionReturnParameters":593,"id":629,"nodeType":"Return","src":"10729:307:0"}]},"documentation":"@dev Return staked content information at a given ID\n@param _stakeId The ID of the staked content\n@return address of the staked content's owner\n@return the network base token amount staked for this content\n@return the primordial token amount staked for this content\n@return the primordial weighted index of the staked content\n@return the dat key of the content\n@return the file size of the content\n@return the profit percentage of the content\n@return status of the staked content\n@return the timestamp when the staked content was created","id":631,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"stakedContentById","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"name":"_stakeId","nodeType":"VariableDeclaration","scope":631,"src":"10436:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10436:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"10435:18:0"},"payable":false,"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10475:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":578,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10484:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"10493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":582,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":584,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10511:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":583,"name":"string","nodeType":"ElementaryTypeName","src":"10511:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10519:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"10519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":588,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10528:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"10528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10537:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"10537:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10543:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10474:77:0"},"scope":2327,"src":"10409:631:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":766,"nodeType":"Block","src":"11849:1364:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":647,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"11902:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":649,"indexExpression":{"argumentTypes":null,"id":648,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11921:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11902:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11933:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11902:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"11893:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11893:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"11893:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":655,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"11948:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":658,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"11977:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12002:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11977:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11948:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":662,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12007:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12027:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12007:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11948:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"11939:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11939:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"11939:90:0"},{"assignments":[669],"declarations":[{"constant":false,"id":669,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":767,"src":"12034:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":668,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"12034:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":675,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":670,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"12073:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":674,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":671,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"12088:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":673,"indexExpression":{"argumentTypes":null,"id":672,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12107:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12088:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12073:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12034:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":677,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12196:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"12196:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":679,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"12225:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12225:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12196:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12187:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12187:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"12187:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":685,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12330:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"12330:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12355:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12330:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":689,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12364:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"12364:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12364:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":693,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12400:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"12400:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12434:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12400:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12364:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12363:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12330:106:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12321:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12321:116:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"12321:116:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":704,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12533:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":705,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12556:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":706,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12580:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":707,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12595:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":708,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12614:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"12614:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":710,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12644:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"12644:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":712,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12677:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12677:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":703,"name":"_canUnstakePartial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"12514:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,bytes8,uint256,uint256,uint256,uint256) view returns (bool)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12514:187:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12505:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12505:197:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"12505:197:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":717,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12711:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12711:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12734:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12711:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":721,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12740:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12764:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12740:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":724,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12769:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12794:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12769:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12740:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12739:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12711:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":740,"nodeType":"IfStatement","src":"12707:210:0","trueBody":{"id":739,"nodeType":"Block","src":"12798:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":732,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12840:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":733,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12850:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":734,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12873:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":735,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12897:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":731,"name":"_unstakePartialNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"12812:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12812:99:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12803:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12803:109:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"12803:109:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":741,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12924:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12944:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12924:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":752,"nodeType":"IfStatement","src":"12920:106:0","trueBody":{"id":751,"nodeType":"Block","src":"12947:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":746,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12992:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":747,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"13002:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"name":"_unstakePartialPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"12961:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12961:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12952:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12952:69:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"12952:69:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":754,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13056:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"13056:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":756,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13083:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":29,"src":"13083:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":758,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13107:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13107:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":760,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13137:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"13137:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":762,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13170:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"13170:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"UnstakePartialContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13034:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,uint256)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13034:175:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"EmitStatement","src":"13029:180:0"}]},"documentation":"@dev Unstake existing staked content and refund partial staked amount to the stake owner\n\tUse unstakeContent() to unstake all staked token amount. unstakePartialContent() can unstake only up to\n\tthe mininum required to pay the fileSize\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of network token to unstake\n@param _networkFractionAmount The fraction amount of network token to unstake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to unstake","id":767,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":644,"modifierName":{"argumentTypes":null,"id":643,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"11840:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11840:8:0"}],"name":"unstakePartialContent","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"name":"_stakeId","nodeType":"VariableDeclaration","scope":767,"src":"11703:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11703:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":635,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":767,"src":"11721:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":637,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":767,"src":"11752:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":639,"name":"_denomination","nodeType":"VariableDeclaration","scope":767,"src":"11784:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":638,"name":"bytes8","nodeType":"ElementaryTypeName","src":"11784:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":641,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":767,"src":"11806:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"11806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11702:130:0"},"payable":false,"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"11849:0:0"},"scope":2327,"src":"11672:1541:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":870,"nodeType":"Block","src":"13428:1002:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":775,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"13481:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":777,"indexExpression":{"argumentTypes":null,"id":776,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13500:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13481:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13481:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13472:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13472:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"13472:42:0"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":871,"src":"13519:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":782,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"13519:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":789,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":784,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"13558:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":788,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":785,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"13573:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":787,"indexExpression":{"argumentTypes":null,"id":786,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13592:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13573:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13558:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13519:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":791,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13681:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"13681:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"13710:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13710:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13681:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13672:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13672:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"13672:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":799,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13815:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"13815:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13840:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13815:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":803,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13849:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13849:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13880:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13849:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":807,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13885:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"13885:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13919:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13885:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13849:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13848:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13815:106:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13806:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13806:116:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"13806:116:0"},{"expression":{"argumentTypes":null,"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":816,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13927:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"13927:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13951:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13927:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"ExpressionStatement","src":"13927:29:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":822,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13965:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13965:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13996:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13965:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":843,"nodeType":"IfStatement","src":"13961:222:0","trueBody":{"id":842,"nodeType":"Block","src":"13999:184:0","statements":[{"assignments":[827,null,null],"declarations":[{"constant":false,"id":827,"name":"_baseDenominationName","nodeType":"VariableDeclaration","scope":871,"src":"14005:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":826,"name":"bytes8","nodeType":"ElementaryTypeName","src":"14005:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},null,null],"id":831,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":828,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"14039:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"14039:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14039:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"14004:66:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":834,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14112:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":835,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14122:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"14122:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14152:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":838,"name":"_baseDenominationName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"14155:21:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":833,"name":"_unstakePartialNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"14084:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14084:93:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"14075:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14075:103:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"14075:103:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":844,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14190:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14190:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14224:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14190:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":863,"nodeType":"IfStatement","src":"14186:181:0","trueBody":{"id":862,"nodeType":"Block","src":"14227:140:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":850,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14272:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":851,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14282:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14282:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"_unstakePartialPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"14241:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14241:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"14232:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14232:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"14232:83:0"},{"expression":{"argumentTypes":null,"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":856,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14320:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"14320:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14361:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14320:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"14320:42:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":865,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14390:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"14390:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":867,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14417:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":864,"name":"UnstakeContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"14375:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14375:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"14370:56:0"}]},"documentation":"@dev Unstake existing staked content and refund the total staked amount to the stake owner\n@param _stakeId The ID of the staked content","id":871,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":772,"modifierName":{"argumentTypes":null,"id":771,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"13419:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13419:8:0"}],"name":"unstakeContent","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"name":"_stakeId","nodeType":"VariableDeclaration","scope":871,"src":"13394:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13393:18:0"},"payable":false,"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"13428:0:0"},"scope":2327,"src":"13370:1060:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1045,"nodeType":"Block","src":"15149:1851:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":887,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"15202:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":889,"indexExpression":{"argumentTypes":null,"id":888,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15221:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15202:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15233:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15202:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15193:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"15193:42:0"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1046,"src":"15240:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":894,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"15240:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":901,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":896,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"15279:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":900,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":897,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"15294:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":899,"indexExpression":{"argumentTypes":null,"id":898,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15313:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15294:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15279:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15240:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":903,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"15402:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"15402:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"15431:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15431:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15402:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15393:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15393:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"15393:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":911,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"15455:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15479:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15455:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":914,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"15484:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15509:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15484:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15455:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":918,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"15514:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15534:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15514:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15455:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15446:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15446:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"15446:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":926,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15567:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":927,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"15577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":928,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"15600:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":929,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"15624:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":930,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"15639:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_canStakeExisting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"15549:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8,uint256) view returns (bool)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15549:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15540:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15540:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"15540:118:0"},{"assignments":[null,935,937],"declarations":[null,{"constant":false,"id":935,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1046,"src":"15993:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"15993:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":937,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1046,"src":"16027:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"16027:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":941,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":938,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"16059:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"16059:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16059:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"15990:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":943,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"16103:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16139:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16131:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16131:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16103:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16094:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16094:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"16094:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":951,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"16155:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16182:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16155:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16146:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16146:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"16146:41:0"},{"assignments":[957],"declarations":[{"constant":false,"id":957,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1046,"src":"16191:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":956,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"16191:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":961,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":959,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"16226:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"16218:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16218:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"16191:60:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":962,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16259:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16279:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16259:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":965,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16284:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"16284:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":968,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16309:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16309:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16343:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16309:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":973,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16348:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16348:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16389:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16348:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:131:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":990,"nodeType":"IfStatement","src":"16255:250:0","trueBody":{"id":989,"nodeType":"Block","src":"16392:113:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"16446:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16446:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":979,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"16406:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"16406:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16406:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":984,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16461:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16461:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16406:93:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16397:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16397:103:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"16397:103:0"}]}},{"expression":{"argumentTypes":null,"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":991,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16509:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"16509:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16533:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16509:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":996,"nodeType":"ExpressionStatement","src":"16509:28:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":997,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"16545:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16545:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16568:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16545:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1001,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"16574:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16598:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16574:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1004,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"16603:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16628:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16603:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16574:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16573:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16545:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1020,"nodeType":"IfStatement","src":"16541:201:0","trueBody":{"id":1019,"nodeType":"Block","src":"16632:110:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1012,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16665:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1013,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"16675:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1014,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"16698:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1015,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"16722:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1011,"name":"_stakeNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"16646:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16646:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16637:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16637:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"16637:100:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1021,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16749:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16769:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16749:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1032,"nodeType":"IfStatement","src":"16745:97:0","trueBody":{"id":1031,"nodeType":"Block","src":"16772:70:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1026,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16808:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1027,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16818:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1025,"name":"_stakePrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"16786:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16786:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16777:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16777:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"16777:60:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"16872:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16872:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1036,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16884:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1037,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16894:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"16894:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1039,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16924:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16924:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1041,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16957:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16957:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"StakeExistingContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"16851:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16851:145:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"16846:150:0"}]},"documentation":"@dev Stake existing content with more tokens (this is to increase the price)\n\t * @param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of network token to stake\n@param _networkFractionAmount The fraction amount of network token to stake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to stake. (The primordial weighted index has to match the current staked weighted index)","id":1046,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":884,"modifierName":{"argumentTypes":null,"id":883,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"15140:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15140:8:0"}],"name":"stakeExistingContent","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1046,"src":"15003:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":875,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15021:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"15021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":877,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15052:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"15052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":879,"name":"_denomination","nodeType":"VariableDeclaration","scope":1046,"src":"15084:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":878,"name":"bytes8","nodeType":"ElementaryTypeName","src":"15084:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":881,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15106:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15106:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15002:130:0"},"payable":false,"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"15149:0:0"},"scope":2327,"src":"14973:2027:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1251,"nodeType":"Block","src":"17643:1933:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1064,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"17696:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1066,"indexExpression":{"argumentTypes":null,"id":1065,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"17715:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17727:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17696:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17687:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17687:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"17687:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1072,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"17802:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1075,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"17820:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17820:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17802:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1077,"indexExpression":{"argumentTypes":null,"id":1076,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"17832:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17802:39:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17802:46:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17852:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17802:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17793:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"17793:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1084,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"17981:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1085,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"17990:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1089,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1086,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"18005:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1088,"indexExpression":{"argumentTypes":null,"id":1087,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18024:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18005:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17990:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"id":1090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"17990:55:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17981:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1092,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"18049:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1094,"indexExpression":{"argumentTypes":null,"id":1093,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"18067:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18049:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1096,"indexExpression":{"argumentTypes":null,"id":1095,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18074:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18049:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18049:41:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18093:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18049:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17981:113:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17972:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17972:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"17972:123:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1104,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18109:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18133:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18109:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1107,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18138:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18163:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18138:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18109:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1111,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"18168:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18188:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18168:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18109:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"18100:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18100:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"18100:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1119,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18273:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1120,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18283:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1121,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18306:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1122,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"18330:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":1123,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"18345:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_canBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"18265:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8,uint256) view returns (bool)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18265:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"18256:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18256:108:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"18256:108:0"},{"expression":{"argumentTypes":null,"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18405:21:0","subExpression":{"argumentTypes":null,"id":1127,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18405:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1129,"nodeType":"ExpressionStatement","src":"18405:21:0"},{"assignments":[1131],"declarations":[{"constant":false,"id":1131,"name":"_buyId","nodeType":"VariableDeclaration","scope":1252,"src":"18451:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18451:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1142,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1135,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"18495:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1136,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18501:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18501:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1138,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18513:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1139,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18534:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":1133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"18478:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18478:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18478:65:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"18468:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18468:76:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"18451:93:0"},{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":1252,"src":"18549:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":1143,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"18549:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":1148,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1145,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"18588:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":1147,"indexExpression":{"argumentTypes":null,"id":1146,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18603:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18588:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18549:74:0"},{"expression":{"argumentTypes":null,"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1149,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18627:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"18627:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1152,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18650:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18627:29:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1154,"nodeType":"ExpressionStatement","src":"18627:29:0"},{"expression":{"argumentTypes":null,"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1155,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18660:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"18660:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1158,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18685:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18660:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1160,"nodeType":"ExpressionStatement","src":"18660:33:0"},{"expression":{"argumentTypes":null,"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1161,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18697:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"18697:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18720:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18720:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18697:33:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1167,"nodeType":"ExpressionStatement","src":"18697:33:0"},{"expression":{"argumentTypes":null,"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1168,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18734:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"18734:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1171,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"18756:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18734:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1173,"nodeType":"ExpressionStatement","src":"18734:27:0"},{"expression":{"argumentTypes":null,"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1174,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18765:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":64,"src":"18765:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1177,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"18801:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18765:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ExpressionStatement","src":"18765:39:0"},{"expression":{"argumentTypes":null,"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1180,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"18809:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1182,"indexExpression":{"argumentTypes":null,"id":1181,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18828:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18809:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1183,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18838:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18809:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"18809:48:0"},{"expression":{"argumentTypes":null,"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1186,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"18861:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1190,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18879:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18879:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18861:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1191,"indexExpression":{"argumentTypes":null,"id":1189,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18891:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18861:39:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1192,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18903:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18861:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1194,"nodeType":"ExpressionStatement","src":"18861:48:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1195,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"18918:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18918:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18941:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18918:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1199,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18947:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18971:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18947:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1202,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19001:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18976:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18947:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18946:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18918:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1218,"nodeType":"IfStatement","src":"18914:197:0","trueBody":{"id":1217,"nodeType":"Block","src":"19005:106:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1210,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"19036:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1211,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"19044:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1212,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"19067:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1213,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19091:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1209,"name":"_payNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"19019:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19019:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"19010:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19010:96:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"19010:96:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1219,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19118:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19138:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19118:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1230,"nodeType":"IfStatement","src":"19114:93:0","trueBody":{"id":1229,"nodeType":"Block","src":"19141:66:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1224,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"19175:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1225,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19183:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"_payPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"19155:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19155:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"19146:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19146:56:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"19146:56:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1232,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19319:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"19319:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1234,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19341:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"19341:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1236,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19363:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"19363:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1238,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19387:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"19387:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1240,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"19408:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1241,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"19431:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1242,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19455:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1243,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19470:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"19470:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1245,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19500:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"19500:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1247,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19533:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"19533:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"BuyContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"19308:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,address,uint256,uint256,bytes8,uint256,uint256,uint256)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19308:264:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"EmitStatement","src":"19303:269:0"}]},"documentation":"@dev Buy existing content\n@param _stakeId The ID of the staked content\n@param _host The node address that hosts the file\n@param _networkIntegerAmount The integer amount of network token to spend\n@param _networkFractionAmount The fraction amount of network token to spend\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to spend","id":1252,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":1061,"modifierName":{"argumentTypes":null,"id":1060,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"17634:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17634:8:0"}],"name":"buyContent","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1252,"src":"17482:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17482:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1050,"name":"_host","nodeType":"VariableDeclaration","scope":1252,"src":"17500:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"17500:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1052,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17515:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"17515:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1054,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17546:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"17546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1056,"name":"_denomination","nodeType":"VariableDeclaration","scope":1252,"src":"17578:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1055,"name":"bytes8","nodeType":"ElementaryTypeName","src":"17578:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1058,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17600:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"17600:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17481:145:0"},"payable":false,"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"17643:0:0"},"scope":2327,"src":"17462:2114:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1310,"nodeType":"Block","src":"20290:371:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1267,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"20298:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"20298:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20321:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20298:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1271,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"20327:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20351:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20327:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1274,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"20356:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20381:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20356:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20327:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20326:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20298:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1299,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"20577:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1300,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"20598:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20577:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1307,"nodeType":"Block","src":"20636:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20648:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1266,"id":1306,"nodeType":"Return","src":"20641:12:0"}]},"id":1308,"nodeType":"IfStatement","src":"20573:85:0","trueBody":{"id":1304,"nodeType":"Block","src":"20609:21:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20621:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1266,"id":1303,"nodeType":"Return","src":"20614:11:0"}]}},"id":1309,"nodeType":"IfStatement","src":"20294:364:0","trueBody":{"id":1298,"nodeType":"Block","src":"20385:182:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1287,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"20477:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1282,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"20411:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1283,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"20434:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1284,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"20458:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1280,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"20394:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"20394:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20394:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"20394:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20394:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1289,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"20499:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20394:114:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1296,"nodeType":"Block","src":"20539:24:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20552:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1266,"id":1295,"nodeType":"Return","src":"20545:12:0"}]},"id":1297,"nodeType":"IfStatement","src":"20390:173:0","trueBody":{"id":1293,"nodeType":"Block","src":"20510:23:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20523:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1266,"id":1292,"nodeType":"Return","src":"20516:11:0"}]}}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for the filesize\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@param _fileSize The file size of the content\n@return true when the amount is sufficient, false otherwise","id":1311,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canStake","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20130:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"20130:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1256,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20161:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"20161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1258,"name":"_denomination","nodeType":"VariableDeclaration","scope":1311,"src":"20193:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1257,"name":"bytes8","nodeType":"ElementaryTypeName","src":"20193:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1260,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20215:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"20215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1262,"name":"_fileSize","nodeType":"VariableDeclaration","scope":1311,"src":"20242:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"20242:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20129:131:0"},"payable":false,"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"name":"","nodeType":"VariableDeclaration","scope":1311,"src":"20284:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1264,"name":"bool","nodeType":"ElementaryTypeName","src":"20284:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"20283:6:0"},"scope":2327,"src":"20111:550:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"21547:805:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1330,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21560:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21560:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21583:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21560:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1334,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21593:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21617:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21593:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1337,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21622:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21647:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21622:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21593:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21592:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21560:89:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1343,"name":"_stakedNetworkAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"21657:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1346,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21697:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1347,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21720:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1348,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21744:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1344,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"21680:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"21680:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21680:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21657:101:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21560:198:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21559:204:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1353,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"21770:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1354,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"21796:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21770:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:254:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1357,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21826:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21826:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21849:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21826:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1361,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21860:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21884:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21860:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1364,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21889:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21914:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21889:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21860:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21859:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21826:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1382,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22063:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1380,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"22035:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"22035:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22035:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1374,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21968:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1375,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21991:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1376,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"22015:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1372,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"21951:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"21951:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21951:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1370,"name":"_stakedNetworkAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"21926:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"21926:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21926:104:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"21926:108:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21926:156:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1385,"name":"_stakedFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"22085:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21926:174:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21925:176:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21826:275:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21820:286:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:547:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1391,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"22115:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22115:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22139:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22115:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1395,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"22144:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22169:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22144:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1399,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"22174:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22200:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22174:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1403,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22205:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22225:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22205:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:111:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1409,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22258:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1407,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"22230:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"22230:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22230:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1411,"name":"_stakedFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"22279:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22230:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:179:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22113:182:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:736:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1421,"nodeType":"Block","src":"22328:21:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22340:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1329,"id":1420,"nodeType":"Return","src":"22333:11:0"}]},"id":1422,"nodeType":"IfStatement","src":"21551:798:0","trueBody":{"id":1418,"nodeType":"Block","src":"22300:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22312:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1329,"id":1417,"nodeType":"Return","src":"22305:12:0"}]}}]},"documentation":"@dev Check whether or the requested unstake amount is valid\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@param _stakedNetworkAmount The current staked network token amount\n@param _stakedPrimordialAmount The current staked primordial token amount\n@param _stakedFileSize The file size of the staked content\n@return true if can unstake, false otherwise","id":1424,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canUnstakePartial","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21306:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"21306:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1315,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21339:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"21339:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1317,"name":"_denomination","nodeType":"VariableDeclaration","scope":1424,"src":"21373:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1316,"name":"bytes8","nodeType":"ElementaryTypeName","src":"21373:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1319,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21397:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"21397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1321,"name":"_stakedNetworkAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21426:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"21426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1323,"name":"_stakedPrimordialAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21458:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"21458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1325,"name":"_stakedFileSize","nodeType":"VariableDeclaration","scope":1424,"src":"21493:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"21493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"21302:215:0"},"payable":false,"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"name":"","nodeType":"VariableDeclaration","scope":1424,"src":"21541:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1327,"name":"bool","nodeType":"ElementaryTypeName","src":"21541:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21540:6:0"},"scope":2327,"src":"21275:1077:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"22930:735:0","statements":[{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1525,"src":"22934:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1440,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"22934:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1447,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1442,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"22973:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1446,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1443,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"22988:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1445,"indexExpression":{"argumentTypes":null,"id":1444,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"23007:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22988:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22973:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22934:83:0"},{"assignments":[1451,1454],"declarations":[{"constant":false,"id":1451,"name":"_paymentAddress","nodeType":"VariableDeclaration","scope":1525,"src":"23022:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"23022:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1450,"length":null,"nodeType":"ArrayTypeName","src":"23022:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1454,"name":"_paymentAmount","nodeType":"VariableDeclaration","scope":1525,"src":"23056:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"23056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"length":null,"nodeType":"ArrayTypeName","src":"23056:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1463,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1457,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23118:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"23118:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1459,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"23145:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1460,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"23168:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1461,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"23192:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1455,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"23091:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determinePayment","nodeType":"MemberAccess","referencedDeclaration":5341,"src":"23091:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23091:115:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"23021:185:0"},{"expression":{"argumentTypes":null,"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1464,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23211:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"23211:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1472,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"23292:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1473,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"23315:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1474,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"23339:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1470,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"23275:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"23275:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23275:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1467,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23242:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"23242:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"23242:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23242:112:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:143:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"23211:143:0"},{"body":{"id":1520,"nodeType":"Block","src":"23470:177:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1490,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23479:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1492,"indexExpression":{"argumentTypes":null,"id":1491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23495:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23479:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23509:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23501:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23479:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1497,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"23515:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1499,"indexExpression":{"argumentTypes":null,"id":1498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23530:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23515:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23535:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23515:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23479:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1519,"nodeType":"IfStatement","src":"23475:168:0","trueBody":{"id":1518,"nodeType":"Block","src":"23538:105:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1510,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23591:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"23591:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1512,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"23618:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1514,"indexExpression":{"argumentTypes":null,"id":1513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23633:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23618:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1505,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23561:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1507,"indexExpression":{"argumentTypes":null,"id":1506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23577:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23561:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1504,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"23553:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23553:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stakeFrom","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"23553:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23553:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"23544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23544:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"23544:93:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23437:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1484,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23441:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23441:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23437:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"initializationExpression":{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"name":"i","nodeType":"VariableDeclaration","scope":1525,"src":"23424:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"23424:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1482,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23434:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23424:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23465:3:0","subExpression":{"argumentTypes":null,"id":1487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23465:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"23465:3:0"},"nodeType":"ForStatement","src":"23419:228:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23657:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1439,"id":1523,"nodeType":"Return","src":"23650:11:0"}]},"documentation":"@dev Stake network token on existing staked content\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of the network token to stake\n@param _networkFractionAmount The fraction amount of the network token to stake\n@param _denomination The denomination of the the network token to stake\n@return true on success","id":1525,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1435,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"22900:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1436,"modifierName":{"argumentTypes":null,"id":1434,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"22880:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"22880:34:0"}],"name":"_stakeNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1525,"src":"22768:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22768:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1428,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1525,"src":"22786:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"22786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1430,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1525,"src":"22817:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"22817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1432,"name":"_denomination","nodeType":"VariableDeclaration","scope":1525,"src":"22849:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1431,"name":"bytes8","nodeType":"ElementaryTypeName","src":"22849:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"22767:103:0"},"payable":false,"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"name":"","nodeType":"VariableDeclaration","scope":1525,"src":"22924:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1437,"name":"bool","nodeType":"ElementaryTypeName","src":"22924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"22923:6:0"},"scope":2327,"src":"22740:925:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"23987:797:0","statements":[{"assignments":[null,1535,1537],"declarations":[null,{"constant":false,"id":1535,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1604,"src":"24037:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"24037:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1537,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1604,"src":"24071:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1536,"name":"bool","nodeType":"ElementaryTypeName","src":"24071:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1541,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1538,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"24103:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"24103:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24103:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"24034:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1543,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24147:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24183:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24175:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24175:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24147:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24138:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24138:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"24138:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1551,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"24199:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24226:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24199:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24190:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24190:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"24190:41:0"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1604,"src":"24236:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1556,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"24236:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1563,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1558,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"24275:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1562,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1559,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"24290:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1561,"indexExpression":{"argumentTypes":null,"id":1560,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"24309:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24290:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24275:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24236:83:0"},{"expression":{"argumentTypes":null,"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1564,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24324:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"24324:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1570,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"24394:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1567,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24358:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"24358:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"24358:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24358:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24324:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"24324:88:0"},{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1604,"src":"24460:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":1574,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"24460:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":1579,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1577,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24495:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1576,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24487:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24487:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"24460:60:0"},{"expression":{"argumentTypes":null,"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1580,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24524:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"24524:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1585,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24605:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"24605:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1583,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"24565:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"24565:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24565:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24524:107:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"24524:107:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1593,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24679:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"24679:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1595,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"24706:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1596,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24725:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"24725:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1591,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"24644:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stakeIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"24644:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,uint256) external returns (bool)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24644:120:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24635:130:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"24635:130:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24776:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1533,"id":1602,"nodeType":"Return","src":"24769:11:0"}]},"documentation":"@dev Stake primordial token on existing staked content\n@param _stakeId The ID of the staked content\n@param _primordialAmount The amount of the primordial token to stake\n@return true on success","id":1604,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_stakePrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1604,"src":"23918:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1529,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1604,"src":"23936:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"23936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"23917:45:0"},"payable":false,"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"name":"","nodeType":"VariableDeclaration","scope":1604,"src":"23981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"23981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"23980:6:0"},"scope":2327,"src":"23887:897:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"25384:739:0","statements":[{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1705,"src":"25388:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1620,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"25388:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1627,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1622,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"25427:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1626,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1623,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"25442:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1625,"indexExpression":{"argumentTypes":null,"id":1624,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"25461:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25442:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25427:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25388:83:0"},{"assignments":[1631,1634],"declarations":[{"constant":false,"id":1631,"name":"_unstakeAddress","nodeType":"VariableDeclaration","scope":1705,"src":"25476:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"25476:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1630,"length":null,"nodeType":"ArrayTypeName","src":"25476:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1634,"name":"_unstakeAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25510:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"25510:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"length":null,"nodeType":"ArrayTypeName","src":"25510:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1643,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1637,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25572:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"25572:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1639,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"25599:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1640,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"25622:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1641,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25646:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1635,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"25545:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determineUnstake","nodeType":"MemberAccess","referencedDeclaration":5524,"src":"25545:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25545:115:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"25475:185:0"},{"expression":{"argumentTypes":null,"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1644,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25665:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"25665:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1652,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"25746:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1653,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"25769:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1654,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25793:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1650,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"25729:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"25729:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25729:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1647,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25696:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"25696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"25696:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25696:112:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25665:143:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1658,"nodeType":"ExpressionStatement","src":"25665:143:0"},{"body":{"id":1700,"nodeType":"Block","src":"25926:179:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1670,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"25935:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1672,"indexExpression":{"argumentTypes":null,"id":1671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25951:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25935:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25965:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25957:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25957:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25935:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1677,"name":"_unstakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25971:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1679,"indexExpression":{"argumentTypes":null,"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25986:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25971:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25991:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25971:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25935:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1699,"nodeType":"IfStatement","src":"25931:170:0","trueBody":{"id":1698,"nodeType":"Block","src":"25994:107:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1690,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"26049:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"26049:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1692,"name":"_unstakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26076:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1694,"indexExpression":{"argumentTypes":null,"id":1693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"26091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26076:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1685,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"26017:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1687,"indexExpression":{"argumentTypes":null,"id":1686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"26033:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26017:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1684,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"26009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26009:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unstakeFrom","nodeType":"MemberAccess","referencedDeclaration":2918,"src":"26009:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26009:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26000:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26000:95:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"26000:95:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25893:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1664,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"25897:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"25897:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25893:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"initializationExpression":{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"name":"i","nodeType":"VariableDeclaration","scope":1705,"src":"25880:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"25880:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1662,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25890:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25880:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25921:3:0","subExpression":{"argumentTypes":null,"id":1667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25921:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"nodeType":"ExpressionStatement","src":"25921:3:0"},"nodeType":"ForStatement","src":"25875:230:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26115:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1619,"id":1703,"nodeType":"Return","src":"26108:11:0"}]},"documentation":"@dev Unstake some network token on existing staked content\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of the network token to unstake\n@param _networkFractionAmount The fraction amount of the network token to unstake\n@param _denomination The denomination of the the network token to unstake\n@return true on success","id":1705,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1615,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25354:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1616,"modifierName":{"argumentTypes":null,"id":1614,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"25334:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"25334:34:0"}],"name":"_unstakePartialNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1705,"src":"25222:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25222:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1608,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25240:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"25240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1610,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25271:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"25271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1612,"name":"_denomination","nodeType":"VariableDeclaration","scope":1705,"src":"25303:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1611,"name":"bytes8","nodeType":"ElementaryTypeName","src":"25303:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"25221:103:0"},"payable":false,"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"name":"","nodeType":"VariableDeclaration","scope":1705,"src":"25378:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1617,"name":"bool","nodeType":"ElementaryTypeName","src":"25378:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"25377:6:0"},"scope":2327,"src":"25185:938:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"26463:688:0","statements":[{"assignments":[null,1715,1717],"declarations":[null,{"constant":false,"id":1715,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1774,"src":"26513:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"26513:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1717,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1774,"src":"26547:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1716,"name":"bool","nodeType":"ElementaryTypeName","src":"26547:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1721,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1718,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"26579:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"26579:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26579:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"26510:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1723,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"26623:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26659:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26651:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26651:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26623:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26614:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26614:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1729,"nodeType":"ExpressionStatement","src":"26614:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1731,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"26675:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26702:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"26675:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26666:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26666:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"ExpressionStatement","src":"26666:41:0"},{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1774,"src":"26712:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1736,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"26712:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1743,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1738,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"26751:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1742,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1739,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"26766:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1741,"indexExpression":{"argumentTypes":null,"id":1740,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"26785:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26766:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26751:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26712:83:0"},{"expression":{"argumentTypes":null,"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1744,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"26800:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"26800:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1750,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"26870:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1747,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"26834:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"26834:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"26834:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26834:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26800:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"26800:88:0"},{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1774,"src":"26936:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":1754,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"26936:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":1759,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1757,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"26971:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1756,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"26963:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26963:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"26936:60:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1763,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"27046:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"27046:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1765,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"27073:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1766,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"27092:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"27092:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1761,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"27009:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unstakeIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3234,"src":"27009:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,uint256) external returns (bool)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27009:122:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"27000:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27000:132:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"27000:132:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27143:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1713,"id":1772,"nodeType":"Return","src":"27136:11:0"}]},"documentation":"@dev Unstake some primordial token on existing staked content\n@param _stakeId The ID of the staked content\n@param _primordialAmount The amount of the primordial token to unstake\n@return true on success","id":1774,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_unstakePartialPrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1774,"src":"26394:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1709,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1774,"src":"26412:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"26412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26393:45:0"},"payable":false,"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"name":"","nodeType":"VariableDeclaration","scope":1774,"src":"26457:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"26457:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26456:6:0"},"scope":2327,"src":"26354:797:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"27848:594:0","statements":[{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1855,"src":"27852:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1789,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"27852:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1796,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1791,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"27890:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1795,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1792,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"27905:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1794,"indexExpression":{"argumentTypes":null,"id":1793,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"27924:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27890:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"27852:82:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1797,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"27943:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"27943:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27966:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27943:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1801,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"27972:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27996:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27972:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1804,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28001:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28026:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28001:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27972:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27971:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27943:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1832,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28256:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28276:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28256:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1851,"nodeType":"Block","src":"28417:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28429:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1788,"id":1850,"nodeType":"Return","src":"28422:12:0"}]},"id":1852,"nodeType":"IfStatement","src":"28252:187:0","trueBody":{"id":1848,"nodeType":"Block","src":"28279:132:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1842,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28361:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1838,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28324:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"28324:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1835,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28291:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"28291:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28291:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28291:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28291:69:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28291:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1844,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28383:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"28383:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28291:115:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1847,"nodeType":"Return","src":"28284:122:0"}]}},"id":1853,"nodeType":"IfStatement","src":"27939:500:0","trueBody":{"id":1831,"nodeType":"Block","src":"28030:216:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1824,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28182:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"28182:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1820,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28148:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"28148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1817,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28125:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1812,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"28059:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1813,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28082:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1814,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"28106:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1810,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"28042:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"28042:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:105:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:135:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:139:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:172:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1827,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28218:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"28218:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28042:199:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1830,"nodeType":"Return","src":"28035:206:0"}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n@param _stakeId The stake ID to be checked\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@return true when the amount is sufficient, false otherwise","id":1855,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canStakeExisting","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1855,"src":"27689:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27689:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1778,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27707:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"27707:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1780,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27738:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"27738:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1782,"name":"_denomination","nodeType":"VariableDeclaration","scope":1855,"src":"27770:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1781,"name":"bytes8","nodeType":"ElementaryTypeName","src":"27770:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1784,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27792:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"27792:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"27688:130:0"},"payable":false,"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"name":"","nodeType":"VariableDeclaration","scope":1855,"src":"27842:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1786,"name":"bool","nodeType":"ElementaryTypeName","src":"27842:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"27841:6:0"},"scope":2327,"src":"27662:780:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"29129:504:0","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1927,"src":"29133:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1870,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"29133:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1877,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1872,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"29171:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1876,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1873,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"29186:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1875,"indexExpression":{"argumentTypes":null,"id":1874,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"29205:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29186:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29171:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"29133:82:0"},{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"name":"_price","nodeType":"VariableDeclaration","scope":1927,"src":"29219:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"29219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1886,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1883,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"29269:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"29269:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1880,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"29236:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"29236:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"29236:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29236:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29219:82:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1887,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"29310:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"29310:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29333:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29310:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1891,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"29339:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29363:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29339:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1894,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"29368:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29393:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29368:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29339:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29338:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29310:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1913,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29535:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29555:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29535:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1923,"nodeType":"Block","src":"29608:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29620:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1869,"id":1922,"nodeType":"Return","src":"29613:12:0"}]},"id":1924,"nodeType":"IfStatement","src":"29531:99:0","trueBody":{"id":1920,"nodeType":"Block","src":"29558:44:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1916,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29570:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1917,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"29591:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29570:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1869,"id":1919,"nodeType":"Return","src":"29563:34:0"}]}},"id":1925,"nodeType":"IfStatement","src":"29306:324:0","trueBody":{"id":1912,"nodeType":"Block","src":"29397:128:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1907,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29492:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1902,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"29426:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1903,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"29449:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1904,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"29473:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1900,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"29409:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"29409:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29409:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"29409:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29409:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1909,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"29514:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29409:111:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1869,"id":1911,"nodeType":"Return","src":"29402:118:0"}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n@param _stakeId The stake ID to be checked\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@return true when the amount is sufficient, false otherwise","id":1927,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canBuy","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1927,"src":"28970:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28970:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1859,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1927,"src":"28988:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"28988:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1861,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1927,"src":"29019:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"29019:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1863,"name":"_denomination","nodeType":"VariableDeclaration","scope":1927,"src":"29051:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1862,"name":"bytes8","nodeType":"ElementaryTypeName","src":"29051:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1865,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1927,"src":"29073:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"29073:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"28969:130:0"},"payable":false,"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"name":"","nodeType":"VariableDeclaration","scope":1927,"src":"29123:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"29123:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"29122:6:0"},"scope":2327,"src":"28953:680:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":2067,"nodeType":"Block","src":"30191:1488:0","statements":[{"assignments":[1944],"declarations":[{"constant":false,"id":1944,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":2068,"src":"30195:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":1943,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"30195:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":1950,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1945,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"30234:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":1949,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1946,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"30249:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1948,"indexExpression":{"argumentTypes":null,"id":1947,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"30268:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30249:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30234:42:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30195:81:0"},{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":2068,"src":"30280:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1951,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"30280:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1959,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1953,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"30318:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1958,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1954,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"30333:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1957,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1955,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30352:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"30352:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30333:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30318:58:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30280:96:0"},{"expression":{"argumentTypes":null,"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1960,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30381:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"30381:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1965,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"30429:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1966,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"30452:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1967,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30476:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1963,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"30412:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"30412:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30412:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30381:109:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"30381:109:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1973,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30555:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"30555:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1975,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"30577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1976,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"30600:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1977,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30624:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1972,"name":"_transferNetworkTokenPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"30526:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,bytes8) returns (bool)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30526:112:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"30517:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30517:122:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"30517:122:0"},{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"name":"_contentCreatorProfit","nodeType":"VariableDeclaration","scope":2068,"src":"30690:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"30690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1993,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"30794:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1986,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30756:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"30756:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1983,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30723:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"30723:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":5953,"src":"30723:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30723:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30722:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"30722:71:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30722:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30690:123:0"},{"expression":{"argumentTypes":null,"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1994,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"30817:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1997,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1995,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30846:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"30846:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30817:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2003,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"30935:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1998,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"30875:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2001,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1999,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30904:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"30904:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30875:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"30875:59:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30875:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30817:140:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2006,"nodeType":"ExpressionStatement","src":"30817:140:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2008,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30996:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"30996:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2010,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31018:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"31018:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2012,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31045:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"31045:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2014,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31067:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"31067:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2016,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31091:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31091:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2018,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31121:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2019,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31144:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"31144:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31177:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2007,"name":"BuyContentNetworkTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"30966:29:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint8)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30966:213:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"EmitStatement","src":"30961:218:0"},{"expression":{"argumentTypes":null,"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2024,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"31224:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2027,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2025,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31253:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31253:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31224:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2036,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31363:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2033,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31330:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31330:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31330:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31330:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2028,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"31276:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2031,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2029,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31305:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31305:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31276:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"31276:53:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31276:110:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31224:162:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ExpressionStatement","src":"31224:162:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2042,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31425:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"31425:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2044,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31447:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31447:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2046,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31468:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"31468:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2048,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31490:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"31490:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2050,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31514:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31514:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2055,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2052,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31544:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31544:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31544:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31544:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2059,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31624:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"31624:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2057,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"31601:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31601:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31601:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31658:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2041,"name":"BuyContentNetworkTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"31395:29:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint8)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31395:265:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"EmitStatement","src":"31390:270:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"31671:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1942,"id":2066,"nodeType":"Return","src":"31664:11:0"}]},"documentation":"@dev Pay bought content with network token\n@param _buyId The ID of the bought content\n@param _networkIntegerAmount The integer amount of the network token to pay\n@param _networkFractionAmount The fraction amount of the network token to pay\n@param _denomination The denomination of the the network token to pay\n@return true on success","id":2068,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1938,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30161:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1939,"modifierName":{"argumentTypes":null,"id":1937,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"30141:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"30141:34:0"}],"name":"_payNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"name":"_buyId","nodeType":"VariableDeclaration","scope":2068,"src":"30031:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1931,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":2068,"src":"30047:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"30047:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":2068,"src":"30078:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"30078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1935,"name":"_denomination","nodeType":"VariableDeclaration","scope":2068,"src":"30110:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1934,"name":"bytes8","nodeType":"ElementaryTypeName","src":"30110:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"30030:101:0"},"payable":false,"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"name":"","nodeType":"VariableDeclaration","scope":2068,"src":"30185:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1940,"name":"bool","nodeType":"ElementaryTypeName","src":"30185:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"30184:6:0"},"scope":2327,"src":"30005:1674:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":2141,"nodeType":"Block","src":"32242:502:0","statements":[{"assignments":[2084,2087],"declarations":[{"constant":false,"id":2084,"name":"_paymentAddress","nodeType":"VariableDeclaration","scope":2142,"src":"32327:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"32327:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2083,"length":null,"nodeType":"ArrayTypeName","src":"32327:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":2087,"name":"_paymentAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32361:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"32361:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"length":null,"nodeType":"ArrayTypeName","src":"32361:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":2095,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2090,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"32423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2091,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"32432:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2092,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"32455:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2093,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"32479:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":2088,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"32396:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determinePayment","nodeType":"MemberAccess","referencedDeclaration":5341,"src":"32396:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32396:97:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"32326:167:0"},{"body":{"id":2137,"nodeType":"Block","src":"32549:177:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2107,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32558:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2109,"indexExpression":{"argumentTypes":null,"id":2108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32574:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32558:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32588:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32580:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32580:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32558:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2114,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"32594:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2116,"indexExpression":{"argumentTypes":null,"id":2115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32609:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32594:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32614:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32594:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32558:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2136,"nodeType":"IfStatement","src":"32554:168:0","trueBody":{"id":2135,"nodeType":"Block","src":"32617:105:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2127,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"32682:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2128,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"32691:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2129,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"32697:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2131,"indexExpression":{"argumentTypes":null,"id":2130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32712:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32697:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2122,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32640:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2124,"indexExpression":{"argumentTypes":null,"id":2123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32656:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32640:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2121,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"32632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32632:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"whitelistTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2989,"src":"32632:49:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32632:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"32623:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32623:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"32623:93:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32516:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2101,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32520:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"32520:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32516:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"initializationExpression":{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"name":"i","nodeType":"VariableDeclaration","scope":2142,"src":"32503:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"32503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2099,"initialValue":{"argumentTypes":null,"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32513:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"32503:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"32544:3:0","subExpression":{"argumentTypes":null,"id":2104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32544:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"32544:3:0"},"nodeType":"ForStatement","src":"32498:228:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"32736:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2080,"id":2140,"nodeType":"Return","src":"32729:11:0"}]},"documentation":"@dev Actually transfer the network token for the purchase\n@param _sender The address of the sender\n@param _networkIntegerAmount The integer amount of the network token to transfer\n@param _networkFractionAmount The fraction amount of the network token to transfer\n@param _denomination The denomination of the the network token to transfer\n@return true on success","id":2142,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_transferNetworkTokenPayment","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"name":"_sender","nodeType":"VariableDeclaration","scope":2142,"src":"32116:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"32116:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2072,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32133:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"32133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2074,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32164:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"32164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2076,"name":"_denomination","nodeType":"VariableDeclaration","scope":2142,"src":"32196:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":2075,"name":"bytes8","nodeType":"ElementaryTypeName","src":"32196:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"32115:102:0"},"payable":false,"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"name":"","nodeType":"VariableDeclaration","scope":2142,"src":"32236:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2078,"name":"bool","nodeType":"ElementaryTypeName","src":"32236:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"32235:6:0"},"scope":2327,"src":"32078:666:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"33049:2157:0","statements":[{"assignments":[null,2152,2154],"declarations":[null,{"constant":false,"id":2152,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":2326,"src":"33099:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"33099:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2154,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":2326,"src":"33133:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2153,"name":"bool","nodeType":"ElementaryTypeName","src":"33133:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":2158,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":2155,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"33165:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"33165:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33165:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"33096:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2160,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"33209:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33245:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33237:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33237:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33209:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33200:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33200:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2166,"nodeType":"ExpressionStatement","src":"33200:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2168,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"33261:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33288:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"33261:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33252:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33252:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"33252:41:0"},{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":2326,"src":"33298:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":2173,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"33298:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":2180,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2175,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"33337:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":2179,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2176,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"33352:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2178,"indexExpression":{"argumentTypes":null,"id":2177,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"33371:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33352:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33337:42:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33298:81:0"},{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":2326,"src":"33383:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":2181,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"33383:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":2189,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2183,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"33421:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":2188,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2184,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"33436:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2187,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2185,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33455:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"33455:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33436:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33421:58:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33383:96:0"},{"expression":{"argumentTypes":null,"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2190,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33484:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33484:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":2193,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"33518:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33484:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"33484:51:0"},{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":2326,"src":"33583:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":2196,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"33583:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":2201,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2199,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"33618:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2198,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"33610:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33610:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"33583:60:0"},{"expression":{"argumentTypes":null,"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2202,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33647:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"33647:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2207,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33728:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"33728:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":2205,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"33688:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"33688:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33688:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33647:102:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2211,"nodeType":"ExpressionStatement","src":"33647:102:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2215,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33832:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"33832:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2217,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"33854:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2218,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33860:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33860:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2213,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"33785:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"whitelistTransferIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"33785:46:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33785:107:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33776:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33776:117:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"33776:117:0"},{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"name":"_contentCreatorProfit","nodeType":"VariableDeclaration","scope":2326,"src":"33944:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"33944:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2235,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2233,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"34051:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2228,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34013:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"34013:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2225,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33977:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33977:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":5953,"src":"33977:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33977:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"33976:70:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"33976:74:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33976:94:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33944:126:0"},{"expression":{"argumentTypes":null,"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2236,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34074:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2241,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2237,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34106:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34106:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34074:58:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2242,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2239,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34133:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34133:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34074:98:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2251,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34278:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2243,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34175:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2246,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2244,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34207:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34207:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34175:58:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2249,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2247,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34234:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34234:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34175:98:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"34175:102:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34175:125:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34074:226:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"34074:226:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2256,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34342:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"34342:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2258,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34364:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34364:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2260,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34391:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"34391:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2262,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34413:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"34413:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2264,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34437:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34437:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2266,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34470:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34470:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2268,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34510:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2269,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34533:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"34533:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34566:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"name":"BuyContentPrimordialTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"34309:32:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint8)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34309:259:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"EmitStatement","src":"34304:264:0"},{"expression":{"argumentTypes":null,"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2274,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34613:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2279,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2275,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34645:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34645:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34613:52:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2280,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2277,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34666:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34666:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34613:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2292,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34841:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2289,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34805:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34805:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"34805:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34805:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2281,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34708:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2284,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2282,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34740:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34740:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34708:52:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2287,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2285,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34761:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34761:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34708:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"34708:96:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34708:156:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34613:251:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"34613:251:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2298,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34906:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"34906:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2300,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34928:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34928:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2302,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"34949:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2304,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34971:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"34971:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2306,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34995:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34995:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2308,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"35028:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"35028:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2313,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"35104:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2310,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"35068:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"35068:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"35068:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35068:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2317,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"35151:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"35151:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2315,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"35128:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"35128:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35128:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35185:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2297,"name":"BuyContentPrimordialTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"34873:32:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint8)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34873:314:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2322,"nodeType":"EmitStatement","src":"34868:319:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35198:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2150,"id":2324,"nodeType":"Return","src":"35191:11:0"}]},"documentation":"@dev Pay bought content with primordial token\n@param _buyId The ID of the bought content\n@param _primordialAmount The amount of the primordial token to pay\n@return true on success","id":2326,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_payPrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"name":"_buyId","nodeType":"VariableDeclaration","scope":2326,"src":"32982:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32982:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2146,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":2326,"src":"32998:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"32998:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"32981:43:0"},"payable":false,"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"name":"","nodeType":"VariableDeclaration","scope":2326,"src":"33043:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2148,"name":"bool","nodeType":"ElementaryTypeName","src":"33043:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"33042:6:0"},"scope":2327,"src":"32953:2253:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"}],"scope":2328,"src":"299:34909:0"}],"src":"0:35209:0"},"legacyAST":{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOContent.sol","exportedSymbols":{"AOContent":[2327]},"id":2328,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.4",".24"],"nodeType":"PragmaDirective","src":"0:24:0"},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/SafeMath.sol","file":"./SafeMath.sol","id":2,"nodeType":"ImportDirective","scope":2328,"sourceUnit":6013,"src":"26:24:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/owned.sol","file":"./owned.sol","id":3,"nodeType":"ImportDirective","scope":2328,"sourceUnit":6458,"src":"51:21:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOToken.sol","file":"./AOToken.sol","id":4,"nodeType":"ImportDirective","scope":2328,"sourceUnit":4678,"src":"73:23:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"/home/gitlab-runner/builds/1e437205/0/ao/ao-contracts/contracts/AOTreasury.sol","file":"./AOTreasury.sol","id":5,"nodeType":"ImportDirective","scope":2328,"sourceUnit":5763,"src":"97:26:0","symbolAliases":[],"unitAlias":""},{"baseContracts":[{"arguments":null,"baseName":{"contractScope":null,"id":6,"name":"owned","nodeType":"UserDefinedTypeName","referencedDeclaration":6457,"src":"321:5:0","typeDescriptions":{"typeIdentifier":"t_contract$_owned_$6457","typeString":"contract owned"}},"id":7,"nodeType":"InheritanceSpecifier","src":"321:5:0"}],"contractDependencies":[6457],"contractKind":"contract","documentation":"@title AOContent\n * The purpose of this contract is to allow content creator to stake network ERC20 AO tokens and/or primordial AO Tokens\non his/her content","fullyImplemented":true,"id":2327,"linearizedBaseContracts":[2327,6457],"name":"AOContent","nodeType":"ContractDefinition","nodes":[{"id":10,"libraryName":{"contractScope":null,"id":8,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":6012,"src":"336:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$6012","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"330:27:0","typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"349:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":12,"name":"paused","nodeType":"VariableDeclaration","scope":2327,"src":"360:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11,"name":"bool","nodeType":"ElementaryTypeName","src":"360:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"public"},{"constant":false,"id":14,"name":"killed","nodeType":"VariableDeclaration","scope":2327,"src":"381:18:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13,"name":"bool","nodeType":"ElementaryTypeName","src":"381:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"public"},{"constant":false,"id":16,"name":"inflationRate","nodeType":"VariableDeclaration","scope":2327,"src":"402:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"402:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":true,"id":21,"name":"PERCENTAGE_DIVISOR","nodeType":"VariableDeclaration","scope":2327,"src":"484:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":20,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"hexValue":"3130","id":18,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"529:2:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"argumentTypes":null,"hexValue":"36","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"535:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"529:7:0","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"visibility":"public"},{"constant":false,"id":23,"name":"totalStakedContents","nodeType":"VariableDeclaration","scope":2327,"src":"557:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":22,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"id":25,"name":"totalBoughtContents","nodeType":"VariableDeclaration","scope":2327,"src":"594:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"594:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"public"},{"constant":false,"id":27,"name":"_treasury","nodeType":"VariableDeclaration","scope":2327,"src":"631:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"},"typeName":{"contractScope":null,"id":26,"name":"AOTreasury","nodeType":"UserDefinedTypeName","referencedDeclaration":5762,"src":"631:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"value":null,"visibility":"private"},{"canonicalName":"AOContent.StakedContent","id":48,"members":[{"constant":false,"id":29,"name":"stakeId","nodeType":"VariableDeclaration","scope":48,"src":"688:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"688:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":31,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":48,"src":"707:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"707:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":33,"name":"networkAmount","nodeType":"VariableDeclaration","scope":48,"src":"729:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":35,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":48,"src":"805:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":37,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":48,"src":"909:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":39,"name":"datKey","nodeType":"VariableDeclaration","scope":48,"src":"944:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":38,"name":"string","nodeType":"ElementaryTypeName","src":"944:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":41,"name":"fileSize","nodeType":"VariableDeclaration","scope":48,"src":"961:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":43,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":48,"src":"981:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":45,"name":"active","nodeType":"VariableDeclaration","scope":48,"src":"1053:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"1053:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":47,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":48,"src":"1117:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":46,"name":"uint256","nodeType":"ElementaryTypeName","src":"1117:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"StakedContent","nodeType":"StructDefinition","scope":2327,"src":"663:484:0","visibility":"public"},{"canonicalName":"AOContent.BoughtContent","id":65,"members":[{"constant":false,"id":50,"name":"buyId","nodeType":"VariableDeclaration","scope":65,"src":"1175:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":49,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":52,"name":"stakeId","nodeType":"VariableDeclaration","scope":65,"src":"1192:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":51,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1192:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":54,"name":"buyer","nodeType":"VariableDeclaration","scope":65,"src":"1211:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":56,"name":"host","nodeType":"VariableDeclaration","scope":65,"src":"1228:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":58,"name":"networkAmount","nodeType":"VariableDeclaration","scope":65,"src":"1284:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1284:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":60,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":65,"src":"1360:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":62,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":65,"src":"1464:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":64,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":65,"src":"1499:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"1499:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"name":"BoughtContent","nodeType":"StructDefinition","scope":2327,"src":"1150:379:0","visibility":"public"},{"constant":false,"id":69,"name":"stakedContents","nodeType":"VariableDeclaration","scope":2327,"src":"1597:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent)"},"typeName":{"id":68,"keyType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1597:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent)"},"valueType":{"contractScope":null,"id":67,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"1617:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}}},"value":null,"visibility":"private"},{"constant":false,"id":73,"name":"stakedContentIndex","nodeType":"VariableDeclaration","scope":2327,"src":"1720:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":72,"keyType":{"id":70,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1720:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"private"},{"constant":false,"id":77,"name":"boughtContents","nodeType":"VariableDeclaration","scope":2327,"src":"1844:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent)"},"typeName":{"id":76,"keyType":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"1853:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1844:34:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent)"},"valueType":{"contractScope":null,"id":75,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"1864:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}}},"value":null,"visibility":"private"},{"constant":false,"id":81,"name":"boughtContentIndex","nodeType":"VariableDeclaration","scope":2327,"src":"1965:55:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":80,"keyType":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1965:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"private"},{"constant":false,"id":87,"name":"buyerOwnedStakeId","nodeType":"VariableDeclaration","scope":2327,"src":"2148:76:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"},"typeName":{"id":86,"keyType":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2157:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2148:49:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"},"valueType":{"id":85,"keyType":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2177:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2168:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueType":{"id":84,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2188:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}}},"value":null,"visibility":"internal"},{"constant":false,"id":91,"name":"buyContentNetworkTokenProfit","nodeType":"VariableDeclaration","scope":2327,"src":"2353:64:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":90,"keyType":{"id":88,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2353:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"public"},{"constant":false,"id":97,"name":"buyContentPrimordialTokenProfit","nodeType":"VariableDeclaration","scope":2327,"src":"2567:88:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":96,"keyType":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2576:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2567:49:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":95,"keyType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"2596:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2587:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"value":null,"visibility":"public"},{"anonymous":false,"documentation":null,"id":123,"name":"StakeContent","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":123,"src":"2758:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2758:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":101,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":123,"src":"2788:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2788:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":103,"indexed":false,"name":"networkIntegerAmount","nodeType":"VariableDeclaration","scope":123,"src":"2815:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":105,"indexed":false,"name":"networkFractionAmount","nodeType":"VariableDeclaration","scope":123,"src":"2847:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"name":"denomination","nodeType":"VariableDeclaration","scope":123,"src":"2880:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":106,"name":"bytes8","nodeType":"ElementaryTypeName","src":"2880:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":109,"indexed":false,"name":"totalNetworkBaseAmount","nodeType":"VariableDeclaration","scope":123,"src":"2903:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":111,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":123,"src":"2937:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":123,"src":"2965:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2965:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":115,"indexed":false,"name":"datKey","nodeType":"VariableDeclaration","scope":123,"src":"3000:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":114,"name":"string","nodeType":"ElementaryTypeName","src":"3000:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":117,"indexed":false,"name":"fileSize","nodeType":"VariableDeclaration","scope":123,"src":"3017:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3017:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":123,"src":"3037:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3037:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"name":"createdOnTimestamp","nodeType":"VariableDeclaration","scope":123,"src":"3065:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3065:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"2754:340:0"},"src":"2736:359:0"},{"anonymous":false,"documentation":null,"id":131,"name":"SetProfitPercentage","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":131,"src":"3227:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"3227:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":127,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":131,"src":"3255:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"name":"newProfitPercentage","nodeType":"VariableDeclaration","scope":131,"src":"3280:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3226:82:0"},"src":"3201:108:0"},{"anonymous":false,"documentation":null,"id":143,"name":"UnstakePartialContent","nodeType":"EventDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":143,"src":"3460:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":143,"src":"3488:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3488:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":137,"indexed":false,"name":"remainingNetworkAmount","nodeType":"VariableDeclaration","scope":143,"src":"3513:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"name":"remainingPrimordialAmount","nodeType":"VariableDeclaration","scope":143,"src":"3545:33:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3545:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":141,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":143,"src":"3580:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3580:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3459:153:0"},"src":"3432:181:0"},{"anonymous":false,"documentation":null,"id":149,"name":"UnstakeContent","nodeType":"EventDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":149,"src":"3742:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":144,"name":"address","nodeType":"ElementaryTypeName","src":"3742:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":147,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":149,"src":"3770:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3770:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"3741:53:0"},"src":"3721:74:0"},{"anonymous":false,"documentation":null,"id":161,"name":"StakeExistingContent","nodeType":"EventDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":true,"name":"stakeOwner","nodeType":"VariableDeclaration","scope":161,"src":"3911:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"3911:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":153,"indexed":true,"name":"stakeId","nodeType":"VariableDeclaration","scope":161,"src":"3939:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3939:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":155,"indexed":false,"name":"currentNetworkAmount","nodeType":"VariableDeclaration","scope":161,"src":"3964:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3964:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"name":"currentPrimordialAmount","nodeType":"VariableDeclaration","scope":161,"src":"3994:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"name":"currentPrimordialWeightedIndex","nodeType":"VariableDeclaration","scope":161,"src":"4027:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4027:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"3910:156:0"},"src":"3884:183:0"},{"anonymous":false,"documentation":null,"id":179,"name":"BuyContentNetworkTokenEarning","nodeType":"EventDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","scope":179,"src":"4282:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"4282:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"name":"recipient","nodeType":"VariableDeclaration","scope":179,"src":"4306:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"4306:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":167,"indexed":true,"name":"buyId","nodeType":"VariableDeclaration","scope":179,"src":"4333:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4333:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":179,"src":"4356:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"name":"networkAmount","nodeType":"VariableDeclaration","scope":179,"src":"4373:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4373:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":173,"indexed":false,"name":"networkProfitAmount","nodeType":"VariableDeclaration","scope":179,"src":"4397:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"4397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":175,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":179,"src":"4426:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":177,"indexed":false,"name":"recipientType","nodeType":"VariableDeclaration","scope":179,"src":"4452:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":176,"name":"uint8","nodeType":"ElementaryTypeName","src":"4452:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"4281:191:0"},"src":"4246:227:0"},{"anonymous":false,"documentation":null,"id":199,"name":"BuyContentPrimordialTokenEarning","nodeType":"EventDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"indexed":true,"name":"sender","nodeType":"VariableDeclaration","scope":199,"src":"4515:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"4515:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":183,"indexed":true,"name":"recipient","nodeType":"VariableDeclaration","scope":199,"src":"4539:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"4539:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":185,"indexed":true,"name":"buyId","nodeType":"VariableDeclaration","scope":199,"src":"4566:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4566:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":199,"src":"4589:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4589:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":199,"src":"4606:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4606:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":191,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":199,"src":"4632:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4632:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":193,"indexed":false,"name":"primordialProfitAmount","nodeType":"VariableDeclaration","scope":199,"src":"4665:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4665:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":195,"indexed":false,"name":"profitPercentage","nodeType":"VariableDeclaration","scope":199,"src":"4697:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4697:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":197,"indexed":false,"name":"recipientType","nodeType":"VariableDeclaration","scope":199,"src":"4723:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":196,"name":"uint8","nodeType":"ElementaryTypeName","src":"4723:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":null,"visibility":"internal"}],"src":"4514:229:0"},"src":"4476:268:0"},{"anonymous":false,"documentation":null,"id":221,"name":"BuyContent","nodeType":"EventDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"indexed":true,"name":"buyer","nodeType":"VariableDeclaration","scope":221,"src":"4830:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":200,"name":"address","nodeType":"ElementaryTypeName","src":"4830:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":203,"indexed":false,"name":"buyId","nodeType":"VariableDeclaration","scope":221,"src":"4853:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4853:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":205,"indexed":false,"name":"stakeId","nodeType":"VariableDeclaration","scope":221,"src":"4868:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4868:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":207,"indexed":false,"name":"host","nodeType":"VariableDeclaration","scope":221,"src":"4885:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"4885:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":209,"indexed":false,"name":"networkIntegerAmount","nodeType":"VariableDeclaration","scope":221,"src":"4899:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4899:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"name":"networkFractionAmount","nodeType":"VariableDeclaration","scope":221,"src":"4929:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4929:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":213,"indexed":false,"name":"denomination","nodeType":"VariableDeclaration","scope":221,"src":"4960:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":212,"name":"bytes8","nodeType":"ElementaryTypeName","src":"4960:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":215,"indexed":false,"name":"totalNetworkAmount","nodeType":"VariableDeclaration","scope":221,"src":"4981:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":217,"indexed":false,"name":"primordialAmount","nodeType":"VariableDeclaration","scope":221,"src":"5009:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":219,"indexed":false,"name":"primordialWeightedIndex","nodeType":"VariableDeclaration","scope":221,"src":"5035:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5035:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4829:238:0"},"src":"4813:255:0"},{"anonymous":false,"documentation":null,"id":223,"name":"EscapeHatch","nodeType":"EventDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"5159:2:0"},"src":"5142:20:0"},{"body":{"id":234,"nodeType":"Block","src":"5304:48:0","statements":[{"expression":{"argumentTypes":null,"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":228,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5308:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":230,"name":"_treasuryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"5331:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":229,"name":"AOTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"5320:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOTreasury_$5762_$","typeString":"type(contract AOTreasury)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5320:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"src":"5308:40:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":233,"nodeType":"ExpressionStatement","src":"5308:40:0"}]},"documentation":"@dev Constructor function\n@param _treasuryAddress The address of AOTreasury","id":235,"implemented":true,"isConstructor":true,"isDeclaredConst":false,"modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"name":"_treasuryAddress","nodeType":"VariableDeclaration","scope":235,"src":"5271:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"5271:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"5270:26:0"},"payable":false,"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"5304:0:0"},"scope":2327,"src":"5259:93:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":248,"nodeType":"Block","src":"5431:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":238,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"5444:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5454:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5444:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":241,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5463:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5473:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5463:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5444:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"5435:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5435:44:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":246,"nodeType":"ExpressionStatement","src":"5435:44:0"},{"id":247,"nodeType":"PlaceholderStatement","src":"5483:1:0"}]},"documentation":"@dev Checks if contract is currently active","id":249,"name":"isActive","nodeType":"ModifierDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"5431:0:0"},"src":"5413:75:0","visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"5597:249:0","statements":[{"assignments":[254,256],"declarations":[{"constant":false,"id":254,"name":"_networkTokenAddress","nodeType":"VariableDeclaration","scope":276,"src":"5660:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"5660:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":256,"name":"_networkTokenActive","nodeType":"VariableDeclaration","scope":276,"src":"5690:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":255,"name":"bool","nodeType":"ElementaryTypeName","src":"5690:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":261,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":259,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"5744:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":257,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5718:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getDenomination","nodeType":"MemberAccess","referencedDeclaration":5003,"src":"5718:25:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes8_$returns$_t_address_$_t_bool_$","typeString":"function (bytes8) view external returns (address,bool)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5718:40:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"5659:99:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":263,"name":"_networkTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5771:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5803:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5795:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5795:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5771:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":268,"name":"_networkTokenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"5809:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5832:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5809:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5771:65:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"5762:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5762:75:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"5762:75:0"},{"id":274,"nodeType":"PlaceholderStatement","src":"5841:1:0"}]},"documentation":"@dev Checks if the denomination is valid","id":276,"name":"isValidDenomination","nodeType":"ModifierDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"name":"_denomination","nodeType":"VariableDeclaration","scope":276,"src":"5575:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":250,"name":"bytes8","nodeType":"ElementaryTypeName","src":"5575:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"5574:22:0"},"src":"5546:300:0","visibility":"internal"},{"body":{"id":287,"nodeType":"Block","src":"6034:24:0","statements":[{"expression":{"argumentTypes":null,"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":283,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"6038:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":284,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"6047:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6038:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"ExpressionStatement","src":"6038:16:0"}]},"documentation":"@dev Owner pauses/unpauses contract\n@param _paused Either to pause contract or not","id":288,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":281,"modifierName":{"argumentTypes":null,"id":280,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"6024:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6024:9:0"}],"name":"setPaused","nodeType":"FunctionDefinition","parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"name":"_paused","nodeType":"VariableDeclaration","scope":288,"src":"6003:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"6003:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"6002:14:0"},"payable":false,"returnParameters":{"id":282,"nodeType":"ParameterList","parameters":[],"src":"6034:0:0"},"scope":2327,"src":"5984:74:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":306,"nodeType":"Block","src":"6223:72:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":294,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6236:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"66616c7365","id":295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6246:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6236:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"6227:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6227:25:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"6227:25:0"},{"expression":{"argumentTypes":null,"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":299,"name":"killed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"6256:6:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6265:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6256:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":302,"nodeType":"ExpressionStatement","src":"6256:13:0"},{"eventCall":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"EscapeHatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6278:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6278:13:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":305,"nodeType":"EmitStatement","src":"6273:18:0"}]},"documentation":"@dev Owner triggers emergency mode.\n\t * Allow stake owners to withdraw all existing active staked funds","id":307,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":291,"modifierName":{"argumentTypes":null,"id":290,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6410,"src":"6213:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"6213:9:0"}],"name":"escapeHatch","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"6203:2:0"},"payable":false,"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[],"src":"6223:0:0"},"scope":2327,"src":"6183:112:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":320,"nodeType":"Block","src":"6503:38:0","statements":[{"expression":{"argumentTypes":null,"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"id":316,"name":"inflationRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"6507:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":317,"name":"_inflationRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6523:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6507:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":319,"nodeType":"ExpressionStatement","src":"6507:30:0"}]},"documentation":"@dev Whitelisted address sets inflation rate\n@param _inflationRate The new inflation rate value to be set","id":321,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"6491:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"6491:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":314,"modifierName":{"argumentTypes":null,"id":311,"name":"inWhitelist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"6479:11:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_address_$","typeString":"modifier (address)"}},"nodeType":"ModifierInvocation","src":"6479:23:0"}],"name":"setInflationRate","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"name":"_inflationRate","nodeType":"VariableDeclaration","scope":321,"src":"6448:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6448:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"6447:24:0"},"payable":false,"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[],"src":"6503:0:0"},"scope":2327,"src":"6422:119:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":517,"nodeType":"Block","src":"7467:1607:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":342,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7486:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7480:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":"bytes"},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7480:14:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory","typeString":"bytes memory"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7480:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7504:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7480:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7471:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7471:35:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"7471:35:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":350,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7519:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7531:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7519:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7510:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7510:23:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"7510:23:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":356,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7546:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7570:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7546:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":359,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7575:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7600:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7575:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7546:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":363,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7605:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7605:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7546:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":355,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7537:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7537:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"7537:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":370,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"7640:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":371,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7661:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7631:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7631:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":374,"nodeType":"ExpressionStatement","src":"7631:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":377,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7703:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":378,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"7726:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":379,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7750:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":380,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"7765:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":381,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"7784:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":376,"name":"_canStake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"7693:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,bytes8,uint256,uint256) view returns (bool)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7693:101:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7798:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7693:109:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":375,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7684:119:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"7684:119:0"},{"expression":{"argumentTypes":null,"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7843:21:0","subExpression":{"argumentTypes":null,"id":387,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"7843:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":389,"nodeType":"ExpressionStatement","src":"7843:21:0"},{"assignments":[391],"declarations":[{"constant":false,"id":391,"name":"_stakeId","nodeType":"VariableDeclaration","scope":518,"src":"7891:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7891:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":402,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":395,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"7937:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"7943:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7943:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":398,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"7955:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":399,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"7976:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"argumentTypes":null,"id":393,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"7920:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"7920:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7920:64:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":392,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"7910:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7910:75:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7891:94:0"},{"assignments":[404],"declarations":[{"constant":false,"id":404,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":518,"src":"7989:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":403,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"7989:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":408,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":405,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"8028:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":407,"indexExpression":{"argumentTypes":null,"id":406,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8043:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8028:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7989:74:0"},{"expression":{"argumentTypes":null,"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":409,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8067:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":29,"src":"8067:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":412,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8092:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8067:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":414,"nodeType":"ExpressionStatement","src":"8067:33:0"},{"expression":{"argumentTypes":null,"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":415,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8104:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"8104:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8132:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8132:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8104:38:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":421,"nodeType":"ExpressionStatement","src":"8104:38:0"},{"expression":{"argumentTypes":null,"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":422,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8146:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"8146:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":425,"name":"_datKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8146:31:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":427,"nodeType":"ExpressionStatement","src":"8146:31:0"},{"expression":{"argumentTypes":null,"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":428,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8181:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8181:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":431,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"8207:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8181:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":433,"nodeType":"ExpressionStatement","src":"8181:35:0"},{"expression":{"argumentTypes":null,"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":434,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8220:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":436,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8220:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":437,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"8254:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8220:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"8220:51:0"},{"expression":{"argumentTypes":null,"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":440,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8275:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"8275:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8299:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8275:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":445,"nodeType":"ExpressionStatement","src":"8275:28:0"},{"expression":{"argumentTypes":null,"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":446,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8307:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"8307:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":449,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"8343:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8307:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":451,"nodeType":"ExpressionStatement","src":"8307:39:0"},{"expression":{"argumentTypes":null,"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":452,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"8351:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":454,"indexExpression":{"argumentTypes":null,"id":453,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8370:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8351:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":455,"name":"totalStakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"8382:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8351:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":457,"nodeType":"ExpressionStatement","src":"8351:50:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":458,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8410:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8410:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8433:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8410:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":462,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8439:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8463:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8439:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":465,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8468:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8493:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8468:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8439:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8438:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8410:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":481,"nodeType":"IfStatement","src":"8406:201:0","trueBody":{"id":480,"nodeType":"Block","src":"8497:110:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":473,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8530:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":474,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8540:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":475,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8563:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":476,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8587:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":472,"name":"_stakeNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"8511:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8511:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"8502:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8502:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"8502:100:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":482,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8614:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8614:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":493,"nodeType":"IfStatement","src":"8610:97:0","trueBody":{"id":492,"nodeType":"Block","src":"8637:70:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":487,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8673:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":488,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8683:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":486,"name":"_stakePrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"8651:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8651:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"8642:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"8642:60:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"8732:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"8732:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":497,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8747:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":498,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"8760:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":499,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"8786:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":500,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8813:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":501,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8831:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"8831:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":503,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8864:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"8864:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":505,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8900:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"8900:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":507,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8943:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"8943:21:0","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":509,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8969:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"8969:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":511,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"8997:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"8997:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":513,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"9033:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"9033:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":494,"name":"StakeContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"8715:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,bytes8,uint256,uint256,uint256,string memory,uint256,uint256,uint256)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8715:355:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"EmitStatement","src":"8710:360:0"}]},"documentation":"@dev Stake `_networkIntegerAmount` + `_networkFractionAmount` of network token in `_denomination` and/or `_primordialAmount` primordial Tokens for a content\n@param _networkIntegerAmount The integer amount of network token to stake\n@param _networkFractionAmount The fraction amount of network token to stake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to stake\n@param _datKey The dat key of the file\n@param _fileSize The size of the file\n@param _profitPercentage The percentage of profit the stake owner's media will charge","id":518,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":338,"modifierName":{"argumentTypes":null,"id":337,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7458:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7458:8:0"}],"name":"stakeContent","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":518,"src":"7261:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"7261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":325,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":518,"src":"7294:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"7294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":327,"name":"_denomination","nodeType":"VariableDeclaration","scope":518,"src":"7328:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":326,"name":"bytes8","nodeType":"ElementaryTypeName","src":"7328:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":329,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":518,"src":"7352:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"7352:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":331,"name":"_datKey","nodeType":"VariableDeclaration","scope":518,"src":"7381:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"7381:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":333,"name":"_fileSize","nodeType":"VariableDeclaration","scope":518,"src":"7399:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"7399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":335,"name":"_profitPercentage","nodeType":"VariableDeclaration","scope":518,"src":"7420:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7420:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7257:189:0"},"payable":false,"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"7467:0:0"},"scope":2327,"src":"7236:1838:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":570,"nodeType":"Block","src":"9337:477:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":528,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9350:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"argumentTypes":null,"id":529,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"9371:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":527,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9341:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9341:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"9341:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":534,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"9444:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":536,"indexExpression":{"argumentTypes":null,"id":535,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9463:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9444:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9475:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9444:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9435:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9435:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"9435:42:0"},{"assignments":[542],"declarations":[{"constant":false,"id":542,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":571,"src":"9482:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":541,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"9482:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":548,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":543,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"9521:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":547,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":544,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"9536:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":546,"indexExpression":{"argumentTypes":null,"id":545,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9555:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9536:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9521:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9482:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":550,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9644:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"9644:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9673:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9673:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9644:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"9635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9635:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"9635:49:0"},{"expression":{"argumentTypes":null,"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":557,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"9689:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"9689:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":560,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9723:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9689:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":562,"nodeType":"ExpressionStatement","src":"9689:51:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"9770:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"9770:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":566,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9782:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":567,"name":"_profitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"9792:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"SetProfitPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"9750:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256)"}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9750:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":569,"nodeType":"EmitStatement","src":"9745:65:0"}]},"documentation":"@dev Set profit percentage on existing staked content\n@param _stakeId The ID of the staked content\n@param _profitPercentage The new value to be set","id":571,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":525,"modifierName":{"argumentTypes":null,"id":524,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"9328:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9328:8:0"}],"name":"setProfitPercentage","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"name":"_stakeId","nodeType":"VariableDeclaration","scope":571,"src":"9276:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9276:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":522,"name":"_profitPercentage","nodeType":"VariableDeclaration","scope":571,"src":"9294:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"9294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9275:45:0"},"payable":false,"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"9337:0:0"},"scope":2327,"src":"9247:567:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":630,"nodeType":"Block","src":"10552:488:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":595,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"10605:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":597,"indexExpression":{"argumentTypes":null,"id":596,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10624:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10605:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10636:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10605:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"10596:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10596:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"10596:42:0"},{"assignments":[603],"declarations":[{"constant":false,"id":603,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":631,"src":"10643:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":602,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"10643:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":609,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":604,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"10681:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":608,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":605,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"10696:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":607,"indexExpression":{"argumentTypes":null,"id":606,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10715:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10681:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10643:82:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":610,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10741:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"10741:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":612,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10771:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"10771:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":614,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10804:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"10804:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":616,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10840:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"10840:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":618,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10883:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"datKey","nodeType":"MemberAccess","referencedDeclaration":39,"src":"10883:21:0","typeDescriptions":{"typeIdentifier":"t_string_memory","typeString":"string memory"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":620,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10909:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"10909:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":622,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10937:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"10937:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":624,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10973:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"10973:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":626,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"10999:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":47,"src":"10999:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10736:300:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(address,uint256,uint256,uint256,string memory,uint256,uint256,bool,uint256)"}},"functionReturnParameters":593,"id":629,"nodeType":"Return","src":"10729:307:0"}]},"documentation":"@dev Return staked content information at a given ID\n@param _stakeId The ID of the staked content\n@return address of the staked content's owner\n@return the network base token amount staked for this content\n@return the primordial token amount staked for this content\n@return the primordial weighted index of the staked content\n@return the dat key of the content\n@return the file size of the content\n@return the profit percentage of the content\n@return status of the staked content\n@return the timestamp when the staked content was created","id":631,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"stakedContentById","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"name":"_stakeId","nodeType":"VariableDeclaration","scope":631,"src":"10436:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":572,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10436:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"10435:18:0"},"payable":false,"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10475:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":578,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10484:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10484:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":580,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10493:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":579,"name":"uint256","nodeType":"ElementaryTypeName","src":"10493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":582,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":581,"name":"uint256","nodeType":"ElementaryTypeName","src":"10502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":584,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10511:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":583,"name":"string","nodeType":"ElementaryTypeName","src":"10511:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"},{"constant":false,"id":586,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10519:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"10519:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":588,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10528:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"10528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":590,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10537:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":589,"name":"bool","nodeType":"ElementaryTypeName","src":"10537:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":592,"name":"","nodeType":"VariableDeclaration","scope":631,"src":"10543:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"10543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"10474:77:0"},"scope":2327,"src":"10409:631:0","stateMutability":"view","superFunction":null,"visibility":"public"},{"body":{"id":766,"nodeType":"Block","src":"11849:1364:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":647,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"11902:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":649,"indexExpression":{"argumentTypes":null,"id":648,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11921:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11902:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11933:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11902:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"11893:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11893:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"11893:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":655,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"11948:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11972:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":658,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"11977:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12002:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11977:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11948:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":662,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12007:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12027:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12007:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11948:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"11939:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11939:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"11939:90:0"},{"assignments":[669],"declarations":[{"constant":false,"id":669,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":767,"src":"12034:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":668,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"12034:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":675,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":670,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"12073:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":674,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":671,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"12088:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":673,"indexExpression":{"argumentTypes":null,"id":672,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12107:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12088:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12073:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12034:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":677,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12196:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"12196:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":679,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"12225:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12225:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12196:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":676,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12187:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12187:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"12187:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":685,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12330:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"12330:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12355:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12330:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":689,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12364:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"12364:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12364:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":693,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12400:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"12400:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12434:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12400:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12364:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12363:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12330:106:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12321:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12321:116:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":701,"nodeType":"ExpressionStatement","src":"12321:116:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":704,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12533:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":705,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12556:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":706,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12580:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":707,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12595:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":708,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12614:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":709,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"12614:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":710,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12644:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"12644:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":712,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"12677:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"12677:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":703,"name":"_canUnstakePartial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"12514:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256,bytes8,uint256,uint256,uint256,uint256) view returns (bool)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12514:187:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12505:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12505:197:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":716,"nodeType":"ExpressionStatement","src":"12505:197:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":717,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12711:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"12711:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12734:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12711:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":721,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12740:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12764:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12740:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":724,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12769:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12794:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12769:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12740:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12739:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12711:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":740,"nodeType":"IfStatement","src":"12707:210:0","trueBody":{"id":739,"nodeType":"Block","src":"12798:119:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":732,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12840:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":733,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"12850:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":734,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"12873:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":735,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"12897:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":731,"name":"_unstakePartialNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"12812:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12812:99:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12803:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12803:109:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"12803:109:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":741,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"12924:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12944:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12924:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":752,"nodeType":"IfStatement","src":"12920:106:0","trueBody":{"id":751,"nodeType":"Block","src":"12947:79:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":746,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"12992:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":747,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"13002:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"name":"_unstakePartialPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"12961:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12961:59:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":744,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"12952:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12952:69:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":750,"nodeType":"ExpressionStatement","src":"12952:69:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":754,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13056:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"13056:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":756,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13083:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":757,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":29,"src":"13083:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":758,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13107:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13107:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":760,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13137:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"13137:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":762,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"13170:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":763,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"13170:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":753,"name":"UnstakePartialContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"13034:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,uint256)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13034:175:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":765,"nodeType":"EmitStatement","src":"13029:180:0"}]},"documentation":"@dev Unstake existing staked content and refund partial staked amount to the stake owner\n\tUse unstakeContent() to unstake all staked token amount. unstakePartialContent() can unstake only up to\n\tthe mininum required to pay the fileSize\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of network token to unstake\n@param _networkFractionAmount The fraction amount of network token to unstake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to unstake","id":767,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":644,"modifierName":{"argumentTypes":null,"id":643,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"11840:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"11840:8:0"}],"name":"unstakePartialContent","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"name":"_stakeId","nodeType":"VariableDeclaration","scope":767,"src":"11703:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11703:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":635,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":767,"src":"11721:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":637,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":767,"src":"11752:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":639,"name":"_denomination","nodeType":"VariableDeclaration","scope":767,"src":"11784:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":638,"name":"bytes8","nodeType":"ElementaryTypeName","src":"11784:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":641,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":767,"src":"11806:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"11806:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"11702:130:0"},"payable":false,"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"11849:0:0"},"scope":2327,"src":"11672:1541:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":870,"nodeType":"Block","src":"13428:1002:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":775,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"13481:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":777,"indexExpression":{"argumentTypes":null,"id":776,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13500:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13481:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13481:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":774,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13472:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13472:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"13472:42:0"},{"assignments":[783],"declarations":[{"constant":false,"id":783,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":871,"src":"13519:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":782,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"13519:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":789,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":784,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"13558:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":788,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":785,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"13573:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":787,"indexExpression":{"argumentTypes":null,"id":786,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"13592:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13573:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13558:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13519:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":791,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13681:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"13681:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":793,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"13710:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"13710:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13681:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13672:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13672:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":797,"nodeType":"ExpressionStatement","src":"13672:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":799,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13815:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"13815:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13840:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13815:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":803,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13849:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13849:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13880:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13849:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":807,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13885:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"13885:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13919:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13885:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13849:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13848:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13815:106:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"13806:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13806:116:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"13806:116:0"},{"expression":{"argumentTypes":null,"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":816,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13927:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"13927:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"66616c7365","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13951:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13927:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"ExpressionStatement","src":"13927:29:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":822,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"13965:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"13965:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13996:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13965:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":843,"nodeType":"IfStatement","src":"13961:222:0","trueBody":{"id":842,"nodeType":"Block","src":"13999:184:0","statements":[{"assignments":[827,null,null],"declarations":[{"constant":false,"id":827,"name":"_baseDenominationName","nodeType":"VariableDeclaration","scope":871,"src":"14005:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":826,"name":"bytes8","nodeType":"ElementaryTypeName","src":"14005:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},null,null],"id":831,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":828,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"14039:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"14039:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14039:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"14004:66:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":834,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14112:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":835,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14122:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"14122:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14152:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"argumentTypes":null,"id":838,"name":"_baseDenominationName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"14155:21:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":833,"name":"_unstakePartialNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"14084:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14084:93:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"14075:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14075:103:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"14075:103:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":844,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14190:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14190:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14224:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14190:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":863,"nodeType":"IfStatement","src":"14186:181:0","trueBody":{"id":862,"nodeType":"Block","src":"14227:140:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":850,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14272:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":851,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14282:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"14282:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"_unstakePartialPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"14241:30:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14241:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"14232:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14232:83:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":855,"nodeType":"ExpressionStatement","src":"14232:83:0"},{"expression":{"argumentTypes":null,"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":856,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14320:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"14320:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"30","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14361:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14320:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"14320:42:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":865,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"14390:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":866,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"14390:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":867,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"14417:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":864,"name":"UnstakeContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"14375:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14375:51:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"14370:56:0"}]},"documentation":"@dev Unstake existing staked content and refund the total staked amount to the stake owner\n@param _stakeId The ID of the staked content","id":871,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":772,"modifierName":{"argumentTypes":null,"id":771,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"13419:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"13419:8:0"}],"name":"unstakeContent","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"name":"_stakeId","nodeType":"VariableDeclaration","scope":871,"src":"13394:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":768,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"13393:18:0"},"payable":false,"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[],"src":"13428:0:0"},"scope":2327,"src":"13370:1060:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1045,"nodeType":"Block","src":"15149:1851:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":887,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"15202:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":889,"indexExpression":{"argumentTypes":null,"id":888,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15221:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15202:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15233:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15202:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15193:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15193:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"15193:42:0"},{"assignments":[895],"declarations":[{"constant":false,"id":895,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1046,"src":"15240:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":894,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"15240:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":901,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":896,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"15279:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":900,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":897,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"15294:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":899,"indexExpression":{"argumentTypes":null,"id":898,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15313:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15294:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15279:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15240:83:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":903,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"15402:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"15402:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":905,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"15431:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"15431:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15402:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15393:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15393:49:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"15393:49:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":911,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"15455:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15479:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15455:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":914,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"15484:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15509:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15484:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15455:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":918,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"15514:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15534:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15514:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15455:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15446:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15446:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":923,"nodeType":"ExpressionStatement","src":"15446:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":926,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"15567:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":927,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"15577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":928,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"15600:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":929,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"15624:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":930,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"15639:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":925,"name":"_canStakeExisting","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"15549:17:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8,uint256) view returns (bool)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15549:108:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"15540:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15540:118:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"15540:118:0"},{"assignments":[null,935,937],"declarations":[null,{"constant":false,"id":935,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1046,"src":"15993:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"15993:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":937,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1046,"src":"16027:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":936,"name":"bool","nodeType":"ElementaryTypeName","src":"16027:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":941,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":938,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"16059:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"16059:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16059:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"15990:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":943,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"16103:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16139:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16131:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16131:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16103:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16094:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16094:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"16094:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":951,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"16155:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16182:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16155:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16146:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16146:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"16146:41:0"},{"assignments":[957],"declarations":[{"constant":false,"id":957,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1046,"src":"16191:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":956,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"16191:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":961,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":959,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"16226:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"16218:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16218:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"16191:60:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":962,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16259:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16279:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16259:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":965,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16284:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"16284:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":968,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16309:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16309:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16343:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16309:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":973,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16348:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16348:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16389:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16348:42:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16259:131:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":990,"nodeType":"IfStatement","src":"16255:250:0","trueBody":{"id":989,"nodeType":"Block","src":"16392:113:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"16446:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16446:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":979,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"16406:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"16406:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16406:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":984,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16461:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16461:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16406:93:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":978,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16397:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16397:103:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"16397:103:0"}]}},{"expression":{"argumentTypes":null,"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":991,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16509:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":45,"src":"16509:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"hexValue":"74727565","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16533:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16509:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":996,"nodeType":"ExpressionStatement","src":"16509:28:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":997,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"16545:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16545:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16568:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16545:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1001,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"16574:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16598:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16574:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1004,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"16603:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16628:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16603:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16574:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16573:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16545:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1020,"nodeType":"IfStatement","src":"16541:201:0","trueBody":{"id":1019,"nodeType":"Block","src":"16632:110:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1012,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16665:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1013,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"16675:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1014,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"16698:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1015,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"16722:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1011,"name":"_stakeNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"16646:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16646:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16637:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16637:100:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"16637:100:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1021,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16749:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16769:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16749:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1032,"nodeType":"IfStatement","src":"16745:97:0","trueBody":{"id":1031,"nodeType":"Block","src":"16772:70:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1026,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16808:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1027,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"16818:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1025,"name":"_stakePrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"16786:21:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16786:50:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"16777:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16777:60:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"16777:60:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"16872:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"16872:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1036,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16884:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1037,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16894:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"16894:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1039,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16924:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"16924:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1041,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"16957:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"16957:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"StakeExistingContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"16851:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16851:145:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"16846:150:0"}]},"documentation":"@dev Stake existing content with more tokens (this is to increase the price)\n\t * @param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of network token to stake\n@param _networkFractionAmount The fraction amount of network token to stake\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to stake. (The primordial weighted index has to match the current staked weighted index)","id":1046,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":884,"modifierName":{"argumentTypes":null,"id":883,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"15140:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"15140:8:0"}],"name":"stakeExistingContent","nodeType":"FunctionDefinition","parameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1046,"src":"15003:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":875,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15021:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"15021:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":877,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15052:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"15052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":879,"name":"_denomination","nodeType":"VariableDeclaration","scope":1046,"src":"15084:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":878,"name":"bytes8","nodeType":"ElementaryTypeName","src":"15084:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":881,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1046,"src":"15106:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":880,"name":"uint256","nodeType":"ElementaryTypeName","src":"15106:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"15002:130:0"},"payable":false,"returnParameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"15149:0:0"},"scope":2327,"src":"14973:2027:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1251,"nodeType":"Block","src":"17643:1933:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1064,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"17696:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1066,"indexExpression":{"argumentTypes":null,"id":1065,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"17715:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17727:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17696:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1063,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17687:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17687:42:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"17687:42:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1072,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"17802:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1075,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"17820:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17820:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17802:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1077,"indexExpression":{"argumentTypes":null,"id":1076,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"17832:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17802:39:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"17802:46:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17852:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17802:51:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17793:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17793:61:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"17793:61:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1084,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"17981:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1085,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"17990:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1089,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1086,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"18005:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1088,"indexExpression":{"argumentTypes":null,"id":1087,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18024:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18005:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17990:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"id":1090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"17990:55:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17981:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1092,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"18049:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1094,"indexExpression":{"argumentTypes":null,"id":1093,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"18067:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18049:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1096,"indexExpression":{"argumentTypes":null,"id":1095,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18074:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18049:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18049:41:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18093:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18049:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17981:113:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"17972:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17972:123:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"17972:123:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1104,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18109:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18133:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18109:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1107,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18138:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18163:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18138:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18109:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1111,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"18168:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18188:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18168:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18109:80:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"18100:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18100:90:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"18100:90:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1119,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18273:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1120,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18283:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1121,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18306:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1122,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"18330:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"id":1123,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"18345:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1118,"name":"_canBuy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"18265:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8,uint256) view returns (bool)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18265:98:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"18256:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18256:108:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"ExpressionStatement","src":"18256:108:0"},{"expression":{"argumentTypes":null,"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18405:21:0","subExpression":{"argumentTypes":null,"id":1127,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18405:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1129,"nodeType":"ExpressionStatement","src":"18405:21:0"},{"assignments":[1131],"declarations":[{"constant":false,"id":1131,"name":"_buyId","nodeType":"VariableDeclaration","scope":1252,"src":"18451:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18451:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":1142,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1135,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"18495:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1136,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18501:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18501:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1138,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18513:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1139,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18534:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"argumentTypes":null,"id":1133,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"18478:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18478:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18478:65:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1132,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"18468:9:0","typeDescriptions":{"typeIdentifier":"t_function_sha3_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18468:76:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"18451:93:0"},{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":1252,"src":"18549:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":1143,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"18549:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":1148,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1145,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"18588:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":1147,"indexExpression":{"argumentTypes":null,"id":1146,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18603:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18588:35:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18549:74:0"},{"expression":{"argumentTypes":null,"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1149,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18627:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"18627:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1152,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18650:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18627:29:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1154,"nodeType":"ExpressionStatement","src":"18627:29:0"},{"expression":{"argumentTypes":null,"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1155,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18660:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"18660:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1158,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18685:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18660:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1160,"nodeType":"ExpressionStatement","src":"18660:33:0"},{"expression":{"argumentTypes":null,"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1161,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18697:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"18697:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18720:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18720:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18697:33:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1167,"nodeType":"ExpressionStatement","src":"18697:33:0"},{"expression":{"argumentTypes":null,"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1168,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18734:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"18734:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1171,"name":"_host","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"18756:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18734:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1173,"nodeType":"ExpressionStatement","src":"18734:27:0"},{"expression":{"argumentTypes":null,"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1174,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"18765:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"createdOnTimestamp","nodeType":"MemberAccess","referencedDeclaration":64,"src":"18765:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1177,"name":"now","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6488,"src":"18801:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18765:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ExpressionStatement","src":"18765:39:0"},{"expression":{"argumentTypes":null,"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1180,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"18809:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1182,"indexExpression":{"argumentTypes":null,"id":1181,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18828:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18809:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1183,"name":"totalBoughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"18838:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18809:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1185,"nodeType":"ExpressionStatement","src":"18809:48:0"},{"expression":{"argumentTypes":null,"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1186,"name":"buyerOwnedStakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"18861:17:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bytes32_$_$","typeString":"mapping(address => mapping(bytes32 => bytes32))"}},"id":1190,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"18879:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18879:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18861:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":1191,"indexExpression":{"argumentTypes":null,"id":1189,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"18891:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18861:39:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":1192,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"18903:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18861:48:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1194,"nodeType":"ExpressionStatement","src":"18861:48:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1195,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"18918:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"18918:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18941:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18918:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1199,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"18947:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18971:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18947:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1202,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"18976:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19001:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18976:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18947:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18946:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18918:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1218,"nodeType":"IfStatement","src":"18914:197:0","trueBody":{"id":1217,"nodeType":"Block","src":"19005:106:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1210,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"19036:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1211,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"19044:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1212,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"19067:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1213,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19091:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1209,"name":"_payNetworkToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"19019:16:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (bytes32,uint256,uint256,bytes8) returns (bool)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19019:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"19010:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19010:96:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"19010:96:0"}]}},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1219,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19118:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19138:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19118:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1230,"nodeType":"IfStatement","src":"19114:93:0","trueBody":{"id":1229,"nodeType":"Block","src":"19141:66:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1224,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"19175:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":1225,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"19183:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"_payPrimordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"19155:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes32,uint256) returns (bool)"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19155:46:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"19146:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19146:56:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"ExpressionStatement","src":"19146:56:0"}]}},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1232,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19319:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"19319:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1234,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19341:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"19341:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1236,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19363:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"19363:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1238,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19387:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"19387:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1240,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"19408:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1241,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"19431:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1242,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"19455:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1243,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19470:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"19470:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1245,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19500:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"19500:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1247,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"19533:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"19533:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"BuyContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"19308:10:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,bytes32,address,uint256,uint256,bytes8,uint256,uint256,uint256)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19308:264:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1250,"nodeType":"EmitStatement","src":"19303:269:0"}]},"documentation":"@dev Buy existing content\n@param _stakeId The ID of the staked content\n@param _host The node address that hosts the file\n@param _networkIntegerAmount The integer amount of network token to spend\n@param _networkFractionAmount The fraction amount of network token to spend\n@param _denomination The denomination of the network token, i.e ao, kilo, mega, etc.\n@param _primordialAmount The amount of primordial Token to spend","id":1252,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":null,"id":1061,"modifierName":{"argumentTypes":null,"id":1060,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"17634:8:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"17634:8:0"}],"name":"buyContent","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1048,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1252,"src":"17482:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17482:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1050,"name":"_host","nodeType":"VariableDeclaration","scope":1252,"src":"17500:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"17500:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1052,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17515:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"17515:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1054,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17546:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"17546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1056,"name":"_denomination","nodeType":"VariableDeclaration","scope":1252,"src":"17578:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1055,"name":"bytes8","nodeType":"ElementaryTypeName","src":"17578:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1058,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1252,"src":"17600:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"17600:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"17481:145:0"},"payable":false,"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"17643:0:0"},"scope":2327,"src":"17462:2114:0","stateMutability":"nonpayable","superFunction":null,"visibility":"public"},{"body":{"id":1310,"nodeType":"Block","src":"20290:371:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1267,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"20298:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"20298:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20321:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20298:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1271,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"20327:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20351:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20327:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1274,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"20356:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20381:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20356:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20327:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20326:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20298:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1299,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"20577:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1300,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"20598:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20577:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1307,"nodeType":"Block","src":"20636:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20648:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1266,"id":1306,"nodeType":"Return","src":"20641:12:0"}]},"id":1308,"nodeType":"IfStatement","src":"20573:85:0","trueBody":{"id":1304,"nodeType":"Block","src":"20609:21:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20621:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1266,"id":1303,"nodeType":"Return","src":"20614:11:0"}]}},"id":1309,"nodeType":"IfStatement","src":"20294:364:0","trueBody":{"id":1298,"nodeType":"Block","src":"20385:182:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1287,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"20477:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1282,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"20411:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1283,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"20434:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1284,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"20458:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1280,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"20394:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"20394:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20394:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"20394:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20394:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1289,"name":"_fileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"20499:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20394:114:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1296,"nodeType":"Block","src":"20539:24:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20552:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1266,"id":1295,"nodeType":"Return","src":"20545:12:0"}]},"id":1297,"nodeType":"IfStatement","src":"20390:173:0","trueBody":{"id":1293,"nodeType":"Block","src":"20510:23:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20523:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1266,"id":1292,"nodeType":"Return","src":"20516:11:0"}]}}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for the filesize\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@param _fileSize The file size of the content\n@return true when the amount is sufficient, false otherwise","id":1311,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canStake","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20130:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"20130:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1256,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20161:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"20161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1258,"name":"_denomination","nodeType":"VariableDeclaration","scope":1311,"src":"20193:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1257,"name":"bytes8","nodeType":"ElementaryTypeName","src":"20193:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1260,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1311,"src":"20215:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"20215:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1262,"name":"_fileSize","nodeType":"VariableDeclaration","scope":1311,"src":"20242:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"20242:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"20129:131:0"},"payable":false,"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"name":"","nodeType":"VariableDeclaration","scope":1311,"src":"20284:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1264,"name":"bool","nodeType":"ElementaryTypeName","src":"20284:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"20283:6:0"},"scope":2327,"src":"20111:550:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"21547:805:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1330,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21560:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21560:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21583:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21560:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1334,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21593:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21617:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21593:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1337,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21622:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21647:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21622:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21593:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21592:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21560:89:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1343,"name":"_stakedNetworkAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"21657:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1346,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21697:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1347,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21720:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1348,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21744:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1344,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"21680:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"21680:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21680:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21657:101:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21560:198:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21559:204:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1353,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"21770:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1354,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"21796:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21770:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:254:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1357,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"21826:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"21826:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21849:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21826:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1361,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21860:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21884:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21860:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1364,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21889:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21914:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21889:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21860:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21859:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21826:90:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1382,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22063:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1380,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"22035:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"22035:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22035:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1374,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"21968:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1375,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"21991:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1376,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"22015:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1372,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"21951:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"21951:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21951:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1370,"name":"_stakedNetworkAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"21926:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"21926:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21926:104:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"21926:108:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21926:156:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1385,"name":"_stakedFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"22085:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21926:174:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21925:176:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21826:275:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21820:286:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:547:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1391,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"22115:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"22115:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22139:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22115:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1395,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"22144:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22169:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22144:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1399,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"22174:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22200:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22174:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:86:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1403,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22205:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22225:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22205:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:111:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1409,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"22258:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1407,"name":"_stakedPrimordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"22230:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"22230:27:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22230:46:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"id":1411,"name":"_stakedFileSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"22279:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22230:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22115:179:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22113:182:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21559:736:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1421,"nodeType":"Block","src":"22328:21:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22340:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1329,"id":1420,"nodeType":"Return","src":"22333:11:0"}]},"id":1422,"nodeType":"IfStatement","src":"21551:798:0","trueBody":{"id":1418,"nodeType":"Block","src":"22300:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22312:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1329,"id":1417,"nodeType":"Return","src":"22305:12:0"}]}}]},"documentation":"@dev Check whether or the requested unstake amount is valid\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@param _stakedNetworkAmount The current staked network token amount\n@param _stakedPrimordialAmount The current staked primordial token amount\n@param _stakedFileSize The file size of the staked content\n@return true if can unstake, false otherwise","id":1424,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canUnstakePartial","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21306:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"21306:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1315,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21339:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"21339:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1317,"name":"_denomination","nodeType":"VariableDeclaration","scope":1424,"src":"21373:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1316,"name":"bytes8","nodeType":"ElementaryTypeName","src":"21373:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1319,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21397:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1318,"name":"uint256","nodeType":"ElementaryTypeName","src":"21397:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1321,"name":"_stakedNetworkAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21426:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"21426:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1323,"name":"_stakedPrimordialAmount","nodeType":"VariableDeclaration","scope":1424,"src":"21458:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"21458:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1325,"name":"_stakedFileSize","nodeType":"VariableDeclaration","scope":1424,"src":"21493:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"21493:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"21302:215:0"},"payable":false,"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"name":"","nodeType":"VariableDeclaration","scope":1424,"src":"21541:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1327,"name":"bool","nodeType":"ElementaryTypeName","src":"21541:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"21540:6:0"},"scope":2327,"src":"21275:1077:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1524,"nodeType":"Block","src":"22930:735:0","statements":[{"assignments":[1441],"declarations":[{"constant":false,"id":1441,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1525,"src":"22934:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1440,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"22934:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1447,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1442,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"22973:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1446,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1443,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"22988:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1445,"indexExpression":{"argumentTypes":null,"id":1444,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"23007:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22988:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22973:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22934:83:0"},{"assignments":[1451,1454],"declarations":[{"constant":false,"id":1451,"name":"_paymentAddress","nodeType":"VariableDeclaration","scope":1525,"src":"23022:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"23022:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1450,"length":null,"nodeType":"ArrayTypeName","src":"23022:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1454,"name":"_paymentAmount","nodeType":"VariableDeclaration","scope":1525,"src":"23056:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"23056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"length":null,"nodeType":"ArrayTypeName","src":"23056:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1463,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1457,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23118:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"23118:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1459,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"23145:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1460,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"23168:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1461,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"23192:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1455,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"23091:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determinePayment","nodeType":"MemberAccess","referencedDeclaration":5341,"src":"23091:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23091:115:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"23021:185:0"},{"expression":{"argumentTypes":null,"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1464,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23211:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"23211:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1472,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"23292:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1473,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"23315:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1474,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"23339:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1470,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"23275:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"23275:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23275:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1467,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23242:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"23242:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"23242:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23242:112:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:143:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1478,"nodeType":"ExpressionStatement","src":"23211:143:0"},{"body":{"id":1520,"nodeType":"Block","src":"23470:177:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1490,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23479:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1492,"indexExpression":{"argumentTypes":null,"id":1491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23495:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23479:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23509:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23501:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23479:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1497,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"23515:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1499,"indexExpression":{"argumentTypes":null,"id":1498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23530:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23515:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23535:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23515:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23479:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1519,"nodeType":"IfStatement","src":"23475:168:0","trueBody":{"id":1518,"nodeType":"Block","src":"23538:105:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1510,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"23591:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"23591:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1512,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"23618:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1514,"indexExpression":{"argumentTypes":null,"id":1513,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23633:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23618:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1505,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23561:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1507,"indexExpression":{"argumentTypes":null,"id":1506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23577:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"23561:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1504,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"23553:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23553:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stakeFrom","nodeType":"MemberAccess","referencedDeclaration":2867,"src":"23553:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23553:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"23544:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23544:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1517,"nodeType":"ExpressionStatement","src":"23544:93:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1483,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23437:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1484,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"23441:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"23441:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23437:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1521,"initializationExpression":{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"name":"i","nodeType":"VariableDeclaration","scope":1525,"src":"23424:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"23424:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1482,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23434:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23424:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23465:3:0","subExpression":{"argumentTypes":null,"id":1487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"23465:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1489,"nodeType":"ExpressionStatement","src":"23465:3:0"},"nodeType":"ForStatement","src":"23419:228:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23657:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1439,"id":1523,"nodeType":"Return","src":"23650:11:0"}]},"documentation":"@dev Stake network token on existing staked content\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of the network token to stake\n@param _networkFractionAmount The fraction amount of the network token to stake\n@param _denomination The denomination of the the network token to stake\n@return true on success","id":1525,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1435,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"22900:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1436,"modifierName":{"argumentTypes":null,"id":1434,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"22880:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"22880:34:0"}],"name":"_stakeNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1525,"src":"22768:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22768:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1428,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1525,"src":"22786:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"22786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1430,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1525,"src":"22817:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"22817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1432,"name":"_denomination","nodeType":"VariableDeclaration","scope":1525,"src":"22849:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1431,"name":"bytes8","nodeType":"ElementaryTypeName","src":"22849:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"22767:103:0"},"payable":false,"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"name":"","nodeType":"VariableDeclaration","scope":1525,"src":"22924:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1437,"name":"bool","nodeType":"ElementaryTypeName","src":"22924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"22923:6:0"},"scope":2327,"src":"22740:925:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1603,"nodeType":"Block","src":"23987:797:0","statements":[{"assignments":[null,1535,1537],"declarations":[null,{"constant":false,"id":1535,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1604,"src":"24037:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1534,"name":"address","nodeType":"ElementaryTypeName","src":"24037:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1537,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1604,"src":"24071:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1536,"name":"bool","nodeType":"ElementaryTypeName","src":"24071:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1541,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1538,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"24103:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"24103:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24103:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"24034:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1543,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24147:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24183:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24175:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24175:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"24147:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24138:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24138:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1549,"nodeType":"ExpressionStatement","src":"24138:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1551,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"24199:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24226:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24199:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24190:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24190:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"24190:41:0"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1604,"src":"24236:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1556,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"24236:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1563,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1558,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"24275:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1562,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1559,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"24290:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1561,"indexExpression":{"argumentTypes":null,"id":1560,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"24309:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24290:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24275:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"24236:83:0"},{"expression":{"argumentTypes":null,"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1564,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24324:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1566,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"24324:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1570,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"24394:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1567,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24358:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"24358:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"24358:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24358:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24324:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"24324:88:0"},{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1604,"src":"24460:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":1574,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"24460:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":1579,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1577,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"24495:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1576,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"24487:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24487:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"24460:60:0"},{"expression":{"argumentTypes":null,"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1580,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24524:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"24524:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1585,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24605:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"24605:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":1583,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"24565:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"24565:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24565:66:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24524:107:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"nodeType":"ExpressionStatement","src":"24524:107:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1593,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24679:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"24679:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1595,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"24706:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1596,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"24725:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1597,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"24725:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1591,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"24644:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stakeIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"24644:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,uint256) external returns (bool)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24644:120:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"24635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24635:130:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"24635:130:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24776:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1533,"id":1602,"nodeType":"Return","src":"24769:11:0"}]},"documentation":"@dev Stake primordial token on existing staked content\n@param _stakeId The ID of the staked content\n@param _primordialAmount The amount of the primordial token to stake\n@return true on success","id":1604,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_stakePrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1604,"src":"23918:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1529,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1604,"src":"23936:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"23936:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"23917:45:0"},"payable":false,"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"name":"","nodeType":"VariableDeclaration","scope":1604,"src":"23981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"23981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"23980:6:0"},"scope":2327,"src":"23887:897:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"25384:739:0","statements":[{"assignments":[1621],"declarations":[{"constant":false,"id":1621,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1705,"src":"25388:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1620,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"25388:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1627,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1622,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"25427:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1626,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1623,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"25442:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1625,"indexExpression":{"argumentTypes":null,"id":1624,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"25461:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25442:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25427:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"25388:83:0"},{"assignments":[1631,1634],"declarations":[{"constant":false,"id":1631,"name":"_unstakeAddress","nodeType":"VariableDeclaration","scope":1705,"src":"25476:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"25476:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1630,"length":null,"nodeType":"ArrayTypeName","src":"25476:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":1634,"name":"_unstakeAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25510:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"25510:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1633,"length":null,"nodeType":"ArrayTypeName","src":"25510:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":1643,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1637,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25572:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"25572:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1639,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"25599:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1640,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"25622:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1641,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25646:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1635,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"25545:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determineUnstake","nodeType":"MemberAccess","referencedDeclaration":5524,"src":"25545:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25545:115:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"25475:185:0"},{"expression":{"argumentTypes":null,"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1644,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25665:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"25665:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1652,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"25746:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1653,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"25769:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1654,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25793:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1650,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"25729:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"25729:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25729:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1647,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"25696:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"25696:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"25696:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25696:112:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25665:143:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1658,"nodeType":"ExpressionStatement","src":"25665:143:0"},{"body":{"id":1700,"nodeType":"Block","src":"25926:179:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1670,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"25935:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1672,"indexExpression":{"argumentTypes":null,"id":1671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25951:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25935:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25965:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25957:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25957:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"25935:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1677,"name":"_unstakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"25971:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1679,"indexExpression":{"argumentTypes":null,"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25986:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25971:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25991:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25971:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25935:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":1699,"nodeType":"IfStatement","src":"25931:170:0","trueBody":{"id":1698,"nodeType":"Block","src":"25994:107:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1690,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"26049:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"26049:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1692,"name":"_unstakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"26076:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1694,"indexExpression":{"argumentTypes":null,"id":1693,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"26091:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26076:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1685,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"26017:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1687,"indexExpression":{"argumentTypes":null,"id":1686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"26033:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26017:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1684,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"26009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26009:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unstakeFrom","nodeType":"MemberAccess","referencedDeclaration":2918,"src":"26009:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26009:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1683,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26000:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26000:95:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"26000:95:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25893:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1664,"name":"_unstakeAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"25897:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"25897:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25893:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"initializationExpression":{"assignments":[1660],"declarations":[{"constant":false,"id":1660,"name":"i","nodeType":"VariableDeclaration","scope":1705,"src":"25880:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"25880:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1662,"initialValue":{"argumentTypes":null,"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25890:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25880:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"25921:3:0","subExpression":{"argumentTypes":null,"id":1667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"25921:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1669,"nodeType":"ExpressionStatement","src":"25921:3:0"},"nodeType":"ForStatement","src":"25875:230:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26115:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1619,"id":1703,"nodeType":"Return","src":"26108:11:0"}]},"documentation":"@dev Unstake some network token on existing staked content\n@param _stakeId The ID of the staked content\n@param _networkIntegerAmount The integer amount of the network token to unstake\n@param _networkFractionAmount The fraction amount of the network token to unstake\n@param _denomination The denomination of the the network token to unstake\n@return true on success","id":1705,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1615,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"25354:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1616,"modifierName":{"argumentTypes":null,"id":1614,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"25334:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"25334:34:0"}],"name":"_unstakePartialNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1606,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1705,"src":"25222:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"25222:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1608,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25240:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"25240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1610,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1705,"src":"25271:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"25271:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1612,"name":"_denomination","nodeType":"VariableDeclaration","scope":1705,"src":"25303:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1611,"name":"bytes8","nodeType":"ElementaryTypeName","src":"25303:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"25221:103:0"},"payable":false,"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"name":"","nodeType":"VariableDeclaration","scope":1705,"src":"25378:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1617,"name":"bool","nodeType":"ElementaryTypeName","src":"25378:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"25377:6:0"},"scope":2327,"src":"25185:938:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"26463:688:0","statements":[{"assignments":[null,1715,1717],"declarations":[null,{"constant":false,"id":1715,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":1774,"src":"26513:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"26513:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":1717,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":1774,"src":"26547:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1716,"name":"bool","nodeType":"ElementaryTypeName","src":"26547:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":1721,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":1718,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"26579:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"26579:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26579:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"26510:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1723,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"26623:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26659:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26651:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26651:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"26623:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1722,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26614:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26614:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1729,"nodeType":"ExpressionStatement","src":"26614:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1731,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"26675:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"26702:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"26675:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"26666:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26666:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"ExpressionStatement","src":"26666:41:0"},{"assignments":[1737],"declarations":[{"constant":false,"id":1737,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1774,"src":"26712:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1736,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"26712:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1743,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1738,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"26751:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1742,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1739,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"26766:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1741,"indexExpression":{"argumentTypes":null,"id":1740,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"26785:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26766:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"26751:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"26712:83:0"},{"expression":{"argumentTypes":null,"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1744,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"26800:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"26800:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1750,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"26870:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1747,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"26834:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"26834:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"26834:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26834:54:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26800:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"26800:88:0"},{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":1774,"src":"26936:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":1754,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"26936:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":1759,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1757,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"26971:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1756,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"26963:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26963:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"26936:60:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1763,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"27046:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"27046:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1765,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"27073:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1766,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"27092:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":37,"src":"27092:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":1761,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"27009:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"unstakeIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3234,"src":"27009:36:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256,uint256) external returns (bool)"}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27009:122:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"27000:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27000:132:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"27000:132:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"27143:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1713,"id":1772,"nodeType":"Return","src":"27136:11:0"}]},"documentation":"@dev Unstake some primordial token on existing staked content\n@param _stakeId The ID of the staked content\n@param _primordialAmount The amount of the primordial token to unstake\n@return true on success","id":1774,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_unstakePartialPrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1774,"src":"26394:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"26394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1709,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1774,"src":"26412:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"26412:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"26393:45:0"},"payable":false,"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"name":"","nodeType":"VariableDeclaration","scope":1774,"src":"26457:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"26457:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"26456:6:0"},"scope":2327,"src":"26354:797:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"27848:594:0","statements":[{"assignments":[1790],"declarations":[{"constant":false,"id":1790,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1855,"src":"27852:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1789,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"27852:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1796,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1791,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"27890:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1795,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1792,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"27905:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1794,"indexExpression":{"argumentTypes":null,"id":1793,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"27924:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27905:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27890:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"27852:82:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1797,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"27943:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"27943:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27966:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27943:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1801,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"27972:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27996:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27972:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1804,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28001:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28026:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28001:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27972:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27971:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27943:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1832,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28256:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28276:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"28256:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1851,"nodeType":"Block","src":"28417:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"28429:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1788,"id":1850,"nodeType":"Return","src":"28422:12:0"}]},"id":1852,"nodeType":"IfStatement","src":"28252:187:0","trueBody":{"id":1848,"nodeType":"Block","src":"28279:132:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1842,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28361:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1838,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28324:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"28324:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1835,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28291:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"28291:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28291:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28291:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28291:69:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28291:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1844,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28383:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"28383:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28291:115:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1847,"nodeType":"Return","src":"28284:122:0"}]}},"id":1853,"nodeType":"IfStatement","src":"27939:500:0","trueBody":{"id":1831,"nodeType":"Block","src":"28030:216:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1824,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28182:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"28182:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1820,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28148:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"28148:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1817,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"28125:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1812,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"28059:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1813,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"28082:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1814,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"28106:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1810,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"28042:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"28042:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:105:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:135:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"28042:139:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28042:172:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1827,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"28218:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fileSize","nodeType":"MemberAccess","referencedDeclaration":41,"src":"28218:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28042:199:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1830,"nodeType":"Return","src":"28035:206:0"}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n@param _stakeId The stake ID to be checked\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@return true when the amount is sufficient, false otherwise","id":1855,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canStakeExisting","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1855,"src":"27689:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27689:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1778,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27707:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"27707:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1780,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27738:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"27738:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1782,"name":"_denomination","nodeType":"VariableDeclaration","scope":1855,"src":"27770:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1781,"name":"bytes8","nodeType":"ElementaryTypeName","src":"27770:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1784,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1855,"src":"27792:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"27792:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"27688:130:0"},"payable":false,"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"name":"","nodeType":"VariableDeclaration","scope":1855,"src":"27842:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1786,"name":"bool","nodeType":"ElementaryTypeName","src":"27842:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"27841:6:0"},"scope":2327,"src":"27662:780:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"29129:504:0","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":1927,"src":"29133:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1870,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"29133:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1877,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1872,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"29171:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1876,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1873,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"29186:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1875,"indexExpression":{"argumentTypes":null,"id":1874,"name":"_stakeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"29205:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29186:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29171:44:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"29133:82:0"},{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"name":"_price","nodeType":"VariableDeclaration","scope":1927,"src":"29219:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"29219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1886,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1883,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"29269:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":35,"src":"29269:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1880,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"29236:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":33,"src":"29236:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"29236:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29236:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29219:82:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1887,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"29310:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"29310:20:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29333:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29310:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"components":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1891,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"29339:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29363:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29339:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1894,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"29368:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29393:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29368:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29339:55:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29338:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29310:85:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1913,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29535:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29555:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29535:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1923,"nodeType":"Block","src":"29608:22:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"29620:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1869,"id":1922,"nodeType":"Return","src":"29613:12:0"}]},"id":1924,"nodeType":"IfStatement","src":"29531:99:0","trueBody":{"id":1920,"nodeType":"Block","src":"29558:44:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":1916,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29570:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1917,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"29591:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29570:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1869,"id":1919,"nodeType":"Return","src":"29563:34:0"}]}},"id":1925,"nodeType":"IfStatement","src":"29306:324:0","trueBody":{"id":1912,"nodeType":"Block","src":"29397:128:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1907,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"29492:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1902,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"29426:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1903,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"29449:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1904,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"29473:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1900,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"29409:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"29409:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29409:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"29409:82:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29409:101:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"argumentTypes":null,"id":1909,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"29514:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29409:111:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1869,"id":1911,"nodeType":"Return","src":"29402:118:0"}]}}]},"documentation":"@dev Check whether the network token and/or primordial token is adequate to pay for existing staked content\n@param _stakeId The stake ID to be checked\n@param _networkIntegerAmount The integer amount of the network token\n@param _networkFractionAmount The fraction amount of the network token\n@param _denomination The denomination of the the network token\n@param _primordialAmount The amount of primordial token\n@return true when the amount is sufficient, false otherwise","id":1927,"implemented":true,"isConstructor":false,"isDeclaredConst":true,"modifiers":[],"name":"_canBuy","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1857,"name":"_stakeId","nodeType":"VariableDeclaration","scope":1927,"src":"28970:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"28970:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1859,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":1927,"src":"28988:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"28988:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1861,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":1927,"src":"29019:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"29019:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1863,"name":"_denomination","nodeType":"VariableDeclaration","scope":1927,"src":"29051:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1862,"name":"bytes8","nodeType":"ElementaryTypeName","src":"29051:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"},{"constant":false,"id":1865,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":1927,"src":"29073:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"29073:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"28969:130:0"},"payable":false,"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"name":"","nodeType":"VariableDeclaration","scope":1927,"src":"29123:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"29123:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"29122:6:0"},"scope":2327,"src":"28953:680:0","stateMutability":"view","superFunction":null,"visibility":"internal"},{"body":{"id":2067,"nodeType":"Block","src":"30191:1488:0","statements":[{"assignments":[1944],"declarations":[{"constant":false,"id":1944,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":2068,"src":"30195:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":1943,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"30195:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":1950,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1945,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"30234:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":1949,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1946,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"30249:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1948,"indexExpression":{"argumentTypes":null,"id":1947,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"30268:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30249:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30234:42:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30195:81:0"},{"assignments":[1952],"declarations":[{"constant":false,"id":1952,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":2068,"src":"30280:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":1951,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"30280:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":1959,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1953,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"30318:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":1958,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1954,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"30333:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":1957,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1955,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30352:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"30352:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30333:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30318:58:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"30280:96:0"},{"expression":{"argumentTypes":null,"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1960,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30381:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"30381:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1965,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"30429:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1966,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"30452:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1967,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30476:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":1963,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"30412:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toBase","nodeType":"MemberAccess","referencedDeclaration":5595,"src":"30412:16:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,bytes8) view external returns (uint256)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30412:78:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30381:109:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"30381:109:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1973,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30555:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"30555:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":1975,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"30577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1976,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"30600:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":1977,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30624:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"id":1972,"name":"_transferNetworkTokenPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"30526:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,bytes8) returns (bool)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30526:112:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"30517:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30517:122:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1980,"nodeType":"ExpressionStatement","src":"30517:122:0"},{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"name":"_contentCreatorProfit","nodeType":"VariableDeclaration","scope":2068,"src":"30690:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"30690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":1993,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":1991,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"30794:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1986,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30756:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"30756:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1983,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30723:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":1984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"30723:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":5953,"src":"30723:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30723:65:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"30722:67:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"30722:71:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30722:91:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30690:123:0"},{"expression":{"argumentTypes":null,"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1994,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"30817:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1997,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1995,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30846:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":1996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"30846:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"30817:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2003,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"30935:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":1998,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"30875:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2001,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":1999,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"30904:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"30904:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30875:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"30875:59:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30875:82:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30817:140:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2006,"nodeType":"ExpressionStatement","src":"30817:140:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2008,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"30996:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"30996:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2010,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31018:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"31018:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2012,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31045:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2013,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"31045:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2014,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31067:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"31067:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2016,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31091:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2017,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31091:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2018,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31121:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2019,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31144:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"31144:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31177:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2007,"name":"BuyContentNetworkTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"30966:29:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint8)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30966:213:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"EmitStatement","src":"30961:218:0"},{"expression":{"argumentTypes":null,"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2024,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"31224:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2027,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2025,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31253:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31253:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31224:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2036,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31363:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2033,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31330:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31330:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31330:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31330:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2028,"name":"buyContentNetworkTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":91,"src":"31276:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2031,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2029,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31305:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31305:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31276:49:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"31276:53:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31276:110:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31224:162:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ExpressionStatement","src":"31224:162:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2042,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31425:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"31425:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2044,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31447:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"31447:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2046,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31468:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2047,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"31468:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2048,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31490:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"31490:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2050,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31514:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31514:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2055,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"31577:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2052,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"31544:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"networkAmount","nodeType":"MemberAccess","referencedDeclaration":58,"src":"31544:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31544:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31544:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2059,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"31624:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2060,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"31624:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2057,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"31601:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"31601:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31601:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31658:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2041,"name":"BuyContentNetworkTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"31395:29:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint8)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31395:265:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2064,"nodeType":"EmitStatement","src":"31390:270:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"31671:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1942,"id":2066,"nodeType":"Return","src":"31664:11:0"}]},"documentation":"@dev Pay bought content with network token\n@param _buyId The ID of the bought content\n@param _networkIntegerAmount The integer amount of the network token to pay\n@param _networkFractionAmount The fraction amount of the network token to pay\n@param _denomination The denomination of the the network token to pay\n@return true on success","id":2068,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[{"arguments":[{"argumentTypes":null,"id":1938,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"30161:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"id":1939,"modifierName":{"argumentTypes":null,"id":1937,"name":"isValidDenomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"30141:19:0","typeDescriptions":{"typeIdentifier":"t_modifier$_t_bytes8_$","typeString":"modifier (bytes8)"}},"nodeType":"ModifierInvocation","src":"30141:34:0"}],"name":"_payNetworkToken","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"name":"_buyId","nodeType":"VariableDeclaration","scope":2068,"src":"30031:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1928,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30031:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":1931,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":2068,"src":"30047:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"30047:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1933,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":2068,"src":"30078:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1932,"name":"uint256","nodeType":"ElementaryTypeName","src":"30078:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":1935,"name":"_denomination","nodeType":"VariableDeclaration","scope":2068,"src":"30110:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":1934,"name":"bytes8","nodeType":"ElementaryTypeName","src":"30110:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"30030:101:0"},"payable":false,"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"name":"","nodeType":"VariableDeclaration","scope":2068,"src":"30185:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1940,"name":"bool","nodeType":"ElementaryTypeName","src":"30185:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"30184:6:0"},"scope":2327,"src":"30005:1674:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":2141,"nodeType":"Block","src":"32242:502:0","statements":[{"assignments":[2084,2087],"declarations":[{"constant":false,"id":2084,"name":"_paymentAddress","nodeType":"VariableDeclaration","scope":2142,"src":"32327:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"32327:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2083,"length":null,"nodeType":"ArrayTypeName","src":"32327:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":2087,"name":"_paymentAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32361:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"32361:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"length":null,"nodeType":"ArrayTypeName","src":"32361:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"value":null,"visibility":"internal"}],"id":2095,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2090,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"32423:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2091,"name":"_networkIntegerAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"32432:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2092,"name":"_networkFractionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"32455:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2093,"name":"_denomination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"32479:13:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes8","typeString":"bytes8"}],"expression":{"argumentTypes":null,"id":2088,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"32396:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"determinePayment","nodeType":"MemberAccess","referencedDeclaration":5341,"src":"32396:26:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes8_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address,uint256,uint256,bytes8) view external returns (address[] memory,uint256[] memory)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32396:97:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"32326:167:0"},{"body":{"id":2137,"nodeType":"Block","src":"32549:177:0","statements":[{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2107,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32558:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2109,"indexExpression":{"argumentTypes":null,"id":2108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32574:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32558:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32588:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32580:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32580:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32558:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2114,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"32594:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2116,"indexExpression":{"argumentTypes":null,"id":2115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32609:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32594:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32614:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32594:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32558:57:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":2136,"nodeType":"IfStatement","src":"32554:168:0","trueBody":{"id":2135,"nodeType":"Block","src":"32617:105:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2127,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"32682:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2128,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"32691:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2129,"name":"_paymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"32697:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2131,"indexExpression":{"argumentTypes":null,"id":2130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32712:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32697:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2122,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32640:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2124,"indexExpression":{"argumentTypes":null,"id":2123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32656:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32640:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2121,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"32632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32632:27:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"whitelistTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2989,"src":"32632:49:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32632:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2120,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"32623:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32623:93:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2134,"nodeType":"ExpressionStatement","src":"32623:93:0"}]}}]},"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32516:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2101,"name":"_paymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"32520:15:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"32520:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32516:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"initializationExpression":{"assignments":[2097],"declarations":[{"constant":false,"id":2097,"name":"i","nodeType":"VariableDeclaration","scope":2142,"src":"32503:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"32503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2099,"initialValue":{"argumentTypes":null,"hexValue":"30","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32513:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"32503:11:0"},"loopExpression":{"expression":{"argumentTypes":null,"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"32544:3:0","subExpression":{"argumentTypes":null,"id":2104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"32544:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"32544:3:0"},"nodeType":"ForStatement","src":"32498:228:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"32736:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2080,"id":2140,"nodeType":"Return","src":"32729:11:0"}]},"documentation":"@dev Actually transfer the network token for the purchase\n@param _sender The address of the sender\n@param _networkIntegerAmount The integer amount of the network token to transfer\n@param _networkFractionAmount The fraction amount of the network token to transfer\n@param _denomination The denomination of the the network token to transfer\n@return true on success","id":2142,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_transferNetworkTokenPayment","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"name":"_sender","nodeType":"VariableDeclaration","scope":2142,"src":"32116:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"32116:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2072,"name":"_networkIntegerAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32133:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"32133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2074,"name":"_networkFractionAmount","nodeType":"VariableDeclaration","scope":2142,"src":"32164:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"32164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":2076,"name":"_denomination","nodeType":"VariableDeclaration","scope":2142,"src":"32196:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"},"typeName":{"id":2075,"name":"bytes8","nodeType":"ElementaryTypeName","src":"32196:6:0","typeDescriptions":{"typeIdentifier":"t_bytes8","typeString":"bytes8"}},"value":null,"visibility":"internal"}],"src":"32115:102:0"},"payable":false,"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"name":"","nodeType":"VariableDeclaration","scope":2142,"src":"32236:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2078,"name":"bool","nodeType":"ElementaryTypeName","src":"32236:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"32235:6:0"},"scope":2327,"src":"32078:666:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},{"body":{"id":2325,"nodeType":"Block","src":"33049:2157:0","statements":[{"assignments":[null,2152,2154],"declarations":[null,{"constant":false,"id":2152,"name":"_baseDenominationAddress","nodeType":"VariableDeclaration","scope":2326,"src":"33099:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"33099:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":2154,"name":"_baseDenominationActive","nodeType":"VariableDeclaration","scope":2326,"src":"33133:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2153,"name":"bool","nodeType":"ElementaryTypeName","src":"33133:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"id":2158,"initialValue":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"id":2155,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"33165:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOTreasury_$5762","typeString":"contract AOTreasury"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getBaseDenomination","nodeType":"MemberAccess","referencedDeclaration":5033,"src":"33165:29:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes8_$_t_address_$_t_bool_$","typeString":"function () view external returns (bytes8,address,bool)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33165:31:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes8_$_t_address_$_t_bool_$","typeString":"tuple(bytes8,address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"33096:100:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2160,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"33209:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33245:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33237:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":"address"},"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33237:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33209:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33200:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33200:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2166,"nodeType":"ExpressionStatement","src":"33200:48:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":2168,"name":"_baseDenominationActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"33261:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"74727565","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33288:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"33261:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33252:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33252:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"ExpressionStatement","src":"33252:41:0"},{"assignments":[2174],"declarations":[{"constant":false,"id":2174,"name":"_boughtContent","nodeType":"VariableDeclaration","scope":2326,"src":"33298:36:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"},"typeName":{"contractScope":null,"id":2173,"name":"BoughtContent","nodeType":"UserDefinedTypeName","referencedDeclaration":65,"src":"33298:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent"}},"value":null,"visibility":"internal"}],"id":2180,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2175,"name":"boughtContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"33337:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_BoughtContent_$65_storage_$","typeString":"mapping(uint256 => struct AOContent.BoughtContent storage ref)"}},"id":2179,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2176,"name":"boughtContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"33352:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2178,"indexExpression":{"argumentTypes":null,"id":2177,"name":"_buyId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"33371:6:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33352:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33337:42:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage","typeString":"struct AOContent.BoughtContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33298:81:0"},{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"name":"_stakedContent","nodeType":"VariableDeclaration","scope":2326,"src":"33383:35:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent"},"typeName":{"contractScope":null,"id":2181,"name":"StakedContent","nodeType":"UserDefinedTypeName","referencedDeclaration":48,"src":"33383:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage_ptr","typeString":"struct AOContent.StakedContent"}},"value":null,"visibility":"internal"}],"id":2189,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2183,"name":"stakedContents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"33421:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_StakedContent_$48_storage_$","typeString":"mapping(uint256 => struct AOContent.StakedContent storage ref)"}},"id":2188,"indexExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2184,"name":"stakedContentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"33436:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2187,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2185,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33455:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"33455:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33436:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33421:58:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_storage","typeString":"struct AOContent.StakedContent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33383:96:0"},{"expression":{"argumentTypes":null,"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2190,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33484:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33484:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":2193,"name":"_primordialAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"33518:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33484:51:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"33484:51:0"},{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"name":"_primordialToken","nodeType":"VariableDeclaration","scope":2326,"src":"33583:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"},"typeName":{"contractScope":null,"id":2196,"name":"AOToken","nodeType":"UserDefinedTypeName","referencedDeclaration":4677,"src":"33583:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"value":null,"visibility":"internal"}],"id":2201,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2199,"name":"_baseDenominationAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"33618:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2198,"name":"AOToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"33610:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AOToken_$4677_$","typeString":"type(contract AOToken)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33610:33:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"nodeType":"VariableDeclarationStatement","src":"33583:60:0"},{"expression":{"argumentTypes":null,"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2202,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33647:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"33647:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2207,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33728:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2208,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"33728:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":null,"id":2205,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"33688:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"weightedIndexByAddress","nodeType":"MemberAccess","referencedDeclaration":3918,"src":"33688:39:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33688:61:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33647:102:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2211,"nodeType":"ExpressionStatement","src":"33647:102:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2215,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33832:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2216,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"33832:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":2217,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"33854:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2218,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33860:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33860:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_contract$_AOContent_$2327","typeString":"contract AOContent"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2213,"name":"_primordialToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"33785:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_AOToken_$4677","typeString":"contract AOToken"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"whitelistTransferIcoTokenFrom","nodeType":"MemberAccess","referencedDeclaration":3298,"src":"33785:46:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33785:107:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2212,"name":"require","nodeType":"Identifier","overloadedDeclarations":[6489,6490],"referencedDeclaration":6489,"src":"33776:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33776:117:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2222,"nodeType":"ExpressionStatement","src":"33776:117:0"},{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"name":"_contentCreatorProfit","nodeType":"VariableDeclaration","scope":2326,"src":"33944:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"33944:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":2235,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2233,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"34051:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2228,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34013:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"34013:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2225,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"33977:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"33977:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":5953,"src":"33977:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33977:68:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"33976:70:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":5967,"src":"33976:74:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33976:94:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33944:126:0"},{"expression":{"argumentTypes":null,"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2236,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34074:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2241,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2237,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34106:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34106:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34074:58:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2242,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2239,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34133:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34133:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34074:98:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2251,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34278:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2243,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34175:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2246,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2244,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34207:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34207:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34175:58:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2249,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2247,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34234:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34234:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34175:98:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"34175:102:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34175:125:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34074:226:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"34074:226:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2256,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34342:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"34342:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2258,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34364:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeOwner","nodeType":"MemberAccess","referencedDeclaration":31,"src":"34364:25:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2260,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34391:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"34391:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2262,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34413:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"34413:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2264,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34437:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34437:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2266,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34470:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34470:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"id":2268,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34510:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2269,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"34533:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"34533:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"30","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34566:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2255,"name":"BuyContentPrimordialTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"34309:32:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint8)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34309:259:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"EmitStatement","src":"34304:264:0"},{"expression":{"argumentTypes":null,"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2274,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34613:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2279,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2275,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34645:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34645:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34613:52:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2280,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2277,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34666:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34666:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34613:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2292,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"34841:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2289,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34805:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34805:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"34805:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34805:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":2281,"name":"buyContentPrimordialTokenProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"34708:31:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":2284,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2282,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34740:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34740:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34708:52:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":2287,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2285,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34761:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"34761:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34708:92:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":6011,"src":"34708:96:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34708:156:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34613:251:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"34613:251:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2298,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34906:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":54,"src":"34906:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2300,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34928:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"host","nodeType":"MemberAccess","referencedDeclaration":56,"src":"34928:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2302,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"buyId","nodeType":"MemberAccess","referencedDeclaration":50,"src":"34949:20:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2304,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34971:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stakeId","nodeType":"MemberAccess","referencedDeclaration":52,"src":"34971:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2306,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"34995:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"34995:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2308,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"35028:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialWeightedIndex","nodeType":"MemberAccess","referencedDeclaration":62,"src":"35028:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":2313,"name":"_contentCreatorProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"35104:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2310,"name":"_boughtContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"35068:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_BoughtContent_$65_storage_ptr","typeString":"struct AOContent.BoughtContent storage pointer"}},"id":2311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"primordialAmount","nodeType":"MemberAccess","referencedDeclaration":60,"src":"35068:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"35068:35:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35068:58:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":2317,"name":"_stakedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"35151:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_StakedContent_$48_memory_ptr","typeString":"struct AOContent.StakedContent memory"}},"id":2318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"profitPercentage","nodeType":"MemberAccess","referencedDeclaration":43,"src":"35151:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":null,"id":2315,"name":"PERCENTAGE_DIVISOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"35128:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":5987,"src":"35128:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35128:55:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"hexValue":"31","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35185:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2297,"name":"BuyContentPrimordialTokenEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"34873:32:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$returns$__$","typeString":"function (address,address,bytes32,bytes32,uint256,uint256,uint256,uint256,uint8)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34873:314:0","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2322,"nodeType":"EmitStatement","src":"34868:319:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35198:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2150,"id":2324,"nodeType":"Return","src":"35191:11:0"}]},"documentation":"@dev Pay bought content with primordial token\n@param _buyId The ID of the bought content\n@param _primordialAmount The amount of the primordial token to pay\n@return true on success","id":2326,"implemented":true,"isConstructor":false,"isDeclaredConst":false,"modifiers":[],"name":"_payPrimordialToken","nodeType":"FunctionDefinition","parameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"name":"_buyId","nodeType":"VariableDeclaration","scope":2326,"src":"32982:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32982:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":2146,"name":"_primordialAmount","nodeType":"VariableDeclaration","scope":2326,"src":"32998:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"32998:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"32981:43:0"},"payable":false,"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"name":"","nodeType":"VariableDeclaration","scope":2326,"src":"33043:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2148,"name":"bool","nodeType":"ElementaryTypeName","src":"33043:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"33042:6:0"},"scope":2327,"src":"32953:2253:0","stateMutability":"nonpayable","superFunction":null,"visibility":"internal"}],"scope":2328,"src":"299:34909:0"}],"src":"0:35209:0"},"compiler":{"name":"solc","version":"0.4.24+commit.e67f0147.Emscripten.clang"},"networks":{"4":{"events":{},"links":{},"address":"0x4eafb8db0395dc0ef12f243df166ce58e286d8a8"}},"schemaVersion":"2.0.1","updatedAt":"2018-08-06T18:40:33.094Z"};

/***/ }),

/***/ "./node_modules/bignumber.js/bignumber.js":
/*!************************************************!*\
  !*** ./node_modules/bignumber.js/bignumber.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*! bignumber.js v2.0.7 https://github.com/MikeMcl/bignumber.js/LICENCE */

;(function (global) {
    'use strict';

    /*
      bignumber.js v2.0.7
      A JavaScript library for arbitrary-precision arithmetic.
      https://github.com/MikeMcl/bignumber.js
      Copyright (c) 2015 Michael Mclaughlin <M8ch88l@gmail.com>
      MIT Expat Licence
    */


    var BigNumber, crypto, parseNumeric,
        isNumeric = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        notBool = ' not a boolean or binary digit',
        roundingMode = 'rounding mode',
        tooManyDigits = 'number type has more than 15 significant digits',
        ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
        // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,

        /*
         * The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
         * the arguments to toExponential, toFixed, toFormat, and toPrecision, beyond which an
         * exception is thrown (if ERRORS is true).
         */
        MAX = 1E9;                                   // 0 to MAX_INT32


    /*
     * Create and return a BigNumber constructor.
     */
    function another(configObj) {
        var div,

            // id tracks the caller function, so its name can be included in error messages.
            id = 0,
            P = BigNumber.prototype,
            ONE = new BigNumber(1),


            /********************************* EDITABLE DEFAULTS **********************************/


            /*
             * The default values below must be integers within the inclusive ranges stated.
             * The values can also be changed at run-time using BigNumber.config.
             */

            // The maximum number of decimal places for operations involving division.
            DECIMAL_PLACES = 20,                     // 0 to MAX

            /*
             * The rounding mode used when rounding to the above decimal places, and when using
             * toExponential, toFixed, toFormat and toPrecision, and round (default value).
             * UP         0 Away from zero.
             * DOWN       1 Towards zero.
             * CEIL       2 Towards +Infinity.
             * FLOOR      3 Towards -Infinity.
             * HALF_UP    4 Towards nearest neighbour. If equidistant, up.
             * HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
             * HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
             * HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
             * HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
             */
            ROUNDING_MODE = 4,                       // 0 to 8

            // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

            // The exponent value at and beneath which toString returns exponential notation.
            // Number type: -7
            TO_EXP_NEG = -7,                         // 0 to -MAX

            // The exponent value at and above which toString returns exponential notation.
            // Number type: 21
            TO_EXP_POS = 21,                         // 0 to MAX

            // RANGE : [MIN_EXP, MAX_EXP]

            // The minimum exponent value, beneath which underflow to zero occurs.
            // Number type: -324  (5e-324)
            MIN_EXP = -1e7,                          // -1 to -MAX

            // The maximum exponent value, above which overflow to Infinity occurs.
            // Number type:  308  (1.7976931348623157e+308)
            // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
            MAX_EXP = 1e7,                           // 1 to MAX

            // Whether BigNumber Errors are ever thrown.
            ERRORS = true,                           // true or false

            // Change to intValidatorNoErrors if ERRORS is false.
            isValidInt = intValidatorWithErrors,     // intValidatorWithErrors/intValidatorNoErrors

            // Whether to use cryptographically-secure random number generation, if available.
            CRYPTO = false,                          // true or false

            /*
             * The modulo mode used when calculating the modulus: a mod n.
             * The quotient (q = a / n) is calculated according to the corresponding rounding mode.
             * The remainder (r) is calculated as: r = a - n * q.
             *
             * UP        0 The remainder is positive if the dividend is negative, else is negative.
             * DOWN      1 The remainder has the same sign as the dividend.
             *             This modulo mode is commonly known as 'truncated division' and is
             *             equivalent to (a % n) in JavaScript.
             * FLOOR     3 The remainder has the same sign as the divisor (Python %).
             * HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
             * EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
             *             The remainder is always positive.
             *
             * The truncated division, floored division, Euclidian division and IEEE 754 remainder
             * modes are commonly used for the modulus operation.
             * Although the other rounding modes can also be used, they may not give useful results.
             */
            MODULO_MODE = 1,                         // 0 to 9

            // The maximum number of significant digits of the result of the toPower operation.
            // If POW_PRECISION is 0, there will be unlimited significant digits.
            POW_PRECISION = 100,                     // 0 to MAX

            // The format specification used by the BigNumber.prototype.toFormat method.
            FORMAT = {
                decimalSeparator: '.',
                groupSeparator: ',',
                groupSize: 3,
                secondaryGroupSize: 0,
                fractionGroupSeparator: '\xA0',      // non-breaking space
                fractionGroupSize: 0
            };


        /******************************************************************************************/


        // CONSTRUCTOR


        /*
         * The BigNumber constructor and exported function.
         * Create and return a new instance of a BigNumber object.
         *
         * n {number|string|BigNumber} A numeric value.
         * [b] {number} The base of n. Integer, 2 to 64 inclusive.
         */
        function BigNumber( n, b ) {
            var c, e, i, num, len, str,
                x = this;

            // Enable constructor usage without new.
            if ( !( x instanceof BigNumber ) ) {

                // 'BigNumber() constructor call without new: {n}'
                if (ERRORS) raise( 26, 'constructor call without new', n );
                return new BigNumber( n, b );
            }

            // 'new BigNumber() base not an integer: {b}'
            // 'new BigNumber() base out of range: {b}'
            if ( b == null || !isValidInt( b, 2, 64, id, 'base' ) ) {

                // Duplicate.
                if ( n instanceof BigNumber ) {
                    x.s = n.s;
                    x.e = n.e;
                    x.c = ( n = n.c ) ? n.slice() : n;
                    id = 0;
                    return;
                }

                if ( ( num = typeof n == 'number' ) && n * 0 == 0 ) {
                    x.s = 1 / n < 0 ? ( n = -n, -1 ) : 1;

                    // Fast path for integers.
                    if ( n === ~~n ) {
                        for ( e = 0, i = n; i >= 10; i /= 10, e++ );
                        x.e = e;
                        x.c = [n];
                        id = 0;
                        return;
                    }

                    str = n + '';
                } else {
                    if ( !isNumeric.test( str = n + '' ) ) return parseNumeric( x, str, num );
                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;
                }
            } else {
                b = b | 0;
                str = n + '';

                // Ensure return value is rounded to DECIMAL_PLACES as with other bases.
                // Allow exponential notation to be used with base 10 argument.
                if ( b == 10 ) {
                    x = new BigNumber( n instanceof BigNumber ? n : str );
                    return round( x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE );
                }

                // Avoid potential interpretation of Infinity and NaN as base 44+ values.
                // Any number in exponential form will fail due to the [Ee][+-].
                if ( ( num = typeof n == 'number' ) && n * 0 != 0 ||
                  !( new RegExp( '^-?' + ( c = '[' + ALPHABET.slice( 0, b ) + ']+' ) +
                    '(?:\\.' + c + ')?$',b < 37 ? 'i' : '' ) ).test(str) ) {
                    return parseNumeric( x, str, num, b );
                }

                if (num) {
                    x.s = 1 / n < 0 ? ( str = str.slice(1), -1 ) : 1;

                    if ( ERRORS && str.replace( /^0\.0*|\./, '' ).length > 15 ) {

                        // 'new BigNumber() number type has more than 15 significant digits: {n}'
                        raise( id, tooManyDigits, n );
                    }

                    // Prevent later check for length on converted number.
                    num = false;
                } else {
                    x.s = str.charCodeAt(0) === 45 ? ( str = str.slice(1), -1 ) : 1;
                }

                str = convertBase( str, 10, b, x.s );
            }

            // Decimal point?
            if ( ( e = str.indexOf('.') ) > -1 ) str = str.replace( '.', '' );

            // Exponential form?
            if ( ( i = str.search( /e/i ) ) > 0 ) {

                // Determine exponent.
                if ( e < 0 ) e = i;
                e += +str.slice( i + 1 );
                str = str.substring( 0, i );
            } else if ( e < 0 ) {

                // Integer.
                e = str.length;
            }

            // Determine leading zeros.
            for ( i = 0; str.charCodeAt(i) === 48; i++ );

            // Determine trailing zeros.
            for ( len = str.length; str.charCodeAt(--len) === 48; );
            str = str.slice( i, len + 1 );

            if (str) {
                len = str.length;

                // Disallow numbers with over 15 significant digits if number type.
                // 'new BigNumber() number type has more than 15 significant digits: {n}'
                if ( num && ERRORS && len > 15 ) raise( id, tooManyDigits, x.s * n );

                e = e - i - 1;

                 // Overflow?
                if ( e > MAX_EXP ) {

                    // Infinity.
                    x.c = x.e = null;

                // Underflow?
                } else if ( e < MIN_EXP ) {

                    // Zero.
                    x.c = [ x.e = 0 ];
                } else {
                    x.e = e;
                    x.c = [];

                    // Transform base

                    // e is the base 10 exponent.
                    // i is where to slice str to get the first element of the coefficient array.
                    i = ( e + 1 ) % LOG_BASE;
                    if ( e < 0 ) i += LOG_BASE;

                    if ( i < len ) {
                        if (i) x.c.push( +str.slice( 0, i ) );

                        for ( len -= LOG_BASE; i < len; ) {
                            x.c.push( +str.slice( i, i += LOG_BASE ) );
                        }

                        str = str.slice(i);
                        i = LOG_BASE - str.length;
                    } else {
                        i -= len;
                    }

                    for ( ; i--; str += '0' );
                    x.c.push( +str );
                }
            } else {

                // Zero.
                x.c = [ x.e = 0 ];
            }

            id = 0;
        }


        // CONSTRUCTOR PROPERTIES


        BigNumber.another = another;

        BigNumber.ROUND_UP = 0;
        BigNumber.ROUND_DOWN = 1;
        BigNumber.ROUND_CEIL = 2;
        BigNumber.ROUND_FLOOR = 3;
        BigNumber.ROUND_HALF_UP = 4;
        BigNumber.ROUND_HALF_DOWN = 5;
        BigNumber.ROUND_HALF_EVEN = 6;
        BigNumber.ROUND_HALF_CEIL = 7;
        BigNumber.ROUND_HALF_FLOOR = 8;
        BigNumber.EUCLID = 9;


        /*
         * Configure infrequently-changing library-wide settings.
         *
         * Accept an object or an argument list, with one or many of the following properties or
         * parameters respectively:
         *
         *   DECIMAL_PLACES  {number}  Integer, 0 to MAX inclusive
         *   ROUNDING_MODE   {number}  Integer, 0 to 8 inclusive
         *   EXPONENTIAL_AT  {number|number[]}  Integer, -MAX to MAX inclusive or
         *                                      [integer -MAX to 0 incl., 0 to MAX incl.]
         *   RANGE           {number|number[]}  Non-zero integer, -MAX to MAX inclusive or
         *                                      [integer -MAX to -1 incl., integer 1 to MAX incl.]
         *   ERRORS          {boolean|number}   true, false, 1 or 0
         *   CRYPTO          {boolean|number}   true, false, 1 or 0
         *   MODULO_MODE     {number}           0 to 9 inclusive
         *   POW_PRECISION   {number}           0 to MAX inclusive
         *   FORMAT          {object}           See BigNumber.prototype.toFormat
         *      decimalSeparator       {string}
         *      groupSeparator         {string}
         *      groupSize              {number}
         *      secondaryGroupSize     {number}
         *      fractionGroupSeparator {string}
         *      fractionGroupSize      {number}
         *
         * (The values assigned to the above FORMAT object properties are not checked for validity.)
         *
         * E.g.
         * BigNumber.config(20, 4) is equivalent to
         * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
         *
         * Ignore properties/parameters set to null or undefined.
         * Return an object with the properties current values.
         */
        BigNumber.config = function () {
            var v, p,
                i = 0,
                r = {},
                a = arguments,
                o = a[0],
                has = o && typeof o == 'object'
                  ? function () { if ( o.hasOwnProperty(p) ) return ( v = o[p] ) != null; }
                  : function () { if ( a.length > i ) return ( v = a[i++] ) != null; };

            // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
            // 'config() DECIMAL_PLACES not an integer: {v}'
            // 'config() DECIMAL_PLACES out of range: {v}'
            if ( has( p = 'DECIMAL_PLACES' ) && isValidInt( v, 0, MAX, 2, p ) ) {
                DECIMAL_PLACES = v | 0;
            }
            r[p] = DECIMAL_PLACES;

            // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
            // 'config() ROUNDING_MODE not an integer: {v}'
            // 'config() ROUNDING_MODE out of range: {v}'
            if ( has( p = 'ROUNDING_MODE' ) && isValidInt( v, 0, 8, 2, p ) ) {
                ROUNDING_MODE = v | 0;
            }
            r[p] = ROUNDING_MODE;

            // EXPONENTIAL_AT {number|number[]}
            // Integer, -MAX to MAX inclusive or [integer -MAX to 0 inclusive, 0 to MAX inclusive].
            // 'config() EXPONENTIAL_AT not an integer: {v}'
            // 'config() EXPONENTIAL_AT out of range: {v}'
            if ( has( p = 'EXPONENTIAL_AT' ) ) {

                if ( isArray(v) ) {
                    if ( isValidInt( v[0], -MAX, 0, 2, p ) && isValidInt( v[1], 0, MAX, 2, p ) ) {
                        TO_EXP_NEG = v[0] | 0;
                        TO_EXP_POS = v[1] | 0;
                    }
                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {
                    TO_EXP_NEG = -( TO_EXP_POS = ( v < 0 ? -v : v ) | 0 );
                }
            }
            r[p] = [ TO_EXP_NEG, TO_EXP_POS ];

            // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
            // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
            // 'config() RANGE not an integer: {v}'
            // 'config() RANGE cannot be zero: {v}'
            // 'config() RANGE out of range: {v}'
            if ( has( p = 'RANGE' ) ) {

                if ( isArray(v) ) {
                    if ( isValidInt( v[0], -MAX, -1, 2, p ) && isValidInt( v[1], 1, MAX, 2, p ) ) {
                        MIN_EXP = v[0] | 0;
                        MAX_EXP = v[1] | 0;
                    }
                } else if ( isValidInt( v, -MAX, MAX, 2, p ) ) {
                    if ( v | 0 ) MIN_EXP = -( MAX_EXP = ( v < 0 ? -v : v ) | 0 );
                    else if (ERRORS) raise( 2, p + ' cannot be zero', v );
                }
            }
            r[p] = [ MIN_EXP, MAX_EXP ];

            // ERRORS {boolean|number} true, false, 1 or 0.
            // 'config() ERRORS not a boolean or binary digit: {v}'
            if ( has( p = 'ERRORS' ) ) {

                if ( v === !!v || v === 1 || v === 0 ) {
                    id = 0;
                    isValidInt = ( ERRORS = !!v ) ? intValidatorWithErrors : intValidatorNoErrors;
                } else if (ERRORS) {
                    raise( 2, p + notBool, v );
                }
            }
            r[p] = ERRORS;

            // CRYPTO {boolean|number} true, false, 1 or 0.
            // 'config() CRYPTO not a boolean or binary digit: {v}'
            // 'config() crypto unavailable: {crypto}'
            if ( has( p = 'CRYPTO' ) ) {

                if ( v === !!v || v === 1 || v === 0 ) {
                    CRYPTO = !!( v && crypto && typeof crypto == 'object' );
                    if ( v && !CRYPTO && ERRORS ) raise( 2, 'crypto unavailable', crypto );
                } else if (ERRORS) {
                    raise( 2, p + notBool, v );
                }
            }
            r[p] = CRYPTO;

            // MODULO_MODE {number} Integer, 0 to 9 inclusive.
            // 'config() MODULO_MODE not an integer: {v}'
            // 'config() MODULO_MODE out of range: {v}'
            if ( has( p = 'MODULO_MODE' ) && isValidInt( v, 0, 9, 2, p ) ) {
                MODULO_MODE = v | 0;
            }
            r[p] = MODULO_MODE;

            // POW_PRECISION {number} Integer, 0 to MAX inclusive.
            // 'config() POW_PRECISION not an integer: {v}'
            // 'config() POW_PRECISION out of range: {v}'
            if ( has( p = 'POW_PRECISION' ) && isValidInt( v, 0, MAX, 2, p ) ) {
                POW_PRECISION = v | 0;
            }
            r[p] = POW_PRECISION;

            // FORMAT {object}
            // 'config() FORMAT not an object: {v}'
            if ( has( p = 'FORMAT' ) ) {

                if ( typeof v == 'object' ) {
                    FORMAT = v;
                } else if (ERRORS) {
                    raise( 2, p + ' not an object', v );
                }
            }
            r[p] = FORMAT;

            return r;
        };


        /*
         * Return a new BigNumber whose value is the maximum of the arguments.
         *
         * arguments {number|string|BigNumber}
         */
        BigNumber.max = function () { return maxOrMin( arguments, P.lt ); };


        /*
         * Return a new BigNumber whose value is the minimum of the arguments.
         *
         * arguments {number|string|BigNumber}
         */
        BigNumber.min = function () { return maxOrMin( arguments, P.gt ); };


        /*
         * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
         * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
         * zeros are produced).
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         *
         * 'random() decimal places not an integer: {dp}'
         * 'random() decimal places out of range: {dp}'
         * 'random() crypto unavailable: {crypto}'
         */
        BigNumber.random = (function () {
            var pow2_53 = 0x20000000000000;

            // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
            // Check if Math.random() produces more than 32 bits of randomness.
            // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
            // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
            var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
              ? function () { return mathfloor( Math.random() * pow2_53 ); }
              : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
                  (Math.random() * 0x800000 | 0); };

            return function (dp) {
                var a, b, e, k, v,
                    i = 0,
                    c = [],
                    rand = new BigNumber(ONE);

                dp = dp == null || !isValidInt( dp, 0, MAX, 14 ) ? DECIMAL_PLACES : dp | 0;
                k = mathceil( dp / LOG_BASE );

                if (CRYPTO) {

                    // Browsers supporting crypto.getRandomValues.
                    if ( crypto && crypto.getRandomValues ) {

                        a = crypto.getRandomValues( new Uint32Array( k *= 2 ) );

                        for ( ; i < k; ) {

                            // 53 bits:
                            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
                            // 11111 11111111 11111111 11111111 11100000 00000000 00000000
                            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
                            //                                     11111 11111111 11111111
                            // 0x20000 is 2^21.
                            v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                            // Rejection sampling:
                            // 0 <= v < 9007199254740992
                            // Probability that v >= 9e15, is
                            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
                            if ( v >= 9e15 ) {
                                b = crypto.getRandomValues( new Uint32Array(2) );
                                a[i] = b[0];
                                a[i + 1] = b[1];
                            } else {

                                // 0 <= v <= 8999999999999999
                                // 0 <= (v % 1e14) <= 99999999999999
                                c.push( v % 1e14 );
                                i += 2;
                            }
                        }
                        i = k / 2;

                    // Node.js supporting crypto.randomBytes.
                    } else if ( crypto && crypto.randomBytes ) {

                        // buffer
                        a = crypto.randomBytes( k *= 7 );

                        for ( ; i < k; ) {

                            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
                            // 0x100000000 is 2^32, 0x1000000 is 2^24
                            // 11111 11111111 11111111 11111111 11111111 11111111 11111111
                            // 0 <= v < 9007199254740992
                            v = ( ( a[i] & 31 ) * 0x1000000000000 ) + ( a[i + 1] * 0x10000000000 ) +
                                  ( a[i + 2] * 0x100000000 ) + ( a[i + 3] * 0x1000000 ) +
                                  ( a[i + 4] << 16 ) + ( a[i + 5] << 8 ) + a[i + 6];

                            if ( v >= 9e15 ) {
                                crypto.randomBytes(7).copy( a, i );
                            } else {

                                // 0 <= (v % 1e14) <= 99999999999999
                                c.push( v % 1e14 );
                                i += 7;
                            }
                        }
                        i = k / 7;
                    } else if (ERRORS) {
                        raise( 14, 'crypto unavailable', crypto );
                    }
                }

                // Use Math.random: CRYPTO is false or crypto is unavailable and ERRORS is false.
                if (!i) {

                    for ( ; i < k; ) {
                        v = random53bitInt();
                        if ( v < 9e15 ) c[i++] = v % 1e14;
                    }
                }

                k = c[--i];
                dp %= LOG_BASE;

                // Convert trailing digits to zeros according to dp.
                if ( k && dp ) {
                    v = POWS_TEN[LOG_BASE - dp];
                    c[i] = mathfloor( k / v ) * v;
                }

                // Remove trailing elements which are zero.
                for ( ; c[i] === 0; c.pop(), i-- );

                // Zero?
                if ( i < 0 ) {
                    c = [ e = 0 ];
                } else {

                    // Remove leading elements which are zero and adjust exponent accordingly.
                    for ( e = -1 ; c[0] === 0; c.shift(), e -= LOG_BASE);

                    // Count the digits of the first element of c to determine leading zeros, and...
                    for ( i = 1, v = c[0]; v >= 10; v /= 10, i++);

                    // adjust the exponent accordingly.
                    if ( i < LOG_BASE ) e -= LOG_BASE - i;
                }

                rand.e = e;
                rand.c = c;
                return rand;
            };
        })();


        // PRIVATE FUNCTIONS


        // Convert a numeric string of baseIn to a numeric string of baseOut.
        function convertBase( str, baseOut, baseIn, sign ) {
            var d, e, k, r, x, xc, y,
                i = str.indexOf( '.' ),
                dp = DECIMAL_PLACES,
                rm = ROUNDING_MODE;

            if ( baseIn < 37 ) str = str.toLowerCase();

            // Non-integer.
            if ( i >= 0 ) {
                k = POW_PRECISION;

                // Unlimited precision.
                POW_PRECISION = 0;
                str = str.replace( '.', '' );
                y = new BigNumber(baseIn);
                x = y.pow( str.length - i );
                POW_PRECISION = k;

                // Convert str as if an integer, then restore the fraction part by dividing the
                // result by its base raised to a power.
                y.c = toBaseOut( toFixedPoint( coeffToString( x.c ), x.e ), 10, baseOut );
                y.e = y.c.length;
            }

            // Convert the number as integer.
            xc = toBaseOut( str, baseIn, baseOut );
            e = k = xc.length;

            // Remove trailing zeros.
            for ( ; xc[--k] == 0; xc.pop() );
            if ( !xc[0] ) return '0';

            if ( i < 0 ) {
                --e;
            } else {
                x.c = xc;
                x.e = e;

                // sign is needed for correct rounding.
                x.s = sign;
                x = div( x, y, dp, rm, baseOut );
                xc = x.c;
                r = x.r;
                e = x.e;
            }

            d = e + dp + 1;

            // The rounding digit, i.e. the digit to the right of the digit that may be rounded up.
            i = xc[d];
            k = baseOut / 2;
            r = r || d < 0 || xc[d + 1] != null;

            r = rm < 4 ? ( i != null || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )
                       : i > k || i == k &&( rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
                         rm == ( x.s < 0 ? 8 : 7 ) );

            if ( d < 1 || !xc[0] ) {

                // 1^-dp or 0.
                str = r ? toFixedPoint( '1', -dp ) : '0';
            } else {
                xc.length = d;

                if (r) {

                    // Rounding up may mean the previous digit has to be rounded up and so on.
                    for ( --baseOut; ++xc[--d] > baseOut; ) {
                        xc[d] = 0;

                        if ( !d ) {
                            ++e;
                            xc.unshift(1);
                        }
                    }
                }

                // Determine trailing zeros.
                for ( k = xc.length; !xc[--k]; );

                // E.g. [4, 11, 15] becomes 4bf.
                for ( i = 0, str = ''; i <= k; str += ALPHABET.charAt( xc[i++] ) );
                str = toFixedPoint( str, e );
            }

            // The caller will add the sign.
            return str;
        }


        // Perform division in the specified base. Called by div and convertBase.
        div = (function () {

            // Assume non-zero x and k.
            function multiply( x, k, base ) {
                var m, temp, xlo, xhi,
                    carry = 0,
                    i = x.length,
                    klo = k % SQRT_BASE,
                    khi = k / SQRT_BASE | 0;

                for ( x = x.slice(); i--; ) {
                    xlo = x[i] % SQRT_BASE;
                    xhi = x[i] / SQRT_BASE | 0;
                    m = khi * xlo + xhi * klo;
                    temp = klo * xlo + ( ( m % SQRT_BASE ) * SQRT_BASE ) + carry;
                    carry = ( temp / base | 0 ) + ( m / SQRT_BASE | 0 ) + khi * xhi;
                    x[i] = temp % base;
                }

                if (carry) x.unshift(carry);

                return x;
            }

            function compare( a, b, aL, bL ) {
                var i, cmp;

                if ( aL != bL ) {
                    cmp = aL > bL ? 1 : -1;
                } else {

                    for ( i = cmp = 0; i < aL; i++ ) {

                        if ( a[i] != b[i] ) {
                            cmp = a[i] > b[i] ? 1 : -1;
                            break;
                        }
                    }
                }
                return cmp;
            }

            function subtract( a, b, aL, base ) {
                var i = 0;

                // Subtract b from a.
                for ( ; aL--; ) {
                    a[aL] -= i;
                    i = a[aL] < b[aL] ? 1 : 0;
                    a[aL] = i * base + a[aL] - b[aL];
                }

                // Remove leading zeros.
                for ( ; !a[0] && a.length > 1; a.shift() );
            }

            // x: dividend, y: divisor.
            return function ( x, y, dp, rm, base ) {
                var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
                    yL, yz,
                    s = x.s == y.s ? 1 : -1,
                    xc = x.c,
                    yc = y.c;

                // Either NaN, Infinity or 0?
                if ( !xc || !xc[0] || !yc || !yc[0] ) {

                    return new BigNumber(

                      // Return NaN if either NaN, or both Infinity or 0.
                      !x.s || !y.s || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :

                        // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
                        xc && xc[0] == 0 || !yc ? s * 0 : s / 0
                    );
                }

                q = new BigNumber(s);
                qc = q.c = [];
                e = x.e - y.e;
                s = dp + e + 1;

                if ( !base ) {
                    base = BASE;
                    e = bitFloor( x.e / LOG_BASE ) - bitFloor( y.e / LOG_BASE );
                    s = s / LOG_BASE | 0;
                }

                // Result exponent may be one less then the current value of e.
                // The coefficients of the BigNumbers from convertBase may have trailing zeros.
                for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );
                if ( yc[i] > ( xc[i] || 0 ) ) e--;

                if ( s < 0 ) {
                    qc.push(1);
                    more = true;
                } else {
                    xL = xc.length;
                    yL = yc.length;
                    i = 0;
                    s += 2;

                    // Normalise xc and yc so highest order digit of yc is >= base / 2.

                    n = mathfloor( base / ( yc[0] + 1 ) );

                    // Not necessary, but to handle odd bases where yc[0] == ( base / 2 ) - 1.
                    // if ( n > 1 || n++ == 1 && yc[0] < base / 2 ) {
                    if ( n > 1 ) {
                        yc = multiply( yc, n, base );
                        xc = multiply( xc, n, base );
                        yL = yc.length;
                        xL = xc.length;
                    }

                    xi = yL;
                    rem = xc.slice( 0, yL );
                    remL = rem.length;

                    // Add zeros to make remainder as long as divisor.
                    for ( ; remL < yL; rem[remL++] = 0 );
                    yz = yc.slice();
                    yz.unshift(0);
                    yc0 = yc[0];
                    if ( yc[1] >= base / 2 ) yc0++;
                    // Not necessary, but to prevent trial digit n > base, when using base 3.
                    // else if ( base == 3 && yc0 == 1 ) yc0 = 1 + 1e-15;

                    do {
                        n = 0;

                        // Compare divisor and remainder.
                        cmp = compare( yc, rem, yL, remL );

                        // If divisor < remainder.
                        if ( cmp < 0 ) {

                            // Calculate trial digit, n.

                            rem0 = rem[0];
                            if ( yL != remL ) rem0 = rem0 * base + ( rem[1] || 0 );

                            // n is how many times the divisor goes into the current remainder.
                            n = mathfloor( rem0 / yc0 );

                            //  Algorithm:
                            //  1. product = divisor * trial digit (n)
                            //  2. if product > remainder: product -= divisor, n--
                            //  3. remainder -= product
                            //  4. if product was < remainder at 2:
                            //    5. compare new remainder and divisor
                            //    6. If remainder > divisor: remainder -= divisor, n++

                            if ( n > 1 ) {

                                // n may be > base only when base is 3.
                                if (n >= base) n = base - 1;

                                // product = divisor * trial digit.
                                prod = multiply( yc, n, base );
                                prodL = prod.length;
                                remL = rem.length;

                                // Compare product and remainder.
                                // If product > remainder.
                                // Trial digit n too high.
                                // n is 1 too high about 5% of the time, and is not known to have
                                // ever been more than 1 too high.
                                while ( compare( prod, rem, prodL, remL ) == 1 ) {
                                    n--;

                                    // Subtract divisor from product.
                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );
                                    prodL = prod.length;
                                    cmp = 1;
                                }
                            } else {

                                // n is 0 or 1, cmp is -1.
                                // If n is 0, there is no need to compare yc and rem again below,
                                // so change cmp to 1 to avoid it.
                                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                                if ( n == 0 ) {

                                    // divisor < remainder, so n must be at least 1.
                                    cmp = n = 1;
                                }

                                // product = divisor
                                prod = yc.slice();
                                prodL = prod.length;
                            }

                            if ( prodL < remL ) prod.unshift(0);

                            // Subtract product from remainder.
                            subtract( rem, prod, remL, base );
                            remL = rem.length;

                             // If product was < remainder.
                            if ( cmp == -1 ) {

                                // Compare divisor and new remainder.
                                // If divisor < new remainder, subtract divisor from remainder.
                                // Trial digit n too low.
                                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                                while ( compare( yc, rem, yL, remL ) < 1 ) {
                                    n++;

                                    // Subtract divisor from remainder.
                                    subtract( rem, yL < remL ? yz : yc, remL, base );
                                    remL = rem.length;
                                }
                            }
                        } else if ( cmp === 0 ) {
                            n++;
                            rem = [0];
                        } // else cmp === 1 and n will be 0

                        // Add the next digit, n, to the result array.
                        qc[i++] = n;

                        // Update the remainder.
                        if ( rem[0] ) {
                            rem[remL++] = xc[xi] || 0;
                        } else {
                            rem = [ xc[xi] ];
                            remL = 1;
                        }
                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );

                    more = rem[0] != null;

                    // Leading zero?
                    if ( !qc[0] ) qc.shift();
                }

                if ( base == BASE ) {

                    // To calculate q.e, first get the number of digits of qc[0].
                    for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );
                    round( q, dp + ( q.e = i + e * LOG_BASE - 1 ) + 1, rm, more );

                // Caller is convertBase.
                } else {
                    q.e = e;
                    q.r = +more;
                }

                return q;
            };
        })();


        /*
         * Return a string representing the value of BigNumber n in fixed-point or exponential
         * notation rounded to the specified decimal places or significant digits.
         *
         * n is a BigNumber.
         * i is the index of the last digit required (i.e. the digit that may be rounded up).
         * rm is the rounding mode.
         * caller is caller id: toExponential 19, toFixed 20, toFormat 21, toPrecision 24.
         */
        function format( n, i, rm, caller ) {
            var c0, e, ne, len, str;

            rm = rm != null && isValidInt( rm, 0, 8, caller, roundingMode )
              ? rm | 0 : ROUNDING_MODE;

            if ( !n.c ) return n.toString();
            c0 = n.c[0];
            ne = n.e;

            if ( i == null ) {
                str = coeffToString( n.c );
                str = caller == 19 || caller == 24 && ne <= TO_EXP_NEG
                  ? toExponential( str, ne )
                  : toFixedPoint( str, ne );
            } else {
                n = round( new BigNumber(n), i, rm );

                // n.e may have changed if the value was rounded up.
                e = n.e;

                str = coeffToString( n.c );
                len = str.length;

                // toPrecision returns exponential notation if the number of significant digits
                // specified is less than the number of digits necessary to represent the integer
                // part of the value in fixed-point notation.

                // Exponential notation.
                if ( caller == 19 || caller == 24 && ( i <= e || e <= TO_EXP_NEG ) ) {

                    // Append zeros?
                    for ( ; len < i; str += '0', len++ );
                    str = toExponential( str, e );

                // Fixed-point notation.
                } else {
                    i -= ne;
                    str = toFixedPoint( str, e );

                    // Append zeros?
                    if ( e + 1 > len ) {
                        if ( --i > 0 ) for ( str += '.'; i--; str += '0' );
                    } else {
                        i += e - len;
                        if ( i > 0 ) {
                            if ( e + 1 == len ) str += '.';
                            for ( ; i--; str += '0' );
                        }
                    }
                }
            }

            return n.s < 0 && c0 ? '-' + str : str;
        }


        // Handle BigNumber.max and BigNumber.min.
        function maxOrMin( args, method ) {
            var m, n,
                i = 0;

            if ( isArray( args[0] ) ) args = args[0];
            m = new BigNumber( args[0] );

            for ( ; ++i < args.length; ) {
                n = new BigNumber( args[i] );

                // If any number is NaN, return NaN.
                if ( !n.s ) {
                    m = n;
                    break;
                } else if ( method.call( m, n ) ) {
                    m = n;
                }
            }

            return m;
        }


        /*
         * Return true if n is an integer in range, otherwise throw.
         * Use for argument validation when ERRORS is true.
         */
        function intValidatorWithErrors( n, min, max, caller, name ) {
            if ( n < min || n > max || n != truncate(n) ) {
                raise( caller, ( name || 'decimal places' ) +
                  ( n < min || n > max ? ' out of range' : ' not an integer' ), n );
            }

            return true;
        }


        /*
         * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
         * Called by minus, plus and times.
         */
        function normalise( n, c, e ) {
            var i = 1,
                j = c.length;

             // Remove trailing zeros.
            for ( ; !c[--j]; c.pop() );

            // Calculate the base 10 exponent. First get the number of digits of c[0].
            for ( j = c[0]; j >= 10; j /= 10, i++ );

            // Overflow?
            if ( ( e = i + e * LOG_BASE - 1 ) > MAX_EXP ) {

                // Infinity.
                n.c = n.e = null;

            // Underflow?
            } else if ( e < MIN_EXP ) {

                // Zero.
                n.c = [ n.e = 0 ];
            } else {
                n.e = e;
                n.c = c;
            }

            return n;
        }


        // Handle values that fail the validity test in BigNumber.
        parseNumeric = (function () {
            var basePrefix = /^(-?)0([xbo])/i,
                dotAfter = /^([^.]+)\.$/,
                dotBefore = /^\.([^.]+)$/,
                isInfinityOrNaN = /^-?(Infinity|NaN)$/,
                whitespaceOrPlus = /^\s*\+|^\s+|\s+$/g;

            return function ( x, str, num, b ) {
                var base,
                    s = num ? str : str.replace( whitespaceOrPlus, '' );

                // No exception on ±Infinity or NaN.
                if ( isInfinityOrNaN.test(s) ) {
                    x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                } else {
                    if ( !num ) {

                        // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
                        s = s.replace( basePrefix, function ( m, p1, p2 ) {
                            base = ( p2 = p2.toLowerCase() ) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                            return !b || b == base ? p1 : m;
                        });

                        if (b) {
                            base = b;

                            // E.g. '1.' to '1', '.1' to '0.1'
                            s = s.replace( dotAfter, '$1' ).replace( dotBefore, '0.$1' );
                        }

                        if ( str != s ) return new BigNumber( s, base );
                    }

                    // 'new BigNumber() not a number: {n}'
                    // 'new BigNumber() not a base {b} number: {n}'
                    if (ERRORS) raise( id, 'not a' + ( b ? ' base ' + b : '' ) + ' number', str );
                    x.s = null;
                }

                x.c = x.e = null;
                id = 0;
            }
        })();


        // Throw a BigNumber Error.
        function raise( caller, msg, val ) {
            var error = new Error( [
                'new BigNumber',     // 0
                'cmp',               // 1
                'config',            // 2
                'div',               // 3
                'divToInt',          // 4
                'eq',                // 5
                'gt',                // 6
                'gte',               // 7
                'lt',                // 8
                'lte',               // 9
                'minus',             // 10
                'mod',               // 11
                'plus',              // 12
                'precision',         // 13
                'random',            // 14
                'round',             // 15
                'shift',             // 16
                'times',             // 17
                'toDigits',          // 18
                'toExponential',     // 19
                'toFixed',           // 20
                'toFormat',          // 21
                'toFraction',        // 22
                'pow',               // 23
                'toPrecision',       // 24
                'toString',          // 25
                'BigNumber'          // 26
            ][caller] + '() ' + msg + ': ' + val );

            error.name = 'BigNumber Error';
            id = 0;
            throw error;
        }


        /*
         * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
         * If r is truthy, it is known that there are more digits after the rounding digit.
         */
        function round( x, sd, rm, r ) {
            var d, i, j, k, n, ni, rd,
                xc = x.c,
                pows10 = POWS_TEN;

            // if x is not Infinity or NaN...
            if (xc) {

                // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
                // n is a base 1e14 number, the value of the element of array x.c containing rd.
                // ni is the index of n within x.c.
                // d is the number of digits of n.
                // i is the index of rd within n including leading zeros.
                // j is the actual index of rd within n (if < 0, rd is a leading zero).
                out: {

                    // Get the number of digits of the first element of xc.
                    for ( d = 1, k = xc[0]; k >= 10; k /= 10, d++ );
                    i = sd - d;

                    // If the rounding digit is in the first element of xc...
                    if ( i < 0 ) {
                        i += LOG_BASE;
                        j = sd;
                        n = xc[ ni = 0 ];

                        // Get the rounding digit at index j of n.
                        rd = n / pows10[ d - j - 1 ] % 10 | 0;
                    } else {
                        ni = mathceil( ( i + 1 ) / LOG_BASE );

                        if ( ni >= xc.length ) {

                            if (r) {

                                // Needed by sqrt.
                                for ( ; xc.length <= ni; xc.push(0) );
                                n = rd = 0;
                                d = 1;
                                i %= LOG_BASE;
                                j = i - LOG_BASE + 1;
                            } else {
                                break out;
                            }
                        } else {
                            n = k = xc[ni];

                            // Get the number of digits of n.
                            for ( d = 1; k >= 10; k /= 10, d++ );

                            // Get the index of rd within n.
                            i %= LOG_BASE;

                            // Get the index of rd within n, adjusted for leading zeros.
                            // The number of leading zeros of n is given by LOG_BASE - d.
                            j = i - LOG_BASE + d;

                            // Get the rounding digit at index j of n.
                            rd = j < 0 ? 0 : n / pows10[ d - j - 1 ] % 10 | 0;
                        }
                    }

                    r = r || sd < 0 ||

                    // Are there any non-zero digits after the rounding digit?
                    // The expression  n % pows10[ d - j - 1 ]  returns all digits of n to the right
                    // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
                      xc[ni + 1] != null || ( j < 0 ? n : n % pows10[ d - j - 1 ] );

                    r = rm < 4
                      ? ( rd || r ) && ( rm == 0 || rm == ( x.s < 0 ? 3 : 2 ) )
                      : rd > 5 || rd == 5 && ( rm == 4 || r || rm == 6 &&

                        // Check whether the digit to the left of the rounding digit is odd.
                        ( ( i > 0 ? j > 0 ? n / pows10[ d - j ] : 0 : xc[ni - 1] ) % 10 ) & 1 ||
                          rm == ( x.s < 0 ? 8 : 7 ) );

                    if ( sd < 1 || !xc[0] ) {
                        xc.length = 0;

                        if (r) {

                            // Convert sd to decimal places.
                            sd -= x.e + 1;

                            // 1, 0.1, 0.01, 0.001, 0.0001 etc.
                            xc[0] = pows10[ sd % LOG_BASE ];
                            x.e = -sd || 0;
                        } else {

                            // Zero.
                            xc[0] = x.e = 0;
                        }

                        return x;
                    }

                    // Remove excess digits.
                    if ( i == 0 ) {
                        xc.length = ni;
                        k = 1;
                        ni--;
                    } else {
                        xc.length = ni + 1;
                        k = pows10[ LOG_BASE - i ];

                        // E.g. 56700 becomes 56000 if 7 is the rounding digit.
                        // j > 0 means i > number of leading zeros of n.
                        xc[ni] = j > 0 ? mathfloor( n / pows10[ d - j ] % pows10[j] ) * k : 0;
                    }

                    // Round up?
                    if (r) {

                        for ( ; ; ) {

                            // If the digit to be rounded up is in the first element of xc...
                            if ( ni == 0 ) {

                                // i will be the length of xc[0] before k is added.
                                for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );
                                j = xc[0] += k;
                                for ( k = 1; j >= 10; j /= 10, k++ );

                                // if i != k the length has increased.
                                if ( i != k ) {
                                    x.e++;
                                    if ( xc[0] == BASE ) xc[0] = 1;
                                }

                                break;
                            } else {
                                xc[ni] += k;
                                if ( xc[ni] != BASE ) break;
                                xc[ni--] = 0;
                                k = 1;
                            }
                        }
                    }

                    // Remove trailing zeros.
                    for ( i = xc.length; xc[--i] === 0; xc.pop() );
                }

                // Overflow? Infinity.
                if ( x.e > MAX_EXP ) {
                    x.c = x.e = null;

                // Underflow? Zero.
                } else if ( x.e < MIN_EXP ) {
                    x.c = [ x.e = 0 ];
                }
            }

            return x;
        }


        // PROTOTYPE/INSTANCE METHODS


        /*
         * Return a new BigNumber whose value is the absolute value of this BigNumber.
         */
        P.absoluteValue = P.abs = function () {
            var x = new BigNumber(this);
            if ( x.s < 0 ) x.s = 1;
            return x;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole
         * number in the direction of Infinity.
         */
        P.ceil = function () {
            return round( new BigNumber(this), this.e + 1, 2 );
        };


        /*
         * Return
         * 1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
         * -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
         * 0 if they have the same value,
         * or null if the value of either is NaN.
         */
        P.comparedTo = P.cmp = function ( y, b ) {
            id = 1;
            return compare( this, new BigNumber( y, b ) );
        };


        /*
         * Return the number of decimal places of the value of this BigNumber, or null if the value
         * of this BigNumber is ±Infinity or NaN.
         */
        P.decimalPlaces = P.dp = function () {
            var n, v,
                c = this.c;

            if ( !c ) return null;
            n = ( ( v = c.length - 1 ) - bitFloor( this.e / LOG_BASE ) ) * LOG_BASE;

            // Subtract the number of trailing zeros of the last number.
            if ( v = c[v] ) for ( ; v % 10 == 0; v /= 10, n-- );
            if ( n < 0 ) n = 0;

            return n;
        };


        /*
         *  n / 0 = I
         *  n / N = N
         *  n / I = 0
         *  0 / n = 0
         *  0 / 0 = N
         *  0 / N = N
         *  0 / I = 0
         *  N / n = N
         *  N / 0 = N
         *  N / N = N
         *  N / I = N
         *  I / n = I
         *  I / 0 = I
         *  I / N = N
         *  I / I = N
         *
         * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
         * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
         */
        P.dividedBy = P.div = function ( y, b ) {
            id = 3;
            return div( this, new BigNumber( y, b ), DECIMAL_PLACES, ROUNDING_MODE );
        };


        /*
         * Return a new BigNumber whose value is the integer part of dividing the value of this
         * BigNumber by the value of BigNumber(y, b).
         */
        P.dividedToIntegerBy = P.divToInt = function ( y, b ) {
            id = 4;
            return div( this, new BigNumber( y, b ), 0, 1 );
        };


        /*
         * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.equals = P.eq = function ( y, b ) {
            id = 5;
            return compare( this, new BigNumber( y, b ) ) === 0;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a whole
         * number in the direction of -Infinity.
         */
        P.floor = function () {
            return round( new BigNumber(this), this.e + 1, 3 );
        };


        /*
         * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.greaterThan = P.gt = function ( y, b ) {
            id = 6;
            return compare( this, new BigNumber( y, b ) ) > 0;
        };


        /*
         * Return true if the value of this BigNumber is greater than or equal to the value of
         * BigNumber(y, b), otherwise returns false.
         */
        P.greaterThanOrEqualTo = P.gte = function ( y, b ) {
            id = 7;
            return ( b = compare( this, new BigNumber( y, b ) ) ) === 1 || b === 0;

        };


        /*
         * Return true if the value of this BigNumber is a finite number, otherwise returns false.
         */
        P.isFinite = function () {
            return !!this.c;
        };


        /*
         * Return true if the value of this BigNumber is an integer, otherwise return false.
         */
        P.isInteger = P.isInt = function () {
            return !!this.c && bitFloor( this.e / LOG_BASE ) > this.c.length - 2;
        };


        /*
         * Return true if the value of this BigNumber is NaN, otherwise returns false.
         */
        P.isNaN = function () {
            return !this.s;
        };


        /*
         * Return true if the value of this BigNumber is negative, otherwise returns false.
         */
        P.isNegative = P.isNeg = function () {
            return this.s < 0;
        };


        /*
         * Return true if the value of this BigNumber is 0 or -0, otherwise returns false.
         */
        P.isZero = function () {
            return !!this.c && this.c[0] == 0;
        };


        /*
         * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
         * otherwise returns false.
         */
        P.lessThan = P.lt = function ( y, b ) {
            id = 8;
            return compare( this, new BigNumber( y, b ) ) < 0;
        };


        /*
         * Return true if the value of this BigNumber is less than or equal to the value of
         * BigNumber(y, b), otherwise returns false.
         */
        P.lessThanOrEqualTo = P.lte = function ( y, b ) {
            id = 9;
            return ( b = compare( this, new BigNumber( y, b ) ) ) === -1 || b === 0;
        };


        /*
         *  n - 0 = n
         *  n - N = N
         *  n - I = -I
         *  0 - n = -n
         *  0 - 0 = 0
         *  0 - N = N
         *  0 - I = -I
         *  N - n = N
         *  N - 0 = N
         *  N - N = N
         *  N - I = N
         *  I - n = I
         *  I - 0 = I
         *  I - N = N
         *  I - I = N
         *
         * Return a new BigNumber whose value is the value of this BigNumber minus the value of
         * BigNumber(y, b).
         */
        P.minus = P.sub = function ( y, b ) {
            var i, j, t, xLTy,
                x = this,
                a = x.s;

            id = 10;
            y = new BigNumber( y, b );
            b = y.s;

            // Either NaN?
            if ( !a || !b ) return new BigNumber(NaN);

            // Signs differ?
            if ( a != b ) {
                y.s = -b;
                return x.plus(y);
            }

            var xe = x.e / LOG_BASE,
                ye = y.e / LOG_BASE,
                xc = x.c,
                yc = y.c;

            if ( !xe || !ye ) {

                // Either Infinity?
                if ( !xc || !yc ) return xc ? ( y.s = -b, y ) : new BigNumber( yc ? x : NaN );

                // Either zero?
                if ( !xc[0] || !yc[0] ) {

                    // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                    return yc[0] ? ( y.s = -b, y ) : new BigNumber( xc[0] ? x :

                      // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
                      ROUNDING_MODE == 3 ? -0 : 0 );
                }
            }

            xe = bitFloor(xe);
            ye = bitFloor(ye);
            xc = xc.slice();

            // Determine which is the bigger number.
            if ( a = xe - ye ) {

                if ( xLTy = a < 0 ) {
                    a = -a;
                    t = xc;
                } else {
                    ye = xe;
                    t = yc;
                }

                t.reverse();

                // Prepend zeros to equalise exponents.
                for ( b = a; b--; t.push(0) );
                t.reverse();
            } else {

                // Exponents equal. Check digit by digit.
                j = ( xLTy = ( a = xc.length ) < ( b = yc.length ) ) ? a : b;

                for ( a = b = 0; b < j; b++ ) {

                    if ( xc[b] != yc[b] ) {
                        xLTy = xc[b] < yc[b];
                        break;
                    }
                }
            }

            // x < y? Point xc to the array of the bigger number.
            if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;

            b = ( j = yc.length ) - ( i = xc.length );

            // Append zeros to xc if shorter.
            // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
            if ( b > 0 ) for ( ; b--; xc[i++] = 0 );
            b = BASE - 1;

            // Subtract yc from xc.
            for ( ; j > a; ) {

                if ( xc[--j] < yc[j] ) {
                    for ( i = j; i && !xc[--i]; xc[i] = b );
                    --xc[i];
                    xc[j] += BASE;
                }

                xc[j] -= yc[j];
            }

            // Remove leading zeros and adjust exponent accordingly.
            for ( ; xc[0] == 0; xc.shift(), --ye );

            // Zero?
            if ( !xc[0] ) {

                // Following IEEE 754 (2008) 6.3,
                // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
                y.s = ROUNDING_MODE == 3 ? -1 : 1;
                y.c = [ y.e = 0 ];
                return y;
            }

            // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
            // for finite x and y.
            return normalise( y, xc, ye );
        };


        /*
         *   n % 0 =  N
         *   n % N =  N
         *   n % I =  n
         *   0 % n =  0
         *  -0 % n = -0
         *   0 % 0 =  N
         *   0 % N =  N
         *   0 % I =  0
         *   N % n =  N
         *   N % 0 =  N
         *   N % N =  N
         *   N % I =  N
         *   I % n =  N
         *   I % 0 =  N
         *   I % N =  N
         *   I % I =  N
         *
         * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
         * BigNumber(y, b). The result depends on the value of MODULO_MODE.
         */
        P.modulo = P.mod = function ( y, b ) {
            var q, s,
                x = this;

            id = 11;
            y = new BigNumber( y, b );

            // Return NaN if x is Infinity or NaN, or y is NaN or zero.
            if ( !x.c || !y.s || y.c && !y.c[0] ) {
                return new BigNumber(NaN);

            // Return x if y is Infinity or x is zero.
            } else if ( !y.c || x.c && !x.c[0] ) {
                return new BigNumber(x);
            }

            if ( MODULO_MODE == 9 ) {

                // Euclidian division: q = sign(y) * floor(x / abs(y))
                // r = x - qy    where  0 <= r < abs(y)
                s = y.s;
                y.s = 1;
                q = div( x, y, 0, 3 );
                y.s = s;
                q.s *= s;
            } else {
                q = div( x, y, 0, MODULO_MODE );
            }

            return x.minus( q.times(y) );
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber negated,
         * i.e. multiplied by -1.
         */
        P.negated = P.neg = function () {
            var x = new BigNumber(this);
            x.s = -x.s || null;
            return x;
        };


        /*
         *  n + 0 = n
         *  n + N = N
         *  n + I = I
         *  0 + n = n
         *  0 + 0 = 0
         *  0 + N = N
         *  0 + I = I
         *  N + n = N
         *  N + 0 = N
         *  N + N = N
         *  N + I = N
         *  I + n = I
         *  I + 0 = I
         *  I + N = N
         *  I + I = I
         *
         * Return a new BigNumber whose value is the value of this BigNumber plus the value of
         * BigNumber(y, b).
         */
        P.plus = P.add = function ( y, b ) {
            var t,
                x = this,
                a = x.s;

            id = 12;
            y = new BigNumber( y, b );
            b = y.s;

            // Either NaN?
            if ( !a || !b ) return new BigNumber(NaN);

            // Signs differ?
             if ( a != b ) {
                y.s = -b;
                return x.minus(y);
            }

            var xe = x.e / LOG_BASE,
                ye = y.e / LOG_BASE,
                xc = x.c,
                yc = y.c;

            if ( !xe || !ye ) {

                // Return ±Infinity if either ±Infinity.
                if ( !xc || !yc ) return new BigNumber( a / 0 );

                // Either zero?
                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
                if ( !xc[0] || !yc[0] ) return yc[0] ? y : new BigNumber( xc[0] ? x : a * 0 );
            }

            xe = bitFloor(xe);
            ye = bitFloor(ye);
            xc = xc.slice();

            // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
            if ( a = xe - ye ) {
                if ( a > 0 ) {
                    ye = xe;
                    t = yc;
                } else {
                    a = -a;
                    t = xc;
                }

                t.reverse();
                for ( ; a--; t.push(0) );
                t.reverse();
            }

            a = xc.length;
            b = yc.length;

            // Point xc to the longer array, and b to the shorter length.
            if ( a - b < 0 ) t = yc, yc = xc, xc = t, b = a;

            // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
            for ( a = 0; b; ) {
                a = ( xc[--b] = xc[b] + yc[b] + a ) / BASE | 0;
                xc[b] %= BASE;
            }

            if (a) {
                xc.unshift(a);
                ++ye;
            }

            // No need to check for zero, as +x + +y != 0 && -x + -y != 0
            // ye = MAX_EXP + 1 possible
            return normalise( y, xc, ye );
        };


        /*
         * Return the number of significant digits of the value of this BigNumber.
         *
         * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.
         */
        P.precision = P.sd = function (z) {
            var n, v,
                x = this,
                c = x.c;

            // 'precision() argument not a boolean or binary digit: {z}'
            if ( z != null && z !== !!z && z !== 1 && z !== 0 ) {
                if (ERRORS) raise( 13, 'argument' + notBool, z );
                if ( z != !!z ) z = null;
            }

            if ( !c ) return null;
            v = c.length - 1;
            n = v * LOG_BASE + 1;

            if ( v = c[v] ) {

                // Subtract the number of trailing zeros of the last element.
                for ( ; v % 10 == 0; v /= 10, n-- );

                // Add the number of digits of the first element.
                for ( v = c[0]; v >= 10; v /= 10, n++ );
            }

            if ( z && x.e + 1 > n ) n = x.e + 1;

            return n;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of
         * dp decimal places using rounding mode rm, or to 0 and ROUNDING_MODE respectively if
         * omitted.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'round() decimal places out of range: {dp}'
         * 'round() decimal places not an integer: {dp}'
         * 'round() rounding mode not an integer: {rm}'
         * 'round() rounding mode out of range: {rm}'
         */
        P.round = function ( dp, rm ) {
            var n = new BigNumber(this);

            if ( dp == null || isValidInt( dp, 0, MAX, 15 ) ) {
                round( n, ~~dp + this.e + 1, rm == null ||
                  !isValidInt( rm, 0, 8, 15, roundingMode ) ? ROUNDING_MODE : rm | 0 );
            }

            return n;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
         * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
         *
         * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
         *
         * If k is out of range and ERRORS is false, the result will be ±0 if k < 0, or ±Infinity
         * otherwise.
         *
         * 'shift() argument not an integer: {k}'
         * 'shift() argument out of range: {k}'
         */
        P.shift = function (k) {
            var n = this;
            return isValidInt( k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 16, 'argument' )

              // k < 1e+21, or truncate(k) will produce exponential notation.
              ? n.times( '1e' + truncate(k) )
              : new BigNumber( n.c && n.c[0] && ( k < -MAX_SAFE_INTEGER || k > MAX_SAFE_INTEGER )
                ? n.s * ( k < 0 ? 0 : 1 / 0 )
                : n );
        };


        /*
         *  sqrt(-n) =  N
         *  sqrt( N) =  N
         *  sqrt(-I) =  N
         *  sqrt( I) =  I
         *  sqrt( 0) =  0
         *  sqrt(-0) = -0
         *
         * Return a new BigNumber whose value is the square root of the value of this BigNumber,
         * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
         */
        P.squareRoot = P.sqrt = function () {
            var m, n, r, rep, t,
                x = this,
                c = x.c,
                s = x.s,
                e = x.e,
                dp = DECIMAL_PLACES + 4,
                half = new BigNumber('0.5');

            // Negative/NaN/Infinity/zero?
            if ( s !== 1 || !c || !c[0] ) {
                return new BigNumber( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );
            }

            // Initial estimate.
            s = Math.sqrt( +x );

            // Math.sqrt underflow/overflow?
            // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
            if ( s == 0 || s == 1 / 0 ) {
                n = coeffToString(c);
                if ( ( n.length + e ) % 2 == 0 ) n += '0';
                s = Math.sqrt(n);
                e = bitFloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );

                if ( s == 1 / 0 ) {
                    n = '1e' + e;
                } else {
                    n = s.toExponential();
                    n = n.slice( 0, n.indexOf('e') + 1 ) + e;
                }

                r = new BigNumber(n);
            } else {
                r = new BigNumber( s + '' );
            }

            // Check for zero.
            // r could be zero if MIN_EXP is changed after the this value was created.
            // This would cause a division by zero (x/t) and hence Infinity below, which would cause
            // coeffToString to throw.
            if ( r.c[0] ) {
                e = r.e;
                s = e + dp;
                if ( s < 3 ) s = 0;

                // Newton-Raphson iteration.
                for ( ; ; ) {
                    t = r;
                    r = half.times( t.plus( div( x, t, dp, 1 ) ) );

                    if ( coeffToString( t.c   ).slice( 0, s ) === ( n =
                         coeffToString( r.c ) ).slice( 0, s ) ) {

                        // The exponent of r may here be one less than the final result exponent,
                        // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
                        // are indexed correctly.
                        if ( r.e < e ) --s;
                        n = n.slice( s - 3, s + 1 );

                        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
                        // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
                        // iteration.
                        if ( n == '9999' || !rep && n == '4999' ) {

                            // On the first iteration only, check to see if rounding up gives the
                            // exact result as the nines may infinitely repeat.
                            if ( !rep ) {
                                round( t, t.e + DECIMAL_PLACES + 2, 0 );

                                if ( t.times(t).eq(x) ) {
                                    r = t;
                                    break;
                                }
                            }

                            dp += 4;
                            s += 4;
                            rep = 1;
                        } else {

                            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
                            // result. If not, then there are further digits and m will be truthy.
                            if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {

                                // Truncate to the first rounding digit.
                                round( r, r.e + DECIMAL_PLACES + 2, 1 );
                                m = !r.times(r).eq(x);
                            }

                            break;
                        }
                    }
                }
            }

            return round( r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m );
        };


        /*
         *  n * 0 = 0
         *  n * N = N
         *  n * I = I
         *  0 * n = 0
         *  0 * 0 = 0
         *  0 * N = N
         *  0 * I = N
         *  N * n = N
         *  N * 0 = N
         *  N * N = N
         *  N * I = N
         *  I * n = I
         *  I * 0 = N
         *  I * N = N
         *  I * I = I
         *
         * Return a new BigNumber whose value is the value of this BigNumber times the value of
         * BigNumber(y, b).
         */
        P.times = P.mul = function ( y, b ) {
            var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
                base, sqrtBase,
                x = this,
                xc = x.c,
                yc = ( id = 17, y = new BigNumber( y, b ) ).c;

            // Either NaN, ±Infinity or ±0?
            if ( !xc || !yc || !xc[0] || !yc[0] ) {

                // Return NaN if either is NaN, or one is 0 and the other is Infinity.
                if ( !x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc ) {
                    y.c = y.e = y.s = null;
                } else {
                    y.s *= x.s;

                    // Return ±Infinity if either is ±Infinity.
                    if ( !xc || !yc ) {
                        y.c = y.e = null;

                    // Return ±0 if either is ±0.
                    } else {
                        y.c = [0];
                        y.e = 0;
                    }
                }

                return y;
            }

            e = bitFloor( x.e / LOG_BASE ) + bitFloor( y.e / LOG_BASE );
            y.s *= x.s;
            xcL = xc.length;
            ycL = yc.length;

            // Ensure xc points to longer array and xcL to its length.
            if ( xcL < ycL ) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

            // Initialise the result array with zeros.
            for ( i = xcL + ycL, zc = []; i--; zc.push(0) );

            base = BASE;
            sqrtBase = SQRT_BASE;

            for ( i = ycL; --i >= 0; ) {
                c = 0;
                ylo = yc[i] % sqrtBase;
                yhi = yc[i] / sqrtBase | 0;

                for ( k = xcL, j = i + k; j > i; ) {
                    xlo = xc[--k] % sqrtBase;
                    xhi = xc[k] / sqrtBase | 0;
                    m = yhi * xlo + xhi * ylo;
                    xlo = ylo * xlo + ( ( m % sqrtBase ) * sqrtBase ) + zc[j] + c;
                    c = ( xlo / base | 0 ) + ( m / sqrtBase | 0 ) + yhi * xhi;
                    zc[j--] = xlo % base;
                }

                zc[j] = c;
            }

            if (c) {
                ++e;
            } else {
                zc.shift();
            }

            return normalise( y, zc, e );
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber rounded to a maximum of
         * sd significant digits using rounding mode rm, or ROUNDING_MODE if rm is omitted.
         *
         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toDigits() precision out of range: {sd}'
         * 'toDigits() precision not an integer: {sd}'
         * 'toDigits() rounding mode not an integer: {rm}'
         * 'toDigits() rounding mode out of range: {rm}'
         */
        P.toDigits = function ( sd, rm ) {
            var n = new BigNumber(this);
            sd = sd == null || !isValidInt( sd, 1, MAX, 18, 'precision' ) ? null : sd | 0;
            rm = rm == null || !isValidInt( rm, 0, 8, 18, roundingMode ) ? ROUNDING_MODE : rm | 0;
            return sd ? round( n, sd, rm ) : n;
        };


        /*
         * Return a string representing the value of this BigNumber in exponential notation and
         * rounded using ROUNDING_MODE to dp fixed decimal places.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toExponential() decimal places not an integer: {dp}'
         * 'toExponential() decimal places out of range: {dp}'
         * 'toExponential() rounding mode not an integer: {rm}'
         * 'toExponential() rounding mode out of range: {rm}'
         */
        P.toExponential = function ( dp, rm ) {
            return format( this,
              dp != null && isValidInt( dp, 0, MAX, 19 ) ? ~~dp + 1 : null, rm, 19 );
        };


        /*
         * Return a string representing the value of this BigNumber in fixed-point notation rounding
         * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
         *
         * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
         * but e.g. (-0.00001).toFixed(0) is '-0'.
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toFixed() decimal places not an integer: {dp}'
         * 'toFixed() decimal places out of range: {dp}'
         * 'toFixed() rounding mode not an integer: {rm}'
         * 'toFixed() rounding mode out of range: {rm}'
         */
        P.toFixed = function ( dp, rm ) {
            return format( this, dp != null && isValidInt( dp, 0, MAX, 20 )
              ? ~~dp + this.e + 1 : null, rm, 20 );
        };


        /*
         * Return a string representing the value of this BigNumber in fixed-point notation rounded
         * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
         * of the FORMAT object (see BigNumber.config).
         *
         * FORMAT = {
         *      decimalSeparator : '.',
         *      groupSeparator : ',',
         *      groupSize : 3,
         *      secondaryGroupSize : 0,
         *      fractionGroupSeparator : '\xA0',    // non-breaking space
         *      fractionGroupSize : 0
         * };
         *
         * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toFormat() decimal places not an integer: {dp}'
         * 'toFormat() decimal places out of range: {dp}'
         * 'toFormat() rounding mode not an integer: {rm}'
         * 'toFormat() rounding mode out of range: {rm}'
         */
        P.toFormat = function ( dp, rm ) {
            var str = format( this, dp != null && isValidInt( dp, 0, MAX, 21 )
              ? ~~dp + this.e + 1 : null, rm, 21 );

            if ( this.c ) {
                var i,
                    arr = str.split('.'),
                    g1 = +FORMAT.groupSize,
                    g2 = +FORMAT.secondaryGroupSize,
                    groupSeparator = FORMAT.groupSeparator,
                    intPart = arr[0],
                    fractionPart = arr[1],
                    isNeg = this.s < 0,
                    intDigits = isNeg ? intPart.slice(1) : intPart,
                    len = intDigits.length;

                if (g2) i = g1, g1 = g2, g2 = i, len -= i;

                if ( g1 > 0 && len > 0 ) {
                    i = len % g1 || g1;
                    intPart = intDigits.substr( 0, i );

                    for ( ; i < len; i += g1 ) {
                        intPart += groupSeparator + intDigits.substr( i, g1 );
                    }

                    if ( g2 > 0 ) intPart += groupSeparator + intDigits.slice(i);
                    if (isNeg) intPart = '-' + intPart;
                }

                str = fractionPart
                  ? intPart + FORMAT.decimalSeparator + ( ( g2 = +FORMAT.fractionGroupSize )
                    ? fractionPart.replace( new RegExp( '\\d{' + g2 + '}\\B', 'g' ),
                      '$&' + FORMAT.fractionGroupSeparator )
                    : fractionPart )
                  : intPart;
            }

            return str;
        };


        /*
         * Return a string array representing the value of this BigNumber as a simple fraction with
         * an integer numerator and an integer denominator. The denominator will be a positive
         * non-zero value less than or equal to the specified maximum denominator. If a maximum
         * denominator is not specified, the denominator will be the lowest value necessary to
         * represent the number exactly.
         *
         * [md] {number|string|BigNumber} Integer >= 1 and < Infinity. The maximum denominator.
         *
         * 'toFraction() max denominator not an integer: {md}'
         * 'toFraction() max denominator out of range: {md}'
         */
        P.toFraction = function (md) {
            var arr, d0, d2, e, exp, n, n0, q, s,
                k = ERRORS,
                x = this,
                xc = x.c,
                d = new BigNumber(ONE),
                n1 = d0 = new BigNumber(ONE),
                d1 = n0 = new BigNumber(ONE);

            if ( md != null ) {
                ERRORS = false;
                n = new BigNumber(md);
                ERRORS = k;

                if ( !( k = n.isInt() ) || n.lt(ONE) ) {

                    if (ERRORS) {
                        raise( 22,
                          'max denominator ' + ( k ? 'out of range' : 'not an integer' ), md );
                    }

                    // ERRORS is false:
                    // If md is a finite non-integer >= 1, round it to an integer and use it.
                    md = !k && n.c && round( n, n.e + 1, 1 ).gte(ONE) ? n : null;
                }
            }

            if ( !xc ) return x.toString();
            s = coeffToString(xc);

            // Determine initial denominator.
            // d is a power of 10 and the minimum max denominator that specifies the value exactly.
            e = d.e = s.length - x.e - 1;
            d.c[0] = POWS_TEN[ ( exp = e % LOG_BASE ) < 0 ? LOG_BASE + exp : exp ];
            md = !md || n.cmp(d) > 0 ? ( e > 0 ? d : n1 ) : n;

            exp = MAX_EXP;
            MAX_EXP = 1 / 0;
            n = new BigNumber(s);

            // n0 = d1 = 0
            n0.c[0] = 0;

            for ( ; ; )  {
                q = div( n, d, 0, 1 );
                d2 = d0.plus( q.times(d1) );
                if ( d2.cmp(md) == 1 ) break;
                d0 = d1;
                d1 = d2;
                n1 = n0.plus( q.times( d2 = n1 ) );
                n0 = d2;
                d = n.minus( q.times( d2 = d ) );
                n = d2;
            }

            d2 = div( md.minus(d0), d1, 0, 1 );
            n0 = n0.plus( d2.times(n1) );
            d0 = d0.plus( d2.times(d1) );
            n0.s = n1.s = x.s;
            e *= 2;

            // Determine which fraction is closer to x, n0/d0 or n1/d1
            arr = div( n1, d1, e, ROUNDING_MODE ).minus(x).abs().cmp(
                  div( n0, d0, e, ROUNDING_MODE ).minus(x).abs() ) < 1
                    ? [ n1.toString(), d1.toString() ]
                    : [ n0.toString(), d0.toString() ];

            MAX_EXP = exp;
            return arr;
        };


        /*
         * Return the value of this BigNumber converted to a number primitive.
         */
        P.toNumber = function () {
            var x = this;

            // Ensure zero has correct sign.
            return +x || ( x.s ? x.s * 0 : NaN );
        };


        /*
         * Return a BigNumber whose value is the value of this BigNumber raised to the power n.
         * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
         * If POW_PRECISION is not 0, round to POW_PRECISION using ROUNDING_MODE.
         *
         * n {number} Integer, -9007199254740992 to 9007199254740992 inclusive.
         * (Performs 54 loop iterations for n of 9007199254740992.)
         *
         * 'pow() exponent not an integer: {n}'
         * 'pow() exponent out of range: {n}'
         */
        P.toPower = P.pow = function (n) {
            var k, y,
                i = mathfloor( n < 0 ? -n : +n ),
                x = this;

            // Pass ±Infinity to Math.pow if exponent is out of range.
            if ( !isValidInt( n, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER, 23, 'exponent' ) &&
              ( !isFinite(n) || i > MAX_SAFE_INTEGER && ( n /= 0 ) ||
                parseFloat(n) != n && !( n = NaN ) ) ) {
                return new BigNumber( Math.pow( +x, n ) );
            }

            // Truncating each coefficient array to a length of k after each multiplication equates
            // to truncating significant digits to POW_PRECISION + [28, 41], i.e. there will be a
            // minimum of 28 guard digits retained. (Using + 1.5 would give [9, 21] guard digits.)
            k = POW_PRECISION ? mathceil( POW_PRECISION / LOG_BASE + 2 ) : 0;
            y = new BigNumber(ONE);

            for ( ; ; ) {

                if ( i % 2 ) {
                    y = y.times(x);
                    if ( !y.c ) break;
                    if ( k && y.c.length > k ) y.c.length = k;
                }

                i = mathfloor( i / 2 );
                if ( !i ) break;

                x = x.times(x);
                if ( k && x.c && x.c.length > k ) x.c.length = k;
            }

            if ( n < 0 ) y = ONE.div(y);
            return k ? round( y, POW_PRECISION, ROUNDING_MODE ) : y;
        };


        /*
         * Return a string representing the value of this BigNumber rounded to sd significant digits
         * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
         * necessary to represent the integer part of the value in fixed-point notation, then use
         * exponential notation.
         *
         * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
         * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
         *
         * 'toPrecision() precision not an integer: {sd}'
         * 'toPrecision() precision out of range: {sd}'
         * 'toPrecision() rounding mode not an integer: {rm}'
         * 'toPrecision() rounding mode out of range: {rm}'
         */
        P.toPrecision = function ( sd, rm ) {
            return format( this, sd != null && isValidInt( sd, 1, MAX, 24, 'precision' )
              ? sd | 0 : null, rm, 24 );
        };


        /*
         * Return a string representing the value of this BigNumber in base b, or base 10 if b is
         * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
         * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
         * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
         * TO_EXP_NEG, return exponential notation.
         *
         * [b] {number} Integer, 2 to 64 inclusive.
         *
         * 'toString() base not an integer: {b}'
         * 'toString() base out of range: {b}'
         */
        P.toString = function (b) {
            var str,
                n = this,
                s = n.s,
                e = n.e;

            // Infinity or NaN?
            if ( e === null ) {

                if (s) {
                    str = 'Infinity';
                    if ( s < 0 ) str = '-' + str;
                } else {
                    str = 'NaN';
                }
            } else {
                str = coeffToString( n.c );

                if ( b == null || !isValidInt( b, 2, 64, 25, 'base' ) ) {
                    str = e <= TO_EXP_NEG || e >= TO_EXP_POS
                      ? toExponential( str, e )
                      : toFixedPoint( str, e );
                } else {
                    str = convertBase( toFixedPoint( str, e ), b | 0, 10, s );
                }

                if ( s < 0 && n.c[0] ) str = '-' + str;
            }

            return str;
        };


        /*
         * Return a new BigNumber whose value is the value of this BigNumber truncated to a whole
         * number.
         */
        P.truncated = P.trunc = function () {
            return round( new BigNumber(this), this.e + 1, 1 );
        };



        /*
         * Return as toString, but do not accept a base argument.
         */
        P.valueOf = P.toJSON = function () {
            return this.toString();
        };


        // Aliases for BigDecimal methods.
        //P.add = P.plus;         // P.add included above
        //P.subtract = P.minus;   // P.sub included above
        //P.multiply = P.times;   // P.mul included above
        //P.divide = P.div;
        //P.remainder = P.mod;
        //P.compareTo = P.cmp;
        //P.negate = P.neg;


        if ( configObj != null ) BigNumber.config(configObj);

        return BigNumber;
    }


    // PRIVATE HELPER FUNCTIONS


    function bitFloor(n) {
        var i = n | 0;
        return n > 0 || n === i ? i : i - 1;
    }


    // Return a coefficient array as a string of base 10 digits.
    function coeffToString(a) {
        var s, z,
            i = 1,
            j = a.length,
            r = a[0] + '';

        for ( ; i < j; ) {
            s = a[i++] + '';
            z = LOG_BASE - s.length;
            for ( ; z--; s = '0' + s );
            r += s;
        }

        // Determine trailing zeros.
        for ( j = r.length; r.charCodeAt(--j) === 48; );
        return r.slice( 0, j + 1 || 1 );
    }


    // Compare the value of BigNumbers x and y.
    function compare( x, y ) {
        var a, b,
            xc = x.c,
            yc = y.c,
            i = x.s,
            j = y.s,
            k = x.e,
            l = y.e;

        // Either NaN?
        if ( !i || !j ) return null;

        a = xc && !xc[0];
        b = yc && !yc[0];

        // Either zero?
        if ( a || b ) return a ? b ? 0 : -j : i;

        // Signs differ?
        if ( i != j ) return i;

        a = i < 0;
        b = k == l;

        // Either Infinity?
        if ( !xc || !yc ) return b ? 0 : !xc ^ a ? 1 : -1;

        // Compare exponents.
        if ( !b ) return k > l ^ a ? 1 : -1;

        j = ( k = xc.length ) < ( l = yc.length ) ? k : l;

        // Compare digit by digit.
        for ( i = 0; i < j; i++ ) if ( xc[i] != yc[i] ) return xc[i] > yc[i] ^ a ? 1 : -1;

        // Compare lengths.
        return k == l ? 0 : k > l ^ a ? 1 : -1;
    }


    /*
     * Return true if n is a valid number in range, otherwise false.
     * Use for argument validation when ERRORS is false.
     * Note: parseInt('1e+1') == 1 but parseFloat('1e+1') == 10.
     */
    function intValidatorNoErrors( n, min, max ) {
        return ( n = truncate(n) ) >= min && n <= max;
    }


    function isArray(obj) {
        return Object.prototype.toString.call(obj) == '[object Array]';
    }


    /*
     * Convert string of baseIn to an array of numbers of baseOut.
     * Eg. convertBase('255', 10, 16) returns [15, 15].
     * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].
     */
    function toBaseOut( str, baseIn, baseOut ) {
        var j,
            arr = [0],
            arrL,
            i = 0,
            len = str.length;

        for ( ; i < len; ) {
            for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );
            arr[ j = 0 ] += ALPHABET.indexOf( str.charAt( i++ ) );

            for ( ; j < arr.length; j++ ) {

                if ( arr[j] > baseOut - 1 ) {
                    if ( arr[j + 1] == null ) arr[j + 1] = 0;
                    arr[j + 1] += arr[j] / baseOut | 0;
                    arr[j] %= baseOut;
                }
            }
        }

        return arr.reverse();
    }


    function toExponential( str, e ) {
        return ( str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str ) +
          ( e < 0 ? 'e' : 'e+' ) + e;
    }


    function toFixedPoint( str, e ) {
        var len, z;

        // Negative exponent?
        if ( e < 0 ) {

            // Prepend zeros.
            for ( z = '0.'; ++e; z += '0' );
            str = z + str;

        // Positive exponent
        } else {
            len = str.length;

            // Append zeros.
            if ( ++e > len ) {
                for ( z = '0', e -= len; --e; z += '0' );
                str += z;
            } else if ( e < len ) {
                str = str.slice( 0, e ) + '.' + str.slice(e);
            }
        }

        return str;
    }


    function truncate(n) {
        n = parseFloat(n);
        return n < 0 ? mathceil(n) : mathfloor(n);
    }


    // EXPORT


    BigNumber = another();

    // AMD.
    if ( true ) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () { return BigNumber; }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

    // Node and other environments that support module.exports.
    } else {}
})(this);


/***/ }),

/***/ "./node_modules/crypto-js/aes.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/aes.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Lookup tables
	    var SBOX = [];
	    var INV_SBOX = [];
	    var SUB_MIX_0 = [];
	    var SUB_MIX_1 = [];
	    var SUB_MIX_2 = [];
	    var SUB_MIX_3 = [];
	    var INV_SUB_MIX_0 = [];
	    var INV_SUB_MIX_1 = [];
	    var INV_SUB_MIX_2 = [];
	    var INV_SUB_MIX_3 = [];

	    // Compute lookup tables
	    (function () {
	        // Compute double table
	        var d = [];
	        for (var i = 0; i < 256; i++) {
	            if (i < 128) {
	                d[i] = i << 1;
	            } else {
	                d[i] = (i << 1) ^ 0x11b;
	            }
	        }

	        // Walk GF(2^8)
	        var x = 0;
	        var xi = 0;
	        for (var i = 0; i < 256; i++) {
	            // Compute sbox
	            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);
	            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;
	            SBOX[x] = sx;
	            INV_SBOX[sx] = x;

	            // Compute multiplication
	            var x2 = d[x];
	            var x4 = d[x2];
	            var x8 = d[x4];

	            // Compute sub bytes, mix columns tables
	            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);
	            SUB_MIX_0[x] = (t << 24) | (t >>> 8);
	            SUB_MIX_1[x] = (t << 16) | (t >>> 16);
	            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);
	            SUB_MIX_3[x] = t;

	            // Compute inv sub bytes, inv mix columns tables
	            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);
	            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);
	            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);
	            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);
	            INV_SUB_MIX_3[sx] = t;

	            // Compute next counter
	            if (!x) {
	                x = xi = 1;
	            } else {
	                x = x2 ^ d[d[d[x8 ^ x2]]];
	                xi ^= d[d[xi]];
	            }
	        }
	    }());

	    // Precomputed Rcon lookup
	    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

	    /**
	     * AES block cipher algorithm.
	     */
	    var AES = C_algo.AES = BlockCipher.extend({
	        _doReset: function () {
	            // Skip reset of nRounds has been set before and key did not change
	            if (this._nRounds && this._keyPriorReset === this._key) {
	                return;
	            }

	            // Shortcuts
	            var key = this._keyPriorReset = this._key;
	            var keyWords = key.words;
	            var keySize = key.sigBytes / 4;

	            // Compute number of rounds
	            var nRounds = this._nRounds = keySize + 6;

	            // Compute number of key schedule rows
	            var ksRows = (nRounds + 1) * 4;

	            // Compute key schedule
	            var keySchedule = this._keySchedule = [];
	            for (var ksRow = 0; ksRow < ksRows; ksRow++) {
	                if (ksRow < keySize) {
	                    keySchedule[ksRow] = keyWords[ksRow];
	                } else {
	                    var t = keySchedule[ksRow - 1];

	                    if (!(ksRow % keySize)) {
	                        // Rot word
	                        t = (t << 8) | (t >>> 24);

	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];

	                        // Mix Rcon
	                        t ^= RCON[(ksRow / keySize) | 0] << 24;
	                    } else if (keySize > 6 && ksRow % keySize == 4) {
	                        // Sub word
	                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];
	                    }

	                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
	                }
	            }

	            // Compute inv key schedule
	            var invKeySchedule = this._invKeySchedule = [];
	            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {
	                var ksRow = ksRows - invKsRow;

	                if (invKsRow % 4) {
	                    var t = keySchedule[ksRow];
	                } else {
	                    var t = keySchedule[ksRow - 4];
	                }

	                if (invKsRow < 4 || ksRow <= 4) {
	                    invKeySchedule[invKsRow] = t;
	                } else {
	                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^
	                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];
	                }
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);
	        },

	        decryptBlock: function (M, offset) {
	            // Swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;

	            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

	            // Inv swap 2nd and 4th rows
	            var t = M[offset + 1];
	            M[offset + 1] = M[offset + 3];
	            M[offset + 3] = t;
	        },

	        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
	            // Shortcut
	            var nRounds = this._nRounds;

	            // Get input, add round key
	            var s0 = M[offset]     ^ keySchedule[0];
	            var s1 = M[offset + 1] ^ keySchedule[1];
	            var s2 = M[offset + 2] ^ keySchedule[2];
	            var s3 = M[offset + 3] ^ keySchedule[3];

	            // Key schedule row counter
	            var ksRow = 4;

	            // Rounds
	            for (var round = 1; round < nRounds; round++) {
	                // Shift rows, sub bytes, mix columns, add round key
	                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];
	                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];
	                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];
	                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];

	                // Update state
	                s0 = t0;
	                s1 = t1;
	                s2 = t2;
	                s3 = t3;
	            }

	            // Shift rows, sub bytes, add round key
	            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];
	            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];
	            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];
	            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];

	            // Set output
	            M[offset]     = t0;
	            M[offset + 1] = t1;
	            M[offset + 2] = t2;
	            M[offset + 3] = t3;
	        },

	        keySize: 256/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
	     */
	    C.AES = BlockCipher._createHelper(AES);
	}());


	return CryptoJS.AES;

}));

/***/ }),

/***/ "./node_modules/crypto-js/cipher-core.js":
/*!***********************************************!*\
  !*** ./node_modules/crypto-js/cipher-core.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Cipher core components.
	 */
	CryptoJS.lib.Cipher || (function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var Base64 = C_enc.Base64;
	    var C_algo = C.algo;
	    var EvpKDF = C_algo.EvpKDF;

	    /**
	     * Abstract base cipher template.
	     *
	     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
	     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
	     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
	     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
	     */
	    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {WordArray} iv The IV to use for this operation.
	         */
	        cfg: Base.extend(),

	        /**
	         * Creates this cipher in encryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createEncryptor: function (key, cfg) {
	            return this.create(this._ENC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Creates this cipher in decryption mode.
	         *
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {Cipher} A cipher instance.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
	         */
	        createDecryptor: function (key, cfg) {
	            return this.create(this._DEC_XFORM_MODE, key, cfg);
	        },

	        /**
	         * Initializes a newly created cipher.
	         *
	         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @example
	         *
	         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
	         */
	        init: function (xformMode, key, cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Store transform mode and key
	            this._xformMode = xformMode;
	            this._key = key;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this cipher to its initial state.
	         *
	         * @example
	         *
	         *     cipher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-cipher logic
	            this._doReset();
	        },

	        /**
	         * Adds data to be encrypted or decrypted.
	         *
	         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.process('data');
	         *     var encrypted = cipher.process(wordArray);
	         */
	        process: function (dataUpdate) {
	            // Append
	            this._append(dataUpdate);

	            // Process available blocks
	            return this._process();
	        },

	        /**
	         * Finalizes the encryption or decryption process.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
	         *
	         * @return {WordArray} The data after final processing.
	         *
	         * @example
	         *
	         *     var encrypted = cipher.finalize();
	         *     var encrypted = cipher.finalize('data');
	         *     var encrypted = cipher.finalize(wordArray);
	         */
	        finalize: function (dataUpdate) {
	            // Final data update
	            if (dataUpdate) {
	                this._append(dataUpdate);
	            }

	            // Perform concrete-cipher logic
	            var finalProcessedData = this._doFinalize();

	            return finalProcessedData;
	        },

	        keySize: 128/32,

	        ivSize: 128/32,

	        _ENC_XFORM_MODE: 1,

	        _DEC_XFORM_MODE: 2,

	        /**
	         * Creates shortcut functions to a cipher's object interface.
	         *
	         * @param {Cipher} cipher The cipher to create a helper for.
	         *
	         * @return {Object} An object with encrypt and decrypt shortcut functions.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
	         */
	        _createHelper: (function () {
	            function selectCipherStrategy(key) {
	                if (typeof key == 'string') {
	                    return PasswordBasedCipher;
	                } else {
	                    return SerializableCipher;
	                }
	            }

	            return function (cipher) {
	                return {
	                    encrypt: function (message, key, cfg) {
	                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
	                    },

	                    decrypt: function (ciphertext, key, cfg) {
	                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
	                    }
	                };
	            };
	        }())
	    });

	    /**
	     * Abstract base stream cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
	     */
	    var StreamCipher = C_lib.StreamCipher = Cipher.extend({
	        _doFinalize: function () {
	            // Process partial blocks
	            var finalProcessedBlocks = this._process(!!'flush');

	            return finalProcessedBlocks;
	        },

	        blockSize: 1
	    });

	    /**
	     * Mode namespace.
	     */
	    var C_mode = C.mode = {};

	    /**
	     * Abstract base block cipher mode template.
	     */
	    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
	        /**
	         * Creates this mode for encryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
	         */
	        createEncryptor: function (cipher, iv) {
	            return this.Encryptor.create(cipher, iv);
	        },

	        /**
	         * Creates this mode for decryption.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
	         */
	        createDecryptor: function (cipher, iv) {
	            return this.Decryptor.create(cipher, iv);
	        },

	        /**
	         * Initializes a newly created mode.
	         *
	         * @param {Cipher} cipher A block cipher instance.
	         * @param {Array} iv The IV words.
	         *
	         * @example
	         *
	         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
	         */
	        init: function (cipher, iv) {
	            this._cipher = cipher;
	            this._iv = iv;
	        }
	    });

	    /**
	     * Cipher Block Chaining mode.
	     */
	    var CBC = C_mode.CBC = (function () {
	        /**
	         * Abstract base CBC mode.
	         */
	        var CBC = BlockCipherMode.extend();

	        /**
	         * CBC encryptor.
	         */
	        CBC.Encryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // XOR and encrypt
	                xorBlock.call(this, words, offset, blockSize);
	                cipher.encryptBlock(words, offset);

	                // Remember this block to use with next block
	                this._prevBlock = words.slice(offset, offset + blockSize);
	            }
	        });

	        /**
	         * CBC decryptor.
	         */
	        CBC.Decryptor = CBC.extend({
	            /**
	             * Processes the data block at offset.
	             *
	             * @param {Array} words The data words to operate on.
	             * @param {number} offset The offset where the block starts.
	             *
	             * @example
	             *
	             *     mode.processBlock(data.words, offset);
	             */
	            processBlock: function (words, offset) {
	                // Shortcuts
	                var cipher = this._cipher;
	                var blockSize = cipher.blockSize;

	                // Remember this block to use with next block
	                var thisBlock = words.slice(offset, offset + blockSize);

	                // Decrypt and XOR
	                cipher.decryptBlock(words, offset);
	                xorBlock.call(this, words, offset, blockSize);

	                // This block becomes the previous block
	                this._prevBlock = thisBlock;
	            }
	        });

	        function xorBlock(words, offset, blockSize) {
	            // Shortcut
	            var iv = this._iv;

	            // Choose mixing block
	            if (iv) {
	                var block = iv;

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            } else {
	                var block = this._prevBlock;
	            }

	            // XOR blocks
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= block[i];
	            }
	        }

	        return CBC;
	    }());

	    /**
	     * Padding namespace.
	     */
	    var C_pad = C.pad = {};

	    /**
	     * PKCS #5/7 padding strategy.
	     */
	    var Pkcs7 = C_pad.Pkcs7 = {
	        /**
	         * Pads data using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to pad.
	         * @param {number} blockSize The multiple that the data should be padded to.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
	         */
	        pad: function (data, blockSize) {
	            // Shortcut
	            var blockSizeBytes = blockSize * 4;

	            // Count padding bytes
	            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	            // Create padding word
	            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;

	            // Create padding
	            var paddingWords = [];
	            for (var i = 0; i < nPaddingBytes; i += 4) {
	                paddingWords.push(paddingWord);
	            }
	            var padding = WordArray.create(paddingWords, nPaddingBytes);

	            // Add padding
	            data.concat(padding);
	        },

	        /**
	         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
	         *
	         * @param {WordArray} data The data to unpad.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
	         */
	        unpad: function (data) {
	            // Get number of padding bytes from last byte
	            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	            // Remove padding
	            data.sigBytes -= nPaddingBytes;
	        }
	    };

	    /**
	     * Abstract base block cipher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
	     */
	    var BlockCipher = C_lib.BlockCipher = Cipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Mode} mode The block mode to use. Default: CBC
	         * @property {Padding} padding The padding strategy to use. Default: Pkcs7
	         */
	        cfg: Cipher.cfg.extend({
	            mode: CBC,
	            padding: Pkcs7
	        }),

	        reset: function () {
	            // Reset cipher
	            Cipher.reset.call(this);

	            // Shortcuts
	            var cfg = this.cfg;
	            var iv = cfg.iv;
	            var mode = cfg.mode;

	            // Reset block mode
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                var modeCreator = mode.createEncryptor;
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                var modeCreator = mode.createDecryptor;

	                // Keep at least one block in the buffer for unpadding
	                this._minBufferSize = 1;
	            }
	            this._mode = modeCreator.call(mode, this, iv && iv.words);
	        },

	        _doProcessBlock: function (words, offset) {
	            this._mode.processBlock(words, offset);
	        },

	        _doFinalize: function () {
	            // Shortcut
	            var padding = this.cfg.padding;

	            // Finalize
	            if (this._xformMode == this._ENC_XFORM_MODE) {
	                // Pad data
	                padding.pad(this._data, this.blockSize);

	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');
	            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {
	                // Process final blocks
	                var finalProcessedBlocks = this._process(!!'flush');

	                // Unpad data
	                padding.unpad(finalProcessedBlocks);
	            }

	            return finalProcessedBlocks;
	        },

	        blockSize: 128/32
	    });

	    /**
	     * A collection of cipher parameters.
	     *
	     * @property {WordArray} ciphertext The raw ciphertext.
	     * @property {WordArray} key The key to this ciphertext.
	     * @property {WordArray} iv The IV used in the ciphering operation.
	     * @property {WordArray} salt The salt used with a key derivation function.
	     * @property {Cipher} algorithm The cipher algorithm.
	     * @property {Mode} mode The block mode used in the ciphering operation.
	     * @property {Padding} padding The padding scheme used in the ciphering operation.
	     * @property {number} blockSize The block size of the cipher.
	     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.
	     */
	    var CipherParams = C_lib.CipherParams = Base.extend({
	        /**
	         * Initializes a newly created cipher params object.
	         *
	         * @param {Object} cipherParams An object with any of the possible cipher parameters.
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.lib.CipherParams.create({
	         *         ciphertext: ciphertextWordArray,
	         *         key: keyWordArray,
	         *         iv: ivWordArray,
	         *         salt: saltWordArray,
	         *         algorithm: CryptoJS.algo.AES,
	         *         mode: CryptoJS.mode.CBC,
	         *         padding: CryptoJS.pad.PKCS7,
	         *         blockSize: 4,
	         *         formatter: CryptoJS.format.OpenSSL
	         *     });
	         */
	        init: function (cipherParams) {
	            this.mixIn(cipherParams);
	        },

	        /**
	         * Converts this cipher params object to a string.
	         *
	         * @param {Format} formatter (Optional) The formatting strategy to use.
	         *
	         * @return {string} The stringified cipher params.
	         *
	         * @throws Error If neither the formatter nor the default formatter is set.
	         *
	         * @example
	         *
	         *     var string = cipherParams + '';
	         *     var string = cipherParams.toString();
	         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
	         */
	        toString: function (formatter) {
	            return (formatter || this.formatter).stringify(this);
	        }
	    });

	    /**
	     * Format namespace.
	     */
	    var C_format = C.format = {};

	    /**
	     * OpenSSL formatting strategy.
	     */
	    var OpenSSLFormatter = C_format.OpenSSL = {
	        /**
	         * Converts a cipher params object to an OpenSSL-compatible string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The OpenSSL-compatible string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            // Shortcuts
	            var ciphertext = cipherParams.ciphertext;
	            var salt = cipherParams.salt;

	            // Format
	            if (salt) {
	                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
	            } else {
	                var wordArray = ciphertext;
	            }

	            return wordArray.toString(Base64);
	        },

	        /**
	         * Converts an OpenSSL-compatible string to a cipher params object.
	         *
	         * @param {string} openSSLStr The OpenSSL-compatible string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
	         */
	        parse: function (openSSLStr) {
	            // Parse base64
	            var ciphertext = Base64.parse(openSSLStr);

	            // Shortcut
	            var ciphertextWords = ciphertext.words;

	            // Test for salt
	            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {
	                // Extract salt
	                var salt = WordArray.create(ciphertextWords.slice(2, 4));

	                // Remove salt from ciphertext
	                ciphertextWords.splice(0, 4);
	                ciphertext.sigBytes -= 16;
	            }

	            return CipherParams.create({ ciphertext: ciphertext, salt: salt });
	        }
	    };

	    /**
	     * A cipher wrapper that returns ciphertext as a serializable cipher params object.
	     */
	    var SerializableCipher = C_lib.SerializableCipher = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
	         */
	        cfg: Base.extend({
	            format: OpenSSLFormatter
	        }),

	        /**
	         * Encrypts a message.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Encrypt
	            var encryptor = cipher.createEncryptor(key, cfg);
	            var ciphertext = encryptor.finalize(message);

	            // Shortcut
	            var cipherCfg = encryptor.cfg;

	            // Create and return serializable cipher params
	            return CipherParams.create({
	                ciphertext: ciphertext,
	                key: key,
	                iv: cipherCfg.iv,
	                algorithm: cipher,
	                mode: cipherCfg.mode,
	                padding: cipherCfg.padding,
	                blockSize: cipher.blockSize,
	                formatter: cfg.format
	            });
	        },

	        /**
	         * Decrypts serialized ciphertext.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {WordArray} key The key.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, key, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Decrypt
	            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);

	            return plaintext;
	        },

	        /**
	         * Converts serialized ciphertext to CipherParams,
	         * else assumed CipherParams already and returns ciphertext unchanged.
	         *
	         * @param {CipherParams|string} ciphertext The ciphertext.
	         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
	         *
	         * @return {CipherParams} The unserialized ciphertext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
	         */
	        _parse: function (ciphertext, format) {
	            if (typeof ciphertext == 'string') {
	                return format.parse(ciphertext, this);
	            } else {
	                return ciphertext;
	            }
	        }
	    });

	    /**
	     * Key derivation function namespace.
	     */
	    var C_kdf = C.kdf = {};

	    /**
	     * OpenSSL key derivation function.
	     */
	    var OpenSSLKdf = C_kdf.OpenSSL = {
	        /**
	         * Derives a key and IV from a password.
	         *
	         * @param {string} password The password to derive from.
	         * @param {number} keySize The size in words of the key to generate.
	         * @param {number} ivSize The size in words of the IV to generate.
	         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
	         *
	         * @return {CipherParams} A cipher params object with the key, IV, and salt.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
	         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
	         */
	        execute: function (password, keySize, ivSize, salt) {
	            // Generate random salt
	            if (!salt) {
	                salt = WordArray.random(64/8);
	            }

	            // Derive key and IV
	            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);

	            // Separate key and IV
	            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
	            key.sigBytes = keySize * 4;

	            // Return params
	            return CipherParams.create({ key: key, iv: iv, salt: salt });
	        }
	    };

	    /**
	     * A serializable cipher wrapper that derives the key from a password,
	     * and returns ciphertext as a serializable cipher params object.
	     */
	    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
	         */
	        cfg: SerializableCipher.cfg.extend({
	            kdf: OpenSSLKdf
	        }),

	        /**
	         * Encrypts a message using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {WordArray|string} message The message to encrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {CipherParams} A cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
	         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        encrypt: function (cipher, message, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Encrypt
	            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);

	            // Mix in derived params
	            ciphertext.mixIn(derivedParams);

	            return ciphertext;
	        },

	        /**
	         * Decrypts serialized ciphertext using a password.
	         *
	         * @param {Cipher} cipher The cipher algorithm to use.
	         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
	         * @param {string} password The password.
	         * @param {Object} cfg (Optional) The configuration options to use for this operation.
	         *
	         * @return {WordArray} The plaintext.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
	         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
	         */
	        decrypt: function (cipher, ciphertext, password, cfg) {
	            // Apply config defaults
	            cfg = this.cfg.extend(cfg);

	            // Convert string to CipherParams
	            ciphertext = this._parse(ciphertext, cfg.format);

	            // Derive key and other params
	            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);

	            // Add IV to config
	            cfg.iv = derivedParams.iv;

	            // Decrypt
	            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);

	            return plaintext;
	        }
	    });
	}());


}));

/***/ }),

/***/ "./node_modules/crypto-js/core.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/core.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory();
	}
	else {}
}(this, function () {

	/**
	 * CryptoJS core components.
	 */
	var CryptoJS = CryptoJS || (function (Math, undefined) {
	    /*
	     * Local polyfil of Object.create
	     */
	    var create = Object.create || (function () {
	        function F() {};

	        return function (obj) {
	            var subtype;

	            F.prototype = obj;

	            subtype = new F();

	            F.prototype = null;

	            return subtype;
	        };
	    }())

	    /**
	     * CryptoJS namespace.
	     */
	    var C = {};

	    /**
	     * Library namespace.
	     */
	    var C_lib = C.lib = {};

	    /**
	     * Base object for prototypal inheritance.
	     */
	    var Base = C_lib.Base = (function () {


	        return {
	            /**
	             * Creates a new object that inherits from this object.
	             *
	             * @param {Object} overrides Properties to copy into the new object.
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         field: 'value',
	             *
	             *         method: function () {
	             *         }
	             *     });
	             */
	            extend: function (overrides) {
	                // Spawn
	                var subtype = create(this);

	                // Augment
	                if (overrides) {
	                    subtype.mixIn(overrides);
	                }

	                // Create default initializer
	                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {
	                    subtype.init = function () {
	                        subtype.$super.init.apply(this, arguments);
	                    };
	                }

	                // Initializer's prototype is the subtype object
	                subtype.init.prototype = subtype;

	                // Reference supertype
	                subtype.$super = this;

	                return subtype;
	            },

	            /**
	             * Extends this object and runs the init method.
	             * Arguments to create() will be passed to init().
	             *
	             * @return {Object} The new object.
	             *
	             * @static
	             *
	             * @example
	             *
	             *     var instance = MyType.create();
	             */
	            create: function () {
	                var instance = this.extend();
	                instance.init.apply(instance, arguments);

	                return instance;
	            },

	            /**
	             * Initializes a newly created object.
	             * Override this method to add some logic when your objects are created.
	             *
	             * @example
	             *
	             *     var MyType = CryptoJS.lib.Base.extend({
	             *         init: function () {
	             *             // ...
	             *         }
	             *     });
	             */
	            init: function () {
	            },

	            /**
	             * Copies properties into this object.
	             *
	             * @param {Object} properties The properties to mix in.
	             *
	             * @example
	             *
	             *     MyType.mixIn({
	             *         field: 'value'
	             *     });
	             */
	            mixIn: function (properties) {
	                for (var propertyName in properties) {
	                    if (properties.hasOwnProperty(propertyName)) {
	                        this[propertyName] = properties[propertyName];
	                    }
	                }

	                // IE won't copy toString using the loop above
	                if (properties.hasOwnProperty('toString')) {
	                    this.toString = properties.toString;
	                }
	            },

	            /**
	             * Creates a copy of this object.
	             *
	             * @return {Object} The clone.
	             *
	             * @example
	             *
	             *     var clone = instance.clone();
	             */
	            clone: function () {
	                return this.init.prototype.extend(this);
	            }
	        };
	    }());

	    /**
	     * An array of 32-bit words.
	     *
	     * @property {Array} words The array of 32-bit words.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var WordArray = C_lib.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of 32-bit words.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.create();
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
	         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 4;
	            }
	        },

	        /**
	         * Converts this word array to a string.
	         *
	         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
	         *
	         * @return {string} The stringified word array.
	         *
	         * @example
	         *
	         *     var string = wordArray + '';
	         *     var string = wordArray.toString();
	         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
	         */
	        toString: function (encoder) {
	            return (encoder || Hex).stringify(this);
	        },

	        /**
	         * Concatenates a word array to this word array.
	         *
	         * @param {WordArray} wordArray The word array to append.
	         *
	         * @return {WordArray} This word array.
	         *
	         * @example
	         *
	         *     wordArray1.concat(wordArray2);
	         */
	        concat: function (wordArray) {
	            // Shortcuts
	            var thisWords = this.words;
	            var thatWords = wordArray.words;
	            var thisSigBytes = this.sigBytes;
	            var thatSigBytes = wordArray.sigBytes;

	            // Clamp excess bits
	            this.clamp();

	            // Concat
	            if (thisSigBytes % 4) {
	                // Copy one byte at a time
	                for (var i = 0; i < thatSigBytes; i++) {
	                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);
	                }
	            } else {
	                // Copy one word at a time
	                for (var i = 0; i < thatSigBytes; i += 4) {
	                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];
	                }
	            }
	            this.sigBytes += thatSigBytes;

	            // Chainable
	            return this;
	        },

	        /**
	         * Removes insignificant bits.
	         *
	         * @example
	         *
	         *     wordArray.clamp();
	         */
	        clamp: function () {
	            // Shortcuts
	            var words = this.words;
	            var sigBytes = this.sigBytes;

	            // Clamp
	            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);
	            words.length = Math.ceil(sigBytes / 4);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = wordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone.words = this.words.slice(0);

	            return clone;
	        },

	        /**
	         * Creates a word array filled with random bytes.
	         *
	         * @param {number} nBytes The number of random bytes to generate.
	         *
	         * @return {WordArray} The random word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.lib.WordArray.random(16);
	         */
	        random: function (nBytes) {
	            var words = [];

	            var r = (function (m_w) {
	                var m_w = m_w;
	                var m_z = 0x3ade68b1;
	                var mask = 0xffffffff;

	                return function () {
	                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;
	                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;
	                    var result = ((m_z << 0x10) + m_w) & mask;
	                    result /= 0x100000000;
	                    result += 0.5;
	                    return result * (Math.random() > .5 ? 1 : -1);
	                }
	            });

	            for (var i = 0, rcache; i < nBytes; i += 4) {
	                var _r = r((rcache || Math.random()) * 0x100000000);

	                rcache = _r() * 0x3ade67b7;
	                words.push((_r() * 0x100000000) | 0);
	            }

	            return new WordArray.init(words, nBytes);
	        }
	    });

	    /**
	     * Encoder namespace.
	     */
	    var C_enc = C.enc = {};

	    /**
	     * Hex encoding strategy.
	     */
	    var Hex = C_enc.Hex = {
	        /**
	         * Converts a word array to a hex string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The hex string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var hexChars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                hexChars.push((bite >>> 4).toString(16));
	                hexChars.push((bite & 0x0f).toString(16));
	            }

	            return hexChars.join('');
	        },

	        /**
	         * Converts a hex string to a word array.
	         *
	         * @param {string} hexStr The hex string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
	         */
	        parse: function (hexStr) {
	            // Shortcut
	            var hexStrLength = hexStr.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < hexStrLength; i += 2) {
	                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);
	            }

	            return new WordArray.init(words, hexStrLength / 2);
	        }
	    };

	    /**
	     * Latin1 encoding strategy.
	     */
	    var Latin1 = C_enc.Latin1 = {
	        /**
	         * Converts a word array to a Latin1 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Latin1 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var latin1Chars = [];
	            for (var i = 0; i < sigBytes; i++) {
	                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;
	                latin1Chars.push(String.fromCharCode(bite));
	            }

	            return latin1Chars.join('');
	        },

	        /**
	         * Converts a Latin1 string to a word array.
	         *
	         * @param {string} latin1Str The Latin1 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
	         */
	        parse: function (latin1Str) {
	            // Shortcut
	            var latin1StrLength = latin1Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < latin1StrLength; i++) {
	                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);
	            }

	            return new WordArray.init(words, latin1StrLength);
	        }
	    };

	    /**
	     * UTF-8 encoding strategy.
	     */
	    var Utf8 = C_enc.Utf8 = {
	        /**
	         * Converts a word array to a UTF-8 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-8 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            try {
	                return decodeURIComponent(escape(Latin1.stringify(wordArray)));
	            } catch (e) {
	                throw new Error('Malformed UTF-8 data');
	            }
	        },

	        /**
	         * Converts a UTF-8 string to a word array.
	         *
	         * @param {string} utf8Str The UTF-8 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
	         */
	        parse: function (utf8Str) {
	            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
	        }
	    };

	    /**
	     * Abstract buffered block algorithm template.
	     *
	     * The property blockSize must be implemented in a concrete subtype.
	     *
	     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0
	     */
	    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
	        /**
	         * Resets this block algorithm's data buffer to its initial state.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm.reset();
	         */
	        reset: function () {
	            // Initial values
	            this._data = new WordArray.init();
	            this._nDataBytes = 0;
	        },

	        /**
	         * Adds new data to this block algorithm's buffer.
	         *
	         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
	         *
	         * @example
	         *
	         *     bufferedBlockAlgorithm._append('data');
	         *     bufferedBlockAlgorithm._append(wordArray);
	         */
	        _append: function (data) {
	            // Convert string to WordArray, else assume WordArray already
	            if (typeof data == 'string') {
	                data = Utf8.parse(data);
	            }

	            // Append
	            this._data.concat(data);
	            this._nDataBytes += data.sigBytes;
	        },

	        /**
	         * Processes available data blocks.
	         *
	         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
	         *
	         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
	         *
	         * @return {WordArray} The processed data.
	         *
	         * @example
	         *
	         *     var processedData = bufferedBlockAlgorithm._process();
	         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
	         */
	        _process: function (doFlush) {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var dataSigBytes = data.sigBytes;
	            var blockSize = this.blockSize;
	            var blockSizeBytes = blockSize * 4;

	            // Count blocks ready
	            var nBlocksReady = dataSigBytes / blockSizeBytes;
	            if (doFlush) {
	                // Round up to include partial blocks
	                nBlocksReady = Math.ceil(nBlocksReady);
	            } else {
	                // Round down to include only full blocks,
	                // less the number of blocks that must remain in the buffer
	                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
	            }

	            // Count words ready
	            var nWordsReady = nBlocksReady * blockSize;

	            // Count bytes ready
	            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

	            // Process blocks
	            if (nWordsReady) {
	                for (var offset = 0; offset < nWordsReady; offset += blockSize) {
	                    // Perform concrete-algorithm logic
	                    this._doProcessBlock(dataWords, offset);
	                }

	                // Remove processed words
	                var processedWords = dataWords.splice(0, nWordsReady);
	                data.sigBytes -= nBytesReady;
	            }

	            // Return processed words
	            return new WordArray.init(processedWords, nBytesReady);
	        },

	        /**
	         * Creates a copy of this object.
	         *
	         * @return {Object} The clone.
	         *
	         * @example
	         *
	         *     var clone = bufferedBlockAlgorithm.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);
	            clone._data = this._data.clone();

	            return clone;
	        },

	        _minBufferSize: 0
	    });

	    /**
	     * Abstract hasher template.
	     *
	     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
	     */
	    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
	        /**
	         * Configuration options.
	         */
	        cfg: Base.extend(),

	        /**
	         * Initializes a newly created hasher.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
	         *
	         * @example
	         *
	         *     var hasher = CryptoJS.algo.SHA256.create();
	         */
	        init: function (cfg) {
	            // Apply config defaults
	            this.cfg = this.cfg.extend(cfg);

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this hasher to its initial state.
	         *
	         * @example
	         *
	         *     hasher.reset();
	         */
	        reset: function () {
	            // Reset data buffer
	            BufferedBlockAlgorithm.reset.call(this);

	            // Perform concrete-hasher logic
	            this._doReset();
	        },

	        /**
	         * Updates this hasher with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {Hasher} This hasher.
	         *
	         * @example
	         *
	         *     hasher.update('message');
	         *     hasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            // Append
	            this._append(messageUpdate);

	            // Update the hash
	            this._process();

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the hash computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The hash.
	         *
	         * @example
	         *
	         *     var hash = hasher.finalize();
	         *     var hash = hasher.finalize('message');
	         *     var hash = hasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Final message update
	            if (messageUpdate) {
	                this._append(messageUpdate);
	            }

	            // Perform concrete-hasher logic
	            var hash = this._doFinalize();

	            return hash;
	        },

	        blockSize: 512/32,

	        /**
	         * Creates a shortcut function to a hasher's object interface.
	         *
	         * @param {Hasher} hasher The hasher to create a helper for.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
	         */
	        _createHelper: function (hasher) {
	            return function (message, cfg) {
	                return new hasher.init(cfg).finalize(message);
	            };
	        },

	        /**
	         * Creates a shortcut function to the HMAC's object interface.
	         *
	         * @param {Hasher} hasher The hasher to use in this HMAC helper.
	         *
	         * @return {Function} The shortcut function.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
	         */
	        _createHmacHelper: function (hasher) {
	            return function (message, key) {
	                return new C_algo.HMAC.init(hasher, key).finalize(message);
	            };
	        }
	    });

	    /**
	     * Algorithm namespace.
	     */
	    var C_algo = C.algo = {};

	    return C;
	}(Math));


	return CryptoJS;

}));

/***/ }),

/***/ "./node_modules/crypto-js/enc-base64.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-js/enc-base64.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * Base64 encoding strategy.
	     */
	    var Base64 = C_enc.Base64 = {
	        /**
	         * Converts a word array to a Base64 string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The Base64 string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;
	            var map = this._map;

	            // Clamp excess bits
	            wordArray.clamp();

	            // Convert
	            var base64Chars = [];
	            for (var i = 0; i < sigBytes; i += 3) {
	                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;
	                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;
	                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;

	                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;

	                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {
	                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));
	                }
	            }

	            // Add padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                while (base64Chars.length % 4) {
	                    base64Chars.push(paddingChar);
	                }
	            }

	            return base64Chars.join('');
	        },

	        /**
	         * Converts a Base64 string to a word array.
	         *
	         * @param {string} base64Str The Base64 string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
	         */
	        parse: function (base64Str) {
	            // Shortcuts
	            var base64StrLength = base64Str.length;
	            var map = this._map;
	            var reverseMap = this._reverseMap;

	            if (!reverseMap) {
	                    reverseMap = this._reverseMap = [];
	                    for (var j = 0; j < map.length; j++) {
	                        reverseMap[map.charCodeAt(j)] = j;
	                    }
	            }

	            // Ignore padding
	            var paddingChar = map.charAt(64);
	            if (paddingChar) {
	                var paddingIndex = base64Str.indexOf(paddingChar);
	                if (paddingIndex !== -1) {
	                    base64StrLength = paddingIndex;
	                }
	            }

	            // Convert
	            return parseLoop(base64Str, base64StrLength, reverseMap);

	        },

	        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
	    };

	    function parseLoop(base64Str, base64StrLength, reverseMap) {
	      var words = [];
	      var nBytes = 0;
	      for (var i = 0; i < base64StrLength; i++) {
	          if (i % 4) {
	              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);
	              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);
	              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);
	              nBytes++;
	          }
	      }
	      return WordArray.create(words, nBytes);
	    }
	}());


	return CryptoJS.enc.Base64;

}));

/***/ }),

/***/ "./node_modules/crypto-js/enc-utf16.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/enc-utf16.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_enc = C.enc;

	    /**
	     * UTF-16 BE encoding strategy.
	     */
	    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {
	        /**
	         * Converts a word array to a UTF-16 BE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 BE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 BE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 BE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    /**
	     * UTF-16 LE encoding strategy.
	     */
	    C_enc.Utf16LE = {
	        /**
	         * Converts a word array to a UTF-16 LE string.
	         *
	         * @param {WordArray} wordArray The word array.
	         *
	         * @return {string} The UTF-16 LE string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
	         */
	        stringify: function (wordArray) {
	            // Shortcuts
	            var words = wordArray.words;
	            var sigBytes = wordArray.sigBytes;

	            // Convert
	            var utf16Chars = [];
	            for (var i = 0; i < sigBytes; i += 2) {
	                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);
	                utf16Chars.push(String.fromCharCode(codePoint));
	            }

	            return utf16Chars.join('');
	        },

	        /**
	         * Converts a UTF-16 LE string to a word array.
	         *
	         * @param {string} utf16Str The UTF-16 LE string.
	         *
	         * @return {WordArray} The word array.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
	         */
	        parse: function (utf16Str) {
	            // Shortcut
	            var utf16StrLength = utf16Str.length;

	            // Convert
	            var words = [];
	            for (var i = 0; i < utf16StrLength; i++) {
	                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));
	            }

	            return WordArray.create(words, utf16StrLength * 2);
	        }
	    };

	    function swapEndian(word) {
	        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);
	    }
	}());


	return CryptoJS.enc.Utf16;

}));

/***/ }),

/***/ "./node_modules/crypto-js/evpkdf.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/evpkdf.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var MD5 = C_algo.MD5;

	    /**
	     * This key derivation function is meant to conform with EVP_BytesToKey.
	     * www.openssl.org/docs/crypto/EVP_BytesToKey.html
	     */
	    var EvpKDF = C_algo.EvpKDF = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hash algorithm to use. Default: MD5
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: MD5,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.EvpKDF.create();
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Derives a key from a password.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init hasher
	            var hasher = cfg.hasher.create();

	            // Initial values
	            var derivedKey = WordArray.create();

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                if (block) {
	                    hasher.update(block);
	                }
	                var block = hasher.update(password).finalize(salt);
	                hasher.reset();

	                // Iterations
	                for (var i = 1; i < iterations; i++) {
	                    block = hasher.finalize(block);
	                    hasher.reset();
	                }

	                derivedKey.concat(block);
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Derives a key from a password.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.EvpKDF(password, salt);
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.EvpKDF = function (password, salt, cfg) {
	        return EvpKDF.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.EvpKDF;

}));

/***/ }),

/***/ "./node_modules/crypto-js/format-hex.js":
/*!**********************************************!*\
  !*** ./node_modules/crypto-js/format-hex.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var CipherParams = C_lib.CipherParams;
	    var C_enc = C.enc;
	    var Hex = C_enc.Hex;
	    var C_format = C.format;

	    var HexFormatter = C_format.Hex = {
	        /**
	         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
	         *
	         * @param {CipherParams} cipherParams The cipher params object.
	         *
	         * @return {string} The hexadecimally encoded string.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
	         */
	        stringify: function (cipherParams) {
	            return cipherParams.ciphertext.toString(Hex);
	        },

	        /**
	         * Converts a hexadecimally encoded ciphertext string to a cipher params object.
	         *
	         * @param {string} input The hexadecimally encoded string.
	         *
	         * @return {CipherParams} The cipher params object.
	         *
	         * @static
	         *
	         * @example
	         *
	         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
	         */
	        parse: function (input) {
	            var ciphertext = Hex.parse(input);
	            return CipherParams.create({ ciphertext: ciphertext });
	        }
	    };
	}());


	return CryptoJS.format.Hex;

}));

/***/ }),

/***/ "./node_modules/crypto-js/hmac.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/hmac.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var C_enc = C.enc;
	    var Utf8 = C_enc.Utf8;
	    var C_algo = C.algo;

	    /**
	     * HMAC algorithm.
	     */
	    var HMAC = C_algo.HMAC = Base.extend({
	        /**
	         * Initializes a newly created HMAC.
	         *
	         * @param {Hasher} hasher The hash algorithm to use.
	         * @param {WordArray|string} key The secret key.
	         *
	         * @example
	         *
	         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
	         */
	        init: function (hasher, key) {
	            // Init hasher
	            hasher = this._hasher = new hasher.init();

	            // Convert string to WordArray, else assume WordArray already
	            if (typeof key == 'string') {
	                key = Utf8.parse(key);
	            }

	            // Shortcuts
	            var hasherBlockSize = hasher.blockSize;
	            var hasherBlockSizeBytes = hasherBlockSize * 4;

	            // Allow arbitrary length keys
	            if (key.sigBytes > hasherBlockSizeBytes) {
	                key = hasher.finalize(key);
	            }

	            // Clamp excess bits
	            key.clamp();

	            // Clone key for inner and outer pads
	            var oKey = this._oKey = key.clone();
	            var iKey = this._iKey = key.clone();

	            // Shortcuts
	            var oKeyWords = oKey.words;
	            var iKeyWords = iKey.words;

	            // XOR keys with pad constants
	            for (var i = 0; i < hasherBlockSize; i++) {
	                oKeyWords[i] ^= 0x5c5c5c5c;
	                iKeyWords[i] ^= 0x36363636;
	            }
	            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;

	            // Set initial values
	            this.reset();
	        },

	        /**
	         * Resets this HMAC to its initial state.
	         *
	         * @example
	         *
	         *     hmacHasher.reset();
	         */
	        reset: function () {
	            // Shortcut
	            var hasher = this._hasher;

	            // Reset
	            hasher.reset();
	            hasher.update(this._iKey);
	        },

	        /**
	         * Updates this HMAC with a message.
	         *
	         * @param {WordArray|string} messageUpdate The message to append.
	         *
	         * @return {HMAC} This HMAC instance.
	         *
	         * @example
	         *
	         *     hmacHasher.update('message');
	         *     hmacHasher.update(wordArray);
	         */
	        update: function (messageUpdate) {
	            this._hasher.update(messageUpdate);

	            // Chainable
	            return this;
	        },

	        /**
	         * Finalizes the HMAC computation.
	         * Note that the finalize operation is effectively a destructive, read-once operation.
	         *
	         * @param {WordArray|string} messageUpdate (Optional) A final message update.
	         *
	         * @return {WordArray} The HMAC.
	         *
	         * @example
	         *
	         *     var hmac = hmacHasher.finalize();
	         *     var hmac = hmacHasher.finalize('message');
	         *     var hmac = hmacHasher.finalize(wordArray);
	         */
	        finalize: function (messageUpdate) {
	            // Shortcut
	            var hasher = this._hasher;

	            // Compute HMAC
	            var innerHash = hasher.finalize(messageUpdate);
	            hasher.reset();
	            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));

	            return hmac;
	        }
	    });
	}());


}));

/***/ }),

/***/ "./node_modules/crypto-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/crypto-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./lib-typedarrays */ "./node_modules/crypto-js/lib-typedarrays.js"), __webpack_require__(/*! ./enc-utf16 */ "./node_modules/crypto-js/enc-utf16.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"), __webpack_require__(/*! ./sha224 */ "./node_modules/crypto-js/sha224.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"), __webpack_require__(/*! ./sha384 */ "./node_modules/crypto-js/sha384.js"), __webpack_require__(/*! ./sha3 */ "./node_modules/crypto-js/sha3.js"), __webpack_require__(/*! ./ripemd160 */ "./node_modules/crypto-js/ripemd160.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"), __webpack_require__(/*! ./pbkdf2 */ "./node_modules/crypto-js/pbkdf2.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"), __webpack_require__(/*! ./mode-cfb */ "./node_modules/crypto-js/mode-cfb.js"), __webpack_require__(/*! ./mode-ctr */ "./node_modules/crypto-js/mode-ctr.js"), __webpack_require__(/*! ./mode-ctr-gladman */ "./node_modules/crypto-js/mode-ctr-gladman.js"), __webpack_require__(/*! ./mode-ofb */ "./node_modules/crypto-js/mode-ofb.js"), __webpack_require__(/*! ./mode-ecb */ "./node_modules/crypto-js/mode-ecb.js"), __webpack_require__(/*! ./pad-ansix923 */ "./node_modules/crypto-js/pad-ansix923.js"), __webpack_require__(/*! ./pad-iso10126 */ "./node_modules/crypto-js/pad-iso10126.js"), __webpack_require__(/*! ./pad-iso97971 */ "./node_modules/crypto-js/pad-iso97971.js"), __webpack_require__(/*! ./pad-zeropadding */ "./node_modules/crypto-js/pad-zeropadding.js"), __webpack_require__(/*! ./pad-nopadding */ "./node_modules/crypto-js/pad-nopadding.js"), __webpack_require__(/*! ./format-hex */ "./node_modules/crypto-js/format-hex.js"), __webpack_require__(/*! ./aes */ "./node_modules/crypto-js/aes.js"), __webpack_require__(/*! ./tripledes */ "./node_modules/crypto-js/tripledes.js"), __webpack_require__(/*! ./rc4 */ "./node_modules/crypto-js/rc4.js"), __webpack_require__(/*! ./rabbit */ "./node_modules/crypto-js/rabbit.js"), __webpack_require__(/*! ./rabbit-legacy */ "./node_modules/crypto-js/rabbit-legacy.js"));
	}
	else {}
}(this, function (CryptoJS) {

	return CryptoJS;

}));

/***/ }),

/***/ "./node_modules/crypto-js/lib-typedarrays.js":
/*!***************************************************!*\
  !*** ./node_modules/crypto-js/lib-typedarrays.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Check if typed arrays are supported
	    if (typeof ArrayBuffer != 'function') {
	        return;
	    }

	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;

	    // Reference original init
	    var superInit = WordArray.init;

	    // Augment WordArray.init to handle typed arrays
	    var subInit = WordArray.init = function (typedArray) {
	        // Convert buffers to uint8
	        if (typedArray instanceof ArrayBuffer) {
	            typedArray = new Uint8Array(typedArray);
	        }

	        // Convert other array views to uint8
	        if (
	            typedArray instanceof Int8Array ||
	            (typeof Uint8ClampedArray !== "undefined" && typedArray instanceof Uint8ClampedArray) ||
	            typedArray instanceof Int16Array ||
	            typedArray instanceof Uint16Array ||
	            typedArray instanceof Int32Array ||
	            typedArray instanceof Uint32Array ||
	            typedArray instanceof Float32Array ||
	            typedArray instanceof Float64Array
	        ) {
	            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
	        }

	        // Handle Uint8Array
	        if (typedArray instanceof Uint8Array) {
	            // Shortcut
	            var typedArrayByteLength = typedArray.byteLength;

	            // Extract bytes
	            var words = [];
	            for (var i = 0; i < typedArrayByteLength; i++) {
	                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);
	            }

	            // Initialize this word array
	            superInit.call(this, words, typedArrayByteLength);
	        } else {
	            // Else call normal init
	            superInit.apply(this, arguments);
	        }
	    };

	    subInit.prototype = WordArray;
	}());


	return CryptoJS.lib.WordArray;

}));

/***/ }),

/***/ "./node_modules/crypto-js/md5.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/md5.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var T = [];

	    // Compute constants
	    (function () {
	        for (var i = 0; i < 64; i++) {
	            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;
	        }
	    }());

	    /**
	     * MD5 hash algorithm.
	     */
	    var MD5 = C_algo.MD5 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }

	            // Shortcuts
	            var H = this._hash.words;

	            var M_offset_0  = M[offset + 0];
	            var M_offset_1  = M[offset + 1];
	            var M_offset_2  = M[offset + 2];
	            var M_offset_3  = M[offset + 3];
	            var M_offset_4  = M[offset + 4];
	            var M_offset_5  = M[offset + 5];
	            var M_offset_6  = M[offset + 6];
	            var M_offset_7  = M[offset + 7];
	            var M_offset_8  = M[offset + 8];
	            var M_offset_9  = M[offset + 9];
	            var M_offset_10 = M[offset + 10];
	            var M_offset_11 = M[offset + 11];
	            var M_offset_12 = M[offset + 12];
	            var M_offset_13 = M[offset + 13];
	            var M_offset_14 = M[offset + 14];
	            var M_offset_15 = M[offset + 15];

	            // Working varialbes
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];

	            // Computation
	            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);
	            d = FF(d, a, b, c, M_offset_1,  12, T[1]);
	            c = FF(c, d, a, b, M_offset_2,  17, T[2]);
	            b = FF(b, c, d, a, M_offset_3,  22, T[3]);
	            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);
	            d = FF(d, a, b, c, M_offset_5,  12, T[5]);
	            c = FF(c, d, a, b, M_offset_6,  17, T[6]);
	            b = FF(b, c, d, a, M_offset_7,  22, T[7]);
	            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);
	            d = FF(d, a, b, c, M_offset_9,  12, T[9]);
	            c = FF(c, d, a, b, M_offset_10, 17, T[10]);
	            b = FF(b, c, d, a, M_offset_11, 22, T[11]);
	            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);
	            d = FF(d, a, b, c, M_offset_13, 12, T[13]);
	            c = FF(c, d, a, b, M_offset_14, 17, T[14]);
	            b = FF(b, c, d, a, M_offset_15, 22, T[15]);

	            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);
	            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);
	            c = GG(c, d, a, b, M_offset_11, 14, T[18]);
	            b = GG(b, c, d, a, M_offset_0,  20, T[19]);
	            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);
	            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);
	            c = GG(c, d, a, b, M_offset_15, 14, T[22]);
	            b = GG(b, c, d, a, M_offset_4,  20, T[23]);
	            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);
	            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);
	            c = GG(c, d, a, b, M_offset_3,  14, T[26]);
	            b = GG(b, c, d, a, M_offset_8,  20, T[27]);
	            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);
	            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);
	            c = GG(c, d, a, b, M_offset_7,  14, T[30]);
	            b = GG(b, c, d, a, M_offset_12, 20, T[31]);

	            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);
	            d = HH(d, a, b, c, M_offset_8,  11, T[33]);
	            c = HH(c, d, a, b, M_offset_11, 16, T[34]);
	            b = HH(b, c, d, a, M_offset_14, 23, T[35]);
	            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);
	            d = HH(d, a, b, c, M_offset_4,  11, T[37]);
	            c = HH(c, d, a, b, M_offset_7,  16, T[38]);
	            b = HH(b, c, d, a, M_offset_10, 23, T[39]);
	            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);
	            d = HH(d, a, b, c, M_offset_0,  11, T[41]);
	            c = HH(c, d, a, b, M_offset_3,  16, T[42]);
	            b = HH(b, c, d, a, M_offset_6,  23, T[43]);
	            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);
	            d = HH(d, a, b, c, M_offset_12, 11, T[45]);
	            c = HH(c, d, a, b, M_offset_15, 16, T[46]);
	            b = HH(b, c, d, a, M_offset_2,  23, T[47]);

	            a = II(a, b, c, d, M_offset_0,  6,  T[48]);
	            d = II(d, a, b, c, M_offset_7,  10, T[49]);
	            c = II(c, d, a, b, M_offset_14, 15, T[50]);
	            b = II(b, c, d, a, M_offset_5,  21, T[51]);
	            a = II(a, b, c, d, M_offset_12, 6,  T[52]);
	            d = II(d, a, b, c, M_offset_3,  10, T[53]);
	            c = II(c, d, a, b, M_offset_10, 15, T[54]);
	            b = II(b, c, d, a, M_offset_1,  21, T[55]);
	            a = II(a, b, c, d, M_offset_8,  6,  T[56]);
	            d = II(d, a, b, c, M_offset_15, 10, T[57]);
	            c = II(c, d, a, b, M_offset_6,  15, T[58]);
	            b = II(b, c, d, a, M_offset_13, 21, T[59]);
	            a = II(a, b, c, d, M_offset_4,  6,  T[60]);
	            d = II(d, a, b, c, M_offset_11, 10, T[61]);
	            c = II(c, d, a, b, M_offset_2,  15, T[62]);
	            b = II(b, c, d, a, M_offset_9,  21, T[63]);

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);

	            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
	            var nBitsTotalL = nBitsTotal;
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (
	                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)
	            );
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)
	            );

	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                // Shortcut
	                var H_i = H[i];

	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    function FF(a, b, c, d, x, s, t) {
	        var n = a + ((b & c) | (~b & d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function GG(a, b, c, d, x, s, t) {
	        var n = a + ((b & d) | (c & ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function HH(a, b, c, d, x, s, t) {
	        var n = a + (b ^ c ^ d) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    function II(a, b, c, d, x, s, t) {
	        var n = a + (c ^ (b | ~d)) + x + t;
	        return ((n << s) | (n >>> (32 - s))) + b;
	    }

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.MD5('message');
	     *     var hash = CryptoJS.MD5(wordArray);
	     */
	    C.MD5 = Hasher._createHelper(MD5);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacMD5(message, key);
	     */
	    C.HmacMD5 = Hasher._createHmacHelper(MD5);
	}(Math));


	return CryptoJS.MD5;

}));

/***/ }),

/***/ "./node_modules/crypto-js/mode-cfb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-cfb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Cipher Feedback block mode.
	 */
	CryptoJS.mode.CFB = (function () {
	    var CFB = CryptoJS.lib.BlockCipherMode.extend();

	    CFB.Encryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // Remember this block to use with next block
	            this._prevBlock = words.slice(offset, offset + blockSize);
	        }
	    });

	    CFB.Decryptor = CFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher;
	            var blockSize = cipher.blockSize;

	            // Remember this block to use with next block
	            var thisBlock = words.slice(offset, offset + blockSize);

	            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

	            // This block becomes the previous block
	            this._prevBlock = thisBlock;
	        }
	    });

	    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
	        // Shortcut
	        var iv = this._iv;

	        // Generate keystream
	        if (iv) {
	            var keystream = iv.slice(0);

	            // Remove IV for subsequent blocks
	            this._iv = undefined;
	        } else {
	            var keystream = this._prevBlock;
	        }
	        cipher.encryptBlock(keystream, 0);

	        // Encrypt
	        for (var i = 0; i < blockSize; i++) {
	            words[offset + i] ^= keystream[i];
	        }
	    }

	    return CFB;
	}());


	return CryptoJS.mode.CFB;

}));

/***/ }),

/***/ "./node_modules/crypto-js/mode-ctr-gladman.js":
/*!****************************************************!*\
  !*** ./node_modules/crypto-js/mode-ctr-gladman.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/** @preserve
	 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
	 * derived from CryptoJS.mode.CTR
	 * Jan Hruby jhruby.web@gmail.com
	 */
	CryptoJS.mode.CTRGladman = (function () {
	    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();

		function incWord(word)
		{
			if (((word >> 24) & 0xff) === 0xff) { //overflow
			var b1 = (word >> 16)&0xff;
			var b2 = (word >> 8)&0xff;
			var b3 = word & 0xff;

			if (b1 === 0xff) // overflow b1
			{
			b1 = 0;
			if (b2 === 0xff)
			{
				b2 = 0;
				if (b3 === 0xff)
				{
					b3 = 0;
				}
				else
				{
					++b3;
				}
			}
			else
			{
				++b2;
			}
			}
			else
			{
			++b1;
			}

			word = 0;
			word += (b1 << 16);
			word += (b2 << 8);
			word += b3;
			}
			else
			{
			word += (0x01 << 24);
			}
			return word;
		}

		function incCounter(counter)
		{
			if ((counter[0] = incWord(counter[0])) === 0)
			{
				// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
				counter[1] = incWord(counter[1]);
			}
			return counter;
		}

	    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }

				incCounter(counter);

				var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTRGladman.Decryptor = Encryptor;

	    return CTRGladman;
	}());




	return CryptoJS.mode.CTRGladman;

}));

/***/ }),

/***/ "./node_modules/crypto-js/mode-ctr.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ctr.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Counter block mode.
	 */
	CryptoJS.mode.CTR = (function () {
	    var CTR = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = CTR.Encryptor = CTR.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var counter = this._counter;

	            // Generate keystream
	            if (iv) {
	                counter = this._counter = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            var keystream = counter.slice(0);
	            cipher.encryptBlock(keystream, 0);

	            // Increment counter
	            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    CTR.Decryptor = Encryptor;

	    return CTR;
	}());


	return CryptoJS.mode.CTR;

}));

/***/ }),

/***/ "./node_modules/crypto-js/mode-ecb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ecb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Electronic Codebook block mode.
	 */
	CryptoJS.mode.ECB = (function () {
	    var ECB = CryptoJS.lib.BlockCipherMode.extend();

	    ECB.Encryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.encryptBlock(words, offset);
	        }
	    });

	    ECB.Decryptor = ECB.extend({
	        processBlock: function (words, offset) {
	            this._cipher.decryptBlock(words, offset);
	        }
	    });

	    return ECB;
	}());


	return CryptoJS.mode.ECB;

}));

/***/ }),

/***/ "./node_modules/crypto-js/mode-ofb.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/mode-ofb.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Output Feedback block mode.
	 */
	CryptoJS.mode.OFB = (function () {
	    var OFB = CryptoJS.lib.BlockCipherMode.extend();

	    var Encryptor = OFB.Encryptor = OFB.extend({
	        processBlock: function (words, offset) {
	            // Shortcuts
	            var cipher = this._cipher
	            var blockSize = cipher.blockSize;
	            var iv = this._iv;
	            var keystream = this._keystream;

	            // Generate keystream
	            if (iv) {
	                keystream = this._keystream = iv.slice(0);

	                // Remove IV for subsequent blocks
	                this._iv = undefined;
	            }
	            cipher.encryptBlock(keystream, 0);

	            // Encrypt
	            for (var i = 0; i < blockSize; i++) {
	                words[offset + i] ^= keystream[i];
	            }
	        }
	    });

	    OFB.Decryptor = Encryptor;

	    return OFB;
	}());


	return CryptoJS.mode.OFB;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pad-ansix923.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-ansix923.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ANSI X.923 padding strategy.
	 */
	CryptoJS.pad.AnsiX923 = {
	    pad: function (data, blockSize) {
	        // Shortcuts
	        var dataSigBytes = data.sigBytes;
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

	        // Compute last byte position
	        var lastBytePos = dataSigBytes + nPaddingBytes - 1;

	        // Pad
	        data.clamp();
	        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);
	        data.sigBytes += nPaddingBytes;
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Ansix923;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pad-iso10126.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-iso10126.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ISO 10126 padding strategy.
	 */
	CryptoJS.pad.Iso10126 = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Count padding bytes
	        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

	        // Pad
	        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).
	             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));
	    },

	    unpad: function (data) {
	        // Get number of padding bytes from last byte
	        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;

	        // Remove padding
	        data.sigBytes -= nPaddingBytes;
	    }
	};


	return CryptoJS.pad.Iso10126;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pad-iso97971.js":
/*!************************************************!*\
  !*** ./node_modules/crypto-js/pad-iso97971.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * ISO/IEC 9797-1 Padding Method 2.
	 */
	CryptoJS.pad.Iso97971 = {
	    pad: function (data, blockSize) {
	        // Add 0x80 byte
	        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));

	        // Zero pad the rest
	        CryptoJS.pad.ZeroPadding.pad(data, blockSize);
	    },

	    unpad: function (data) {
	        // Remove zero padding
	        CryptoJS.pad.ZeroPadding.unpad(data);

	        // Remove one more byte -- the 0x80 byte
	        data.sigBytes--;
	    }
	};


	return CryptoJS.pad.Iso97971;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pad-nopadding.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-js/pad-nopadding.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * A noop padding strategy.
	 */
	CryptoJS.pad.NoPadding = {
	    pad: function () {
	    },

	    unpad: function () {
	    }
	};


	return CryptoJS.pad.NoPadding;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pad-zeropadding.js":
/*!***************************************************!*\
  !*** ./node_modules/crypto-js/pad-zeropadding.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/**
	 * Zero padding strategy.
	 */
	CryptoJS.pad.ZeroPadding = {
	    pad: function (data, blockSize) {
	        // Shortcut
	        var blockSizeBytes = blockSize * 4;

	        // Pad
	        data.clamp();
	        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);
	    },

	    unpad: function (data) {
	        // Shortcut
	        var dataWords = data.words;

	        // Unpad
	        var i = data.sigBytes - 1;
	        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {
	            i--;
	        }
	        data.sigBytes = i + 1;
	    }
	};


	return CryptoJS.pad.ZeroPadding;

}));

/***/ }),

/***/ "./node_modules/crypto-js/pbkdf2.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/pbkdf2.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha1 */ "./node_modules/crypto-js/sha1.js"), __webpack_require__(/*! ./hmac */ "./node_modules/crypto-js/hmac.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA1 = C_algo.SHA1;
	    var HMAC = C_algo.HMAC;

	    /**
	     * Password-Based Key Derivation Function 2 algorithm.
	     */
	    var PBKDF2 = C_algo.PBKDF2 = Base.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
	         * @property {Hasher} hasher The hasher to use. Default: SHA1
	         * @property {number} iterations The number of iterations to perform. Default: 1
	         */
	        cfg: Base.extend({
	            keySize: 128/32,
	            hasher: SHA1,
	            iterations: 1
	        }),

	        /**
	         * Initializes a newly created key derivation function.
	         *
	         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
	         *
	         * @example
	         *
	         *     var kdf = CryptoJS.algo.PBKDF2.create();
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
	         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
	         */
	        init: function (cfg) {
	            this.cfg = this.cfg.extend(cfg);
	        },

	        /**
	         * Computes the Password-Based Key Derivation Function 2.
	         *
	         * @param {WordArray|string} password The password.
	         * @param {WordArray|string} salt A salt.
	         *
	         * @return {WordArray} The derived key.
	         *
	         * @example
	         *
	         *     var key = kdf.compute(password, salt);
	         */
	        compute: function (password, salt) {
	            // Shortcut
	            var cfg = this.cfg;

	            // Init HMAC
	            var hmac = HMAC.create(cfg.hasher, password);

	            // Initial values
	            var derivedKey = WordArray.create();
	            var blockIndex = WordArray.create([0x00000001]);

	            // Shortcuts
	            var derivedKeyWords = derivedKey.words;
	            var blockIndexWords = blockIndex.words;
	            var keySize = cfg.keySize;
	            var iterations = cfg.iterations;

	            // Generate key
	            while (derivedKeyWords.length < keySize) {
	                var block = hmac.update(salt).finalize(blockIndex);
	                hmac.reset();

	                // Shortcuts
	                var blockWords = block.words;
	                var blockWordsLength = blockWords.length;

	                // Iterations
	                var intermediate = block;
	                for (var i = 1; i < iterations; i++) {
	                    intermediate = hmac.finalize(intermediate);
	                    hmac.reset();

	                    // Shortcut
	                    var intermediateWords = intermediate.words;

	                    // XOR intermediate with block
	                    for (var j = 0; j < blockWordsLength; j++) {
	                        blockWords[j] ^= intermediateWords[j];
	                    }
	                }

	                derivedKey.concat(block);
	                blockIndexWords[0]++;
	            }
	            derivedKey.sigBytes = keySize * 4;

	            return derivedKey;
	        }
	    });

	    /**
	     * Computes the Password-Based Key Derivation Function 2.
	     *
	     * @param {WordArray|string} password The password.
	     * @param {WordArray|string} salt A salt.
	     * @param {Object} cfg (Optional) The configuration options to use for this computation.
	     *
	     * @return {WordArray} The derived key.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var key = CryptoJS.PBKDF2(password, salt);
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
	     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
	     */
	    C.PBKDF2 = function (password, salt, cfg) {
	        return PBKDF2.create(cfg).compute(password, salt);
	    };
	}());


	return CryptoJS.PBKDF2;

}));

/***/ }),

/***/ "./node_modules/crypto-js/rabbit-legacy.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-js/rabbit-legacy.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm.
	     *
	     * This is a legacy version that neglected to convert the key to little-endian.
	     * This error doesn't affect the cipher's security,
	     * but it does affect its compatibility with other implementations.
	     */
	    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
	     */
	    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);
	}());


	return CryptoJS.RabbitLegacy;

}));

/***/ }),

/***/ "./node_modules/crypto-js/rabbit.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/rabbit.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    // Reusable objects
	    var S  = [];
	    var C_ = [];
	    var G  = [];

	    /**
	     * Rabbit stream cipher algorithm
	     */
	    var Rabbit = C_algo.Rabbit = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var K = this._key.words;
	            var iv = this.cfg.iv;

	            // Swap endian
	            for (var i = 0; i < 4; i++) {
	                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |
	                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);
	            }

	            // Generate initial state values
	            var X = this._X = [
	                K[0], (K[3] << 16) | (K[2] >>> 16),
	                K[1], (K[0] << 16) | (K[3] >>> 16),
	                K[2], (K[1] << 16) | (K[0] >>> 16),
	                K[3], (K[2] << 16) | (K[1] >>> 16)
	            ];

	            // Generate initial counter values
	            var C = this._C = [
	                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),
	                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),
	                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),
	                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)
	            ];

	            // Carry bit
	            this._b = 0;

	            // Iterate the system four times
	            for (var i = 0; i < 4; i++) {
	                nextState.call(this);
	            }

	            // Modify the counters
	            for (var i = 0; i < 8; i++) {
	                C[i] ^= X[(i + 4) & 7];
	            }

	            // IV setup
	            if (iv) {
	                // Shortcuts
	                var IV = iv.words;
	                var IV_0 = IV[0];
	                var IV_1 = IV[1];

	                // Generate four subvectors
	                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);
	                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);
	                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);
	                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);

	                // Modify counter values
	                C[0] ^= i0;
	                C[1] ^= i1;
	                C[2] ^= i2;
	                C[3] ^= i3;
	                C[4] ^= i0;
	                C[5] ^= i1;
	                C[6] ^= i2;
	                C[7] ^= i3;

	                // Iterate the system four times
	                for (var i = 0; i < 4; i++) {
	                    nextState.call(this);
	                }
	            }
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var X = this._X;

	            // Iterate the system
	            nextState.call(this);

	            // Generate four keystream words
	            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);
	            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);
	            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);
	            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);

	            for (var i = 0; i < 4; i++) {
	                // Swap endian
	                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |
	                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);

	                // Encrypt
	                M[offset + i] ^= S[i];
	            }
	        },

	        blockSize: 128/32,

	        ivSize: 64/32
	    });

	    function nextState() {
	        // Shortcuts
	        var X = this._X;
	        var C = this._C;

	        // Save old counter values
	        for (var i = 0; i < 8; i++) {
	            C_[i] = C[i];
	        }

	        // Calculate new counter values
	        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;
	        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;
	        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;
	        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;
	        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;
	        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;
	        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;
	        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;
	        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;

	        // Calculate the g-values
	        for (var i = 0; i < 8; i++) {
	            var gx = X[i] + C[i];

	            // Construct high and low argument for squaring
	            var ga = gx & 0xffff;
	            var gb = gx >>> 16;

	            // Calculate high and low result of squaring
	            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;
	            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);

	            // High XOR low
	            G[i] = gh ^ gl;
	        }

	        // Calculate new state values
	        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;
	        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;
	        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;
	        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;
	        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;
	        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;
	        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;
	        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
	     */
	    C.Rabbit = StreamCipher._createHelper(Rabbit);
	}());


	return CryptoJS.Rabbit;

}));

/***/ }),

/***/ "./node_modules/crypto-js/rc4.js":
/*!***************************************!*\
  !*** ./node_modules/crypto-js/rc4.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var StreamCipher = C_lib.StreamCipher;
	    var C_algo = C.algo;

	    /**
	     * RC4 stream cipher algorithm.
	     */
	    var RC4 = C_algo.RC4 = StreamCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;
	            var keySigBytes = key.sigBytes;

	            // Init sbox
	            var S = this._S = [];
	            for (var i = 0; i < 256; i++) {
	                S[i] = i;
	            }

	            // Key setup
	            for (var i = 0, j = 0; i < 256; i++) {
	                var keyByteIndex = i % keySigBytes;
	                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;

	                j = (j + S[i] + keyByte) % 256;

	                // Swap
	                var t = S[i];
	                S[i] = S[j];
	                S[j] = t;
	            }

	            // Counters
	            this._i = this._j = 0;
	        },

	        _doProcessBlock: function (M, offset) {
	            M[offset] ^= generateKeystreamWord.call(this);
	        },

	        keySize: 256/32,

	        ivSize: 0
	    });

	    function generateKeystreamWord() {
	        // Shortcuts
	        var S = this._S;
	        var i = this._i;
	        var j = this._j;

	        // Generate keystream word
	        var keystreamWord = 0;
	        for (var n = 0; n < 4; n++) {
	            i = (i + 1) % 256;
	            j = (j + S[i]) % 256;

	            // Swap
	            var t = S[i];
	            S[i] = S[j];
	            S[j] = t;

	            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);
	        }

	        // Update counters
	        this._i = i;
	        this._j = j;

	        return keystreamWord;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4 = StreamCipher._createHelper(RC4);

	    /**
	     * Modified RC4 stream cipher algorithm.
	     */
	    var RC4Drop = C_algo.RC4Drop = RC4.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} drop The number of keystream words to drop. Default 192
	         */
	        cfg: RC4.cfg.extend({
	            drop: 192
	        }),

	        _doReset: function () {
	            RC4._doReset.call(this);

	            // Drop
	            for (var i = this.cfg.drop; i > 0; i--) {
	                generateKeystreamWord.call(this);
	            }
	        }
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
	     */
	    C.RC4Drop = StreamCipher._createHelper(RC4Drop);
	}());


	return CryptoJS.RC4;

}));

/***/ }),

/***/ "./node_modules/crypto-js/ripemd160.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/ripemd160.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Constants table
	    var _zl = WordArray.create([
	        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);
	    var _zr = WordArray.create([
	        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);
	    var _sl = WordArray.create([
	         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);
	    var _sr = WordArray.create([
	        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);

	    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
	    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);

	    /**
	     * RIPEMD160 hash algorithm.
	     */
	    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({
	        _doReset: function () {
	            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
	        },

	        _doProcessBlock: function (M, offset) {

	            // Swap endian
	            for (var i = 0; i < 16; i++) {
	                // Shortcuts
	                var offset_i = offset + i;
	                var M_offset_i = M[offset_i];

	                // Swap
	                M[offset_i] = (
	                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	                );
	            }
	            // Shortcut
	            var H  = this._hash.words;
	            var hl = _hl.words;
	            var hr = _hr.words;
	            var zl = _zl.words;
	            var zr = _zr.words;
	            var sl = _sl.words;
	            var sr = _sr.words;

	            // Working variables
	            var al, bl, cl, dl, el;
	            var ar, br, cr, dr, er;

	            ar = al = H[0];
	            br = bl = H[1];
	            cr = cl = H[2];
	            dr = dl = H[3];
	            er = el = H[4];
	            // Computation
	            var t;
	            for (var i = 0; i < 80; i += 1) {
	                t = (al +  M[offset+zl[i]])|0;
	                if (i<16){
		            t +=  f1(bl,cl,dl) + hl[0];
	                } else if (i<32) {
		            t +=  f2(bl,cl,dl) + hl[1];
	                } else if (i<48) {
		            t +=  f3(bl,cl,dl) + hl[2];
	                } else if (i<64) {
		            t +=  f4(bl,cl,dl) + hl[3];
	                } else {// if (i<80) {
		            t +=  f5(bl,cl,dl) + hl[4];
	                }
	                t = t|0;
	                t =  rotl(t,sl[i]);
	                t = (t+el)|0;
	                al = el;
	                el = dl;
	                dl = rotl(cl, 10);
	                cl = bl;
	                bl = t;

	                t = (ar + M[offset+zr[i]])|0;
	                if (i<16){
		            t +=  f5(br,cr,dr) + hr[0];
	                } else if (i<32) {
		            t +=  f4(br,cr,dr) + hr[1];
	                } else if (i<48) {
		            t +=  f3(br,cr,dr) + hr[2];
	                } else if (i<64) {
		            t +=  f2(br,cr,dr) + hr[3];
	                } else {// if (i<80) {
		            t +=  f1(br,cr,dr) + hr[4];
	                }
	                t = t|0;
	                t =  rotl(t,sr[i]) ;
	                t = (t+er)|0;
	                ar = er;
	                er = dr;
	                dr = rotl(cr, 10);
	                cr = br;
	                br = t;
	            }
	            // Intermediate hash value
	            t    = (H[1] + cl + dr)|0;
	            H[1] = (H[2] + dl + er)|0;
	            H[2] = (H[3] + el + ar)|0;
	            H[3] = (H[4] + al + br)|0;
	            H[4] = (H[0] + bl + cr)|0;
	            H[0] =  t;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	            );
	            data.sigBytes = (dataWords.length + 1) * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var hash = this._hash;
	            var H = hash.words;

	            // Swap endian
	            for (var i = 0; i < 5; i++) {
	                // Shortcut
	                var H_i = H[i];

	                // Swap
	                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	            }

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });


	    function f1(x, y, z) {
	        return ((x) ^ (y) ^ (z));

	    }

	    function f2(x, y, z) {
	        return (((x)&(y)) | ((~x)&(z)));
	    }

	    function f3(x, y, z) {
	        return (((x) | (~(y))) ^ (z));
	    }

	    function f4(x, y, z) {
	        return (((x) & (z)) | ((y)&(~(z))));
	    }

	    function f5(x, y, z) {
	        return ((x) ^ ((y) |(~(z))));

	    }

	    function rotl(x,n) {
	        return (x<<n) | (x>>>(32-n));
	    }


	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.RIPEMD160('message');
	     *     var hash = CryptoJS.RIPEMD160(wordArray);
	     */
	    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
	     */
	    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);
	}(Math));


	return CryptoJS.RIPEMD160;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha1.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-1 hash algorithm.
	     */
	    var SHA1 = C_algo.SHA1 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0x67452301, 0xefcdab89,
	                0x98badcfe, 0x10325476,
	                0xc3d2e1f0
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];

	            // Computation
	            for (var i = 0; i < 80; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
	                    W[i] = (n << 1) | (n >>> 31);
	                }

	                var t = ((a << 5) | (a >>> 27)) + e + W[i];
	                if (i < 20) {
	                    t += ((b & c) | (~b & d)) + 0x5a827999;
	                } else if (i < 40) {
	                    t += (b ^ c ^ d) + 0x6ed9eba1;
	                } else if (i < 60) {
	                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;
	                } else /* if (i < 80) */ {
	                    t += (b ^ c ^ d) - 0x359d3e2a;
	                }

	                e = d;
	                d = c;
	                c = (b << 30) | (b >>> 2);
	                b = a;
	                a = t;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA1('message');
	     *     var hash = CryptoJS.SHA1(wordArray);
	     */
	    C.SHA1 = Hasher._createHelper(SHA1);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA1(message, key);
	     */
	    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
	}());


	return CryptoJS.SHA1;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha224.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha224.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./sha256 */ "./node_modules/crypto-js/sha256.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var C_algo = C.algo;
	    var SHA256 = C_algo.SHA256;

	    /**
	     * SHA-224 hash algorithm.
	     */
	    var SHA224 = C_algo.SHA224 = SHA256.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init([
	                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
	                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA256._doFinalize.call(this);

	            hash.sigBytes -= 4;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA224('message');
	     *     var hash = CryptoJS.SHA224(wordArray);
	     */
	    C.SHA224 = SHA256._createHelper(SHA224);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA224(message, key);
	     */
	    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
	}());


	return CryptoJS.SHA224;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha256.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha256.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_algo = C.algo;

	    // Initialization and round constants tables
	    var H = [];
	    var K = [];

	    // Compute constants
	    (function () {
	        function isPrime(n) {
	            var sqrtN = Math.sqrt(n);
	            for (var factor = 2; factor <= sqrtN; factor++) {
	                if (!(n % factor)) {
	                    return false;
	                }
	            }

	            return true;
	        }

	        function getFractionalBits(n) {
	            return ((n - (n | 0)) * 0x100000000) | 0;
	        }

	        var n = 2;
	        var nPrime = 0;
	        while (nPrime < 64) {
	            if (isPrime(n)) {
	                if (nPrime < 8) {
	                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
	                }
	                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));

	                nPrime++;
	            }

	            n++;
	        }
	    }());

	    // Reusable object
	    var W = [];

	    /**
	     * SHA-256 hash algorithm.
	     */
	    var SHA256 = C_algo.SHA256 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new WordArray.init(H.slice(0));
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcut
	            var H = this._hash.words;

	            // Working variables
	            var a = H[0];
	            var b = H[1];
	            var c = H[2];
	            var d = H[3];
	            var e = H[4];
	            var f = H[5];
	            var g = H[6];
	            var h = H[7];

	            // Computation
	            for (var i = 0; i < 64; i++) {
	                if (i < 16) {
	                    W[i] = M[offset + i] | 0;
	                } else {
	                    var gamma0x = W[i - 15];
	                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^
	                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^
	                                   (gamma0x >>> 3);

	                    var gamma1x = W[i - 2];
	                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^
	                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^
	                                   (gamma1x >>> 10);

	                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
	                }

	                var ch  = (e & f) ^ (~e & g);
	                var maj = (a & b) ^ (a & c) ^ (b & c);

	                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));
	                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));

	                var t1 = h + sigma1 + ch + K[i] + W[i];
	                var t2 = sigma0 + maj;

	                h = g;
	                g = f;
	                f = e;
	                e = (d + t1) | 0;
	                d = c;
	                c = b;
	                b = a;
	                a = (t1 + t2) | 0;
	            }

	            // Intermediate hash value
	            H[0] = (H[0] + a) | 0;
	            H[1] = (H[1] + b) | 0;
	            H[2] = (H[2] + c) | 0;
	            H[3] = (H[3] + d) | 0;
	            H[4] = (H[4] + e) | 0;
	            H[5] = (H[5] + f) | 0;
	            H[6] = (H[6] + g) | 0;
	            H[7] = (H[7] + h) | 0;
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Return final computed hash
	            return this._hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA256('message');
	     *     var hash = CryptoJS.SHA256(wordArray);
	     */
	    C.SHA256 = Hasher._createHelper(SHA256);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA256(message, key);
	     */
	    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
	}(Math));


	return CryptoJS.SHA256;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha3.js":
/*!****************************************!*\
  !*** ./node_modules/crypto-js/sha3.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (Math) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var C_algo = C.algo;

	    // Constants tables
	    var RHO_OFFSETS = [];
	    var PI_INDEXES  = [];
	    var ROUND_CONSTANTS = [];

	    // Compute Constants
	    (function () {
	        // Compute rho offset constants
	        var x = 1, y = 0;
	        for (var t = 0; t < 24; t++) {
	            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;

	            var newX = y % 5;
	            var newY = (2 * x + 3 * y) % 5;
	            x = newX;
	            y = newY;
	        }

	        // Compute pi index constants
	        for (var x = 0; x < 5; x++) {
	            for (var y = 0; y < 5; y++) {
	                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;
	            }
	        }

	        // Compute round constants
	        var LFSR = 0x01;
	        for (var i = 0; i < 24; i++) {
	            var roundConstantMsw = 0;
	            var roundConstantLsw = 0;

	            for (var j = 0; j < 7; j++) {
	                if (LFSR & 0x01) {
	                    var bitPosition = (1 << j) - 1;
	                    if (bitPosition < 32) {
	                        roundConstantLsw ^= 1 << bitPosition;
	                    } else /* if (bitPosition >= 32) */ {
	                        roundConstantMsw ^= 1 << (bitPosition - 32);
	                    }
	                }

	                // Compute next LFSR
	                if (LFSR & 0x80) {
	                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
	                    LFSR = (LFSR << 1) ^ 0x71;
	                } else {
	                    LFSR <<= 1;
	                }
	            }

	            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
	        }
	    }());

	    // Reusable objects for temporary values
	    var T = [];
	    (function () {
	        for (var i = 0; i < 25; i++) {
	            T[i] = X64Word.create();
	        }
	    }());

	    /**
	     * SHA-3 hash algorithm.
	     */
	    var SHA3 = C_algo.SHA3 = Hasher.extend({
	        /**
	         * Configuration options.
	         *
	         * @property {number} outputLength
	         *   The desired number of bits in the output hash.
	         *   Only values permitted are: 224, 256, 384, 512.
	         *   Default: 512
	         */
	        cfg: Hasher.cfg.extend({
	            outputLength: 512
	        }),

	        _doReset: function () {
	            var state = this._state = []
	            for (var i = 0; i < 25; i++) {
	                state[i] = new X64Word.init();
	            }

	            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var state = this._state;
	            var nBlockSizeLanes = this.blockSize / 2;

	            // Absorb
	            for (var i = 0; i < nBlockSizeLanes; i++) {
	                // Shortcuts
	                var M2i  = M[offset + 2 * i];
	                var M2i1 = M[offset + 2 * i + 1];

	                // Swap endian
	                M2i = (
	                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |
	                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)
	                );
	                M2i1 = (
	                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |
	                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)
	                );

	                // Absorb message into state
	                var lane = state[i];
	                lane.high ^= M2i1;
	                lane.low  ^= M2i;
	            }

	            // Rounds
	            for (var round = 0; round < 24; round++) {
	                // Theta
	                for (var x = 0; x < 5; x++) {
	                    // Mix column lanes
	                    var tMsw = 0, tLsw = 0;
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        tMsw ^= lane.high;
	                        tLsw ^= lane.low;
	                    }

	                    // Temporary values
	                    var Tx = T[x];
	                    Tx.high = tMsw;
	                    Tx.low  = tLsw;
	                }
	                for (var x = 0; x < 5; x++) {
	                    // Shortcuts
	                    var Tx4 = T[(x + 4) % 5];
	                    var Tx1 = T[(x + 1) % 5];
	                    var Tx1Msw = Tx1.high;
	                    var Tx1Lsw = Tx1.low;

	                    // Mix surrounding columns
	                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));
	                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));
	                    for (var y = 0; y < 5; y++) {
	                        var lane = state[x + 5 * y];
	                        lane.high ^= tMsw;
	                        lane.low  ^= tLsw;
	                    }
	                }

	                // Rho Pi
	                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {
	                    // Shortcuts
	                    var lane = state[laneIndex];
	                    var laneMsw = lane.high;
	                    var laneLsw = lane.low;
	                    var rhoOffset = RHO_OFFSETS[laneIndex];

	                    // Rotate lanes
	                    if (rhoOffset < 32) {
	                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));
	                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));
	                    } else /* if (rhoOffset >= 32) */ {
	                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));
	                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));
	                    }

	                    // Transpose lanes
	                    var TPiLane = T[PI_INDEXES[laneIndex]];
	                    TPiLane.high = tMsw;
	                    TPiLane.low  = tLsw;
	                }

	                // Rho pi at x = y = 0
	                var T0 = T[0];
	                var state0 = state[0];
	                T0.high = state0.high;
	                T0.low  = state0.low;

	                // Chi
	                for (var x = 0; x < 5; x++) {
	                    for (var y = 0; y < 5; y++) {
	                        // Shortcuts
	                        var laneIndex = x + 5 * y;
	                        var lane = state[laneIndex];
	                        var TLane = T[laneIndex];
	                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];
	                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];

	                        // Mix rows
	                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);
	                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);
	                    }
	                }

	                // Iota
	                var lane = state[0];
	                var roundConstant = ROUND_CONSTANTS[round];
	                lane.high ^= roundConstant.high;
	                lane.low  ^= roundConstant.low;;
	            }
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;
	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;
	            var blockSizeBits = this.blockSize * 32;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);
	            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Shortcuts
	            var state = this._state;
	            var outputLengthBytes = this.cfg.outputLength / 8;
	            var outputLengthLanes = outputLengthBytes / 8;

	            // Squeeze
	            var hashWords = [];
	            for (var i = 0; i < outputLengthLanes; i++) {
	                // Shortcuts
	                var lane = state[i];
	                var laneMsw = lane.high;
	                var laneLsw = lane.low;

	                // Swap endian
	                laneMsw = (
	                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |
	                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)
	                );
	                laneLsw = (
	                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |
	                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)
	                );

	                // Squeeze state to retrieve hash
	                hashWords.push(laneLsw);
	                hashWords.push(laneMsw);
	            }

	            // Return final computed hash
	            return new WordArray.init(hashWords, outputLengthBytes);
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);

	            var state = clone._state = this._state.slice(0);
	            for (var i = 0; i < 25; i++) {
	                state[i] = state[i].clone();
	            }

	            return clone;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA3('message');
	     *     var hash = CryptoJS.SHA3(wordArray);
	     */
	    C.SHA3 = Hasher._createHelper(SHA3);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA3(message, key);
	     */
	    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);
	}(Math));


	return CryptoJS.SHA3;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha384.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha384.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"), __webpack_require__(/*! ./sha512 */ "./node_modules/crypto-js/sha512.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;
	    var SHA512 = C_algo.SHA512;

	    /**
	     * SHA-384 hash algorithm.
	     */
	    var SHA384 = C_algo.SHA384 = SHA512.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),
	                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),
	                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),
	                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)
	            ]);
	        },

	        _doFinalize: function () {
	            var hash = SHA512._doFinalize.call(this);

	            hash.sigBytes -= 16;

	            return hash;
	        }
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA384('message');
	     *     var hash = CryptoJS.SHA384(wordArray);
	     */
	    C.SHA384 = SHA512._createHelper(SHA384);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA384(message, key);
	     */
	    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);
	}());


	return CryptoJS.SHA384;

}));

/***/ }),

/***/ "./node_modules/crypto-js/sha512.js":
/*!******************************************!*\
  !*** ./node_modules/crypto-js/sha512.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./x64-core */ "./node_modules/crypto-js/x64-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Hasher = C_lib.Hasher;
	    var C_x64 = C.x64;
	    var X64Word = C_x64.Word;
	    var X64WordArray = C_x64.WordArray;
	    var C_algo = C.algo;

	    function X64Word_create() {
	        return X64Word.create.apply(X64Word, arguments);
	    }

	    // Constants
	    var K = [
	        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),
	        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),
	        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),
	        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),
	        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),
	        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),
	        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),
	        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),
	        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),
	        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),
	        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),
	        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),
	        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),
	        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),
	        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),
	        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),
	        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),
	        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),
	        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),
	        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),
	        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),
	        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),
	        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),
	        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),
	        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),
	        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),
	        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),
	        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),
	        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),
	        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),
	        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),
	        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),
	        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),
	        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),
	        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),
	        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),
	        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),
	        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),
	        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),
	        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)
	    ];

	    // Reusable objects
	    var W = [];
	    (function () {
	        for (var i = 0; i < 80; i++) {
	            W[i] = X64Word_create();
	        }
	    }());

	    /**
	     * SHA-512 hash algorithm.
	     */
	    var SHA512 = C_algo.SHA512 = Hasher.extend({
	        _doReset: function () {
	            this._hash = new X64WordArray.init([
	                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),
	                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),
	                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),
	                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)
	            ]);
	        },

	        _doProcessBlock: function (M, offset) {
	            // Shortcuts
	            var H = this._hash.words;

	            var H0 = H[0];
	            var H1 = H[1];
	            var H2 = H[2];
	            var H3 = H[3];
	            var H4 = H[4];
	            var H5 = H[5];
	            var H6 = H[6];
	            var H7 = H[7];

	            var H0h = H0.high;
	            var H0l = H0.low;
	            var H1h = H1.high;
	            var H1l = H1.low;
	            var H2h = H2.high;
	            var H2l = H2.low;
	            var H3h = H3.high;
	            var H3l = H3.low;
	            var H4h = H4.high;
	            var H4l = H4.low;
	            var H5h = H5.high;
	            var H5l = H5.low;
	            var H6h = H6.high;
	            var H6l = H6.low;
	            var H7h = H7.high;
	            var H7l = H7.low;

	            // Working variables
	            var ah = H0h;
	            var al = H0l;
	            var bh = H1h;
	            var bl = H1l;
	            var ch = H2h;
	            var cl = H2l;
	            var dh = H3h;
	            var dl = H3l;
	            var eh = H4h;
	            var el = H4l;
	            var fh = H5h;
	            var fl = H5l;
	            var gh = H6h;
	            var gl = H6l;
	            var hh = H7h;
	            var hl = H7l;

	            // Rounds
	            for (var i = 0; i < 80; i++) {
	                // Shortcut
	                var Wi = W[i];

	                // Extend message
	                if (i < 16) {
	                    var Wih = Wi.high = M[offset + i * 2]     | 0;
	                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;
	                } else {
	                    // Gamma0
	                    var gamma0x  = W[i - 15];
	                    var gamma0xh = gamma0x.high;
	                    var gamma0xl = gamma0x.low;
	                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);
	                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));

	                    // Gamma1
	                    var gamma1x  = W[i - 2];
	                    var gamma1xh = gamma1x.high;
	                    var gamma1xl = gamma1x.low;
	                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);
	                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));

	                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	                    var Wi7  = W[i - 7];
	                    var Wi7h = Wi7.high;
	                    var Wi7l = Wi7.low;

	                    var Wi16  = W[i - 16];
	                    var Wi16h = Wi16.high;
	                    var Wi16l = Wi16.low;

	                    var Wil = gamma0l + Wi7l;
	                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);
	                    var Wil = Wil + gamma1l;
	                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);
	                    var Wil = Wil + Wi16l;
	                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);

	                    Wi.high = Wih;
	                    Wi.low  = Wil;
	                }

	                var chh  = (eh & fh) ^ (~eh & gh);
	                var chl  = (el & fl) ^ (~el & gl);
	                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);
	                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);

	                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));
	                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));
	                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));
	                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));

	                // t1 = h + sigma1 + ch + K[i] + W[i]
	                var Ki  = K[i];
	                var Kih = Ki.high;
	                var Kil = Ki.low;

	                var t1l = hl + sigma1l;
	                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);
	                var t1l = t1l + chl;
	                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);
	                var t1l = t1l + Kil;
	                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);
	                var t1l = t1l + Wil;
	                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);

	                // t2 = sigma0 + maj
	                var t2l = sigma0l + majl;
	                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);

	                // Update working variables
	                hh = gh;
	                hl = gl;
	                gh = fh;
	                gl = fl;
	                fh = eh;
	                fl = el;
	                el = (dl + t1l) | 0;
	                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;
	                dh = ch;
	                dl = cl;
	                ch = bh;
	                cl = bl;
	                bh = ah;
	                bl = al;
	                al = (t1l + t2l) | 0;
	                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;
	            }

	            // Intermediate hash value
	            H0l = H0.low  = (H0l + al);
	            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));
	            H1l = H1.low  = (H1l + bl);
	            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));
	            H2l = H2.low  = (H2l + cl);
	            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));
	            H3l = H3.low  = (H3l + dl);
	            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));
	            H4l = H4.low  = (H4l + el);
	            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));
	            H5l = H5.low  = (H5l + fl);
	            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));
	            H6l = H6.low  = (H6l + gl);
	            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));
	            H7l = H7.low  = (H7l + hl);
	            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));
	        },

	        _doFinalize: function () {
	            // Shortcuts
	            var data = this._data;
	            var dataWords = data.words;

	            var nBitsTotal = this._nDataBytes * 8;
	            var nBitsLeft = data.sigBytes * 8;

	            // Add padding
	            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
	            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;
	            data.sigBytes = dataWords.length * 4;

	            // Hash final blocks
	            this._process();

	            // Convert hash to 32-bit word array before returning
	            var hash = this._hash.toX32();

	            // Return final computed hash
	            return hash;
	        },

	        clone: function () {
	            var clone = Hasher.clone.call(this);
	            clone._hash = this._hash.clone();

	            return clone;
	        },

	        blockSize: 1024/32
	    });

	    /**
	     * Shortcut function to the hasher's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     *
	     * @return {WordArray} The hash.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hash = CryptoJS.SHA512('message');
	     *     var hash = CryptoJS.SHA512(wordArray);
	     */
	    C.SHA512 = Hasher._createHelper(SHA512);

	    /**
	     * Shortcut function to the HMAC's object interface.
	     *
	     * @param {WordArray|string} message The message to hash.
	     * @param {WordArray|string} key The secret key.
	     *
	     * @return {WordArray} The HMAC.
	     *
	     * @static
	     *
	     * @example
	     *
	     *     var hmac = CryptoJS.HmacSHA512(message, key);
	     */
	    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
	}());


	return CryptoJS.SHA512;

}));

/***/ }),

/***/ "./node_modules/crypto-js/tripledes.js":
/*!*********************************************!*\
  !*** ./node_modules/crypto-js/tripledes.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory, undef) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"), __webpack_require__(/*! ./enc-base64 */ "./node_modules/crypto-js/enc-base64.js"), __webpack_require__(/*! ./md5 */ "./node_modules/crypto-js/md5.js"), __webpack_require__(/*! ./evpkdf */ "./node_modules/crypto-js/evpkdf.js"), __webpack_require__(/*! ./cipher-core */ "./node_modules/crypto-js/cipher-core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function () {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var WordArray = C_lib.WordArray;
	    var BlockCipher = C_lib.BlockCipher;
	    var C_algo = C.algo;

	    // Permuted Choice 1 constants
	    var PC1 = [
	        57, 49, 41, 33, 25, 17, 9,  1,
	        58, 50, 42, 34, 26, 18, 10, 2,
	        59, 51, 43, 35, 27, 19, 11, 3,
	        60, 52, 44, 36, 63, 55, 47, 39,
	        31, 23, 15, 7,  62, 54, 46, 38,
	        30, 22, 14, 6,  61, 53, 45, 37,
	        29, 21, 13, 5,  28, 20, 12, 4
	    ];

	    // Permuted Choice 2 constants
	    var PC2 = [
	        14, 17, 11, 24, 1,  5,
	        3,  28, 15, 6,  21, 10,
	        23, 19, 12, 4,  26, 8,
	        16, 7,  27, 20, 13, 2,
	        41, 52, 31, 37, 47, 55,
	        30, 40, 51, 45, 33, 48,
	        44, 49, 39, 56, 34, 53,
	        46, 42, 50, 36, 29, 32
	    ];

	    // Cumulative bit shift constants
	    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

	    // SBOXes and round permutation constants
	    var SBOX_P = [
	        {
	            0x0: 0x808200,
	            0x10000000: 0x8000,
	            0x20000000: 0x808002,
	            0x30000000: 0x2,
	            0x40000000: 0x200,
	            0x50000000: 0x808202,
	            0x60000000: 0x800202,
	            0x70000000: 0x800000,
	            0x80000000: 0x202,
	            0x90000000: 0x800200,
	            0xa0000000: 0x8200,
	            0xb0000000: 0x808000,
	            0xc0000000: 0x8002,
	            0xd0000000: 0x800002,
	            0xe0000000: 0x0,
	            0xf0000000: 0x8202,
	            0x8000000: 0x0,
	            0x18000000: 0x808202,
	            0x28000000: 0x8202,
	            0x38000000: 0x8000,
	            0x48000000: 0x808200,
	            0x58000000: 0x200,
	            0x68000000: 0x808002,
	            0x78000000: 0x2,
	            0x88000000: 0x800200,
	            0x98000000: 0x8200,
	            0xa8000000: 0x808000,
	            0xb8000000: 0x800202,
	            0xc8000000: 0x800002,
	            0xd8000000: 0x8002,
	            0xe8000000: 0x202,
	            0xf8000000: 0x800000,
	            0x1: 0x8000,
	            0x10000001: 0x2,
	            0x20000001: 0x808200,
	            0x30000001: 0x800000,
	            0x40000001: 0x808002,
	            0x50000001: 0x8200,
	            0x60000001: 0x200,
	            0x70000001: 0x800202,
	            0x80000001: 0x808202,
	            0x90000001: 0x808000,
	            0xa0000001: 0x800002,
	            0xb0000001: 0x8202,
	            0xc0000001: 0x202,
	            0xd0000001: 0x800200,
	            0xe0000001: 0x8002,
	            0xf0000001: 0x0,
	            0x8000001: 0x808202,
	            0x18000001: 0x808000,
	            0x28000001: 0x800000,
	            0x38000001: 0x200,
	            0x48000001: 0x8000,
	            0x58000001: 0x800002,
	            0x68000001: 0x2,
	            0x78000001: 0x8202,
	            0x88000001: 0x8002,
	            0x98000001: 0x800202,
	            0xa8000001: 0x202,
	            0xb8000001: 0x808200,
	            0xc8000001: 0x800200,
	            0xd8000001: 0x0,
	            0xe8000001: 0x8200,
	            0xf8000001: 0x808002
	        },
	        {
	            0x0: 0x40084010,
	            0x1000000: 0x4000,
	            0x2000000: 0x80000,
	            0x3000000: 0x40080010,
	            0x4000000: 0x40000010,
	            0x5000000: 0x40084000,
	            0x6000000: 0x40004000,
	            0x7000000: 0x10,
	            0x8000000: 0x84000,
	            0x9000000: 0x40004010,
	            0xa000000: 0x40000000,
	            0xb000000: 0x84010,
	            0xc000000: 0x80010,
	            0xd000000: 0x0,
	            0xe000000: 0x4010,
	            0xf000000: 0x40080000,
	            0x800000: 0x40004000,
	            0x1800000: 0x84010,
	            0x2800000: 0x10,
	            0x3800000: 0x40004010,
	            0x4800000: 0x40084010,
	            0x5800000: 0x40000000,
	            0x6800000: 0x80000,
	            0x7800000: 0x40080010,
	            0x8800000: 0x80010,
	            0x9800000: 0x0,
	            0xa800000: 0x4000,
	            0xb800000: 0x40080000,
	            0xc800000: 0x40000010,
	            0xd800000: 0x84000,
	            0xe800000: 0x40084000,
	            0xf800000: 0x4010,
	            0x10000000: 0x0,
	            0x11000000: 0x40080010,
	            0x12000000: 0x40004010,
	            0x13000000: 0x40084000,
	            0x14000000: 0x40080000,
	            0x15000000: 0x10,
	            0x16000000: 0x84010,
	            0x17000000: 0x4000,
	            0x18000000: 0x4010,
	            0x19000000: 0x80000,
	            0x1a000000: 0x80010,
	            0x1b000000: 0x40000010,
	            0x1c000000: 0x84000,
	            0x1d000000: 0x40004000,
	            0x1e000000: 0x40000000,
	            0x1f000000: 0x40084010,
	            0x10800000: 0x84010,
	            0x11800000: 0x80000,
	            0x12800000: 0x40080000,
	            0x13800000: 0x4000,
	            0x14800000: 0x40004000,
	            0x15800000: 0x40084010,
	            0x16800000: 0x10,
	            0x17800000: 0x40000000,
	            0x18800000: 0x40084000,
	            0x19800000: 0x40000010,
	            0x1a800000: 0x40004010,
	            0x1b800000: 0x80010,
	            0x1c800000: 0x0,
	            0x1d800000: 0x4010,
	            0x1e800000: 0x40080010,
	            0x1f800000: 0x84000
	        },
	        {
	            0x0: 0x104,
	            0x100000: 0x0,
	            0x200000: 0x4000100,
	            0x300000: 0x10104,
	            0x400000: 0x10004,
	            0x500000: 0x4000004,
	            0x600000: 0x4010104,
	            0x700000: 0x4010000,
	            0x800000: 0x4000000,
	            0x900000: 0x4010100,
	            0xa00000: 0x10100,
	            0xb00000: 0x4010004,
	            0xc00000: 0x4000104,
	            0xd00000: 0x10000,
	            0xe00000: 0x4,
	            0xf00000: 0x100,
	            0x80000: 0x4010100,
	            0x180000: 0x4010004,
	            0x280000: 0x0,
	            0x380000: 0x4000100,
	            0x480000: 0x4000004,
	            0x580000: 0x10000,
	            0x680000: 0x10004,
	            0x780000: 0x104,
	            0x880000: 0x4,
	            0x980000: 0x100,
	            0xa80000: 0x4010000,
	            0xb80000: 0x10104,
	            0xc80000: 0x10100,
	            0xd80000: 0x4000104,
	            0xe80000: 0x4010104,
	            0xf80000: 0x4000000,
	            0x1000000: 0x4010100,
	            0x1100000: 0x10004,
	            0x1200000: 0x10000,
	            0x1300000: 0x4000100,
	            0x1400000: 0x100,
	            0x1500000: 0x4010104,
	            0x1600000: 0x4000004,
	            0x1700000: 0x0,
	            0x1800000: 0x4000104,
	            0x1900000: 0x4000000,
	            0x1a00000: 0x4,
	            0x1b00000: 0x10100,
	            0x1c00000: 0x4010000,
	            0x1d00000: 0x104,
	            0x1e00000: 0x10104,
	            0x1f00000: 0x4010004,
	            0x1080000: 0x4000000,
	            0x1180000: 0x104,
	            0x1280000: 0x4010100,
	            0x1380000: 0x0,
	            0x1480000: 0x10004,
	            0x1580000: 0x4000100,
	            0x1680000: 0x100,
	            0x1780000: 0x4010004,
	            0x1880000: 0x10000,
	            0x1980000: 0x4010104,
	            0x1a80000: 0x10104,
	            0x1b80000: 0x4000004,
	            0x1c80000: 0x4000104,
	            0x1d80000: 0x4010000,
	            0x1e80000: 0x4,
	            0x1f80000: 0x10100
	        },
	        {
	            0x0: 0x80401000,
	            0x10000: 0x80001040,
	            0x20000: 0x401040,
	            0x30000: 0x80400000,
	            0x40000: 0x0,
	            0x50000: 0x401000,
	            0x60000: 0x80000040,
	            0x70000: 0x400040,
	            0x80000: 0x80000000,
	            0x90000: 0x400000,
	            0xa0000: 0x40,
	            0xb0000: 0x80001000,
	            0xc0000: 0x80400040,
	            0xd0000: 0x1040,
	            0xe0000: 0x1000,
	            0xf0000: 0x80401040,
	            0x8000: 0x80001040,
	            0x18000: 0x40,
	            0x28000: 0x80400040,
	            0x38000: 0x80001000,
	            0x48000: 0x401000,
	            0x58000: 0x80401040,
	            0x68000: 0x0,
	            0x78000: 0x80400000,
	            0x88000: 0x1000,
	            0x98000: 0x80401000,
	            0xa8000: 0x400000,
	            0xb8000: 0x1040,
	            0xc8000: 0x80000000,
	            0xd8000: 0x400040,
	            0xe8000: 0x401040,
	            0xf8000: 0x80000040,
	            0x100000: 0x400040,
	            0x110000: 0x401000,
	            0x120000: 0x80000040,
	            0x130000: 0x0,
	            0x140000: 0x1040,
	            0x150000: 0x80400040,
	            0x160000: 0x80401000,
	            0x170000: 0x80001040,
	            0x180000: 0x80401040,
	            0x190000: 0x80000000,
	            0x1a0000: 0x80400000,
	            0x1b0000: 0x401040,
	            0x1c0000: 0x80001000,
	            0x1d0000: 0x400000,
	            0x1e0000: 0x40,
	            0x1f0000: 0x1000,
	            0x108000: 0x80400000,
	            0x118000: 0x80401040,
	            0x128000: 0x0,
	            0x138000: 0x401000,
	            0x148000: 0x400040,
	            0x158000: 0x80000000,
	            0x168000: 0x80001040,
	            0x178000: 0x40,
	            0x188000: 0x80000040,
	            0x198000: 0x1000,
	            0x1a8000: 0x80001000,
	            0x1b8000: 0x80400040,
	            0x1c8000: 0x1040,
	            0x1d8000: 0x80401000,
	            0x1e8000: 0x400000,
	            0x1f8000: 0x401040
	        },
	        {
	            0x0: 0x80,
	            0x1000: 0x1040000,
	            0x2000: 0x40000,
	            0x3000: 0x20000000,
	            0x4000: 0x20040080,
	            0x5000: 0x1000080,
	            0x6000: 0x21000080,
	            0x7000: 0x40080,
	            0x8000: 0x1000000,
	            0x9000: 0x20040000,
	            0xa000: 0x20000080,
	            0xb000: 0x21040080,
	            0xc000: 0x21040000,
	            0xd000: 0x0,
	            0xe000: 0x1040080,
	            0xf000: 0x21000000,
	            0x800: 0x1040080,
	            0x1800: 0x21000080,
	            0x2800: 0x80,
	            0x3800: 0x1040000,
	            0x4800: 0x40000,
	            0x5800: 0x20040080,
	            0x6800: 0x21040000,
	            0x7800: 0x20000000,
	            0x8800: 0x20040000,
	            0x9800: 0x0,
	            0xa800: 0x21040080,
	            0xb800: 0x1000080,
	            0xc800: 0x20000080,
	            0xd800: 0x21000000,
	            0xe800: 0x1000000,
	            0xf800: 0x40080,
	            0x10000: 0x40000,
	            0x11000: 0x80,
	            0x12000: 0x20000000,
	            0x13000: 0x21000080,
	            0x14000: 0x1000080,
	            0x15000: 0x21040000,
	            0x16000: 0x20040080,
	            0x17000: 0x1000000,
	            0x18000: 0x21040080,
	            0x19000: 0x21000000,
	            0x1a000: 0x1040000,
	            0x1b000: 0x20040000,
	            0x1c000: 0x40080,
	            0x1d000: 0x20000080,
	            0x1e000: 0x0,
	            0x1f000: 0x1040080,
	            0x10800: 0x21000080,
	            0x11800: 0x1000000,
	            0x12800: 0x1040000,
	            0x13800: 0x20040080,
	            0x14800: 0x20000000,
	            0x15800: 0x1040080,
	            0x16800: 0x80,
	            0x17800: 0x21040000,
	            0x18800: 0x40080,
	            0x19800: 0x21040080,
	            0x1a800: 0x0,
	            0x1b800: 0x21000000,
	            0x1c800: 0x1000080,
	            0x1d800: 0x40000,
	            0x1e800: 0x20040000,
	            0x1f800: 0x20000080
	        },
	        {
	            0x0: 0x10000008,
	            0x100: 0x2000,
	            0x200: 0x10200000,
	            0x300: 0x10202008,
	            0x400: 0x10002000,
	            0x500: 0x200000,
	            0x600: 0x200008,
	            0x700: 0x10000000,
	            0x800: 0x0,
	            0x900: 0x10002008,
	            0xa00: 0x202000,
	            0xb00: 0x8,
	            0xc00: 0x10200008,
	            0xd00: 0x202008,
	            0xe00: 0x2008,
	            0xf00: 0x10202000,
	            0x80: 0x10200000,
	            0x180: 0x10202008,
	            0x280: 0x8,
	            0x380: 0x200000,
	            0x480: 0x202008,
	            0x580: 0x10000008,
	            0x680: 0x10002000,
	            0x780: 0x2008,
	            0x880: 0x200008,
	            0x980: 0x2000,
	            0xa80: 0x10002008,
	            0xb80: 0x10200008,
	            0xc80: 0x0,
	            0xd80: 0x10202000,
	            0xe80: 0x202000,
	            0xf80: 0x10000000,
	            0x1000: 0x10002000,
	            0x1100: 0x10200008,
	            0x1200: 0x10202008,
	            0x1300: 0x2008,
	            0x1400: 0x200000,
	            0x1500: 0x10000000,
	            0x1600: 0x10000008,
	            0x1700: 0x202000,
	            0x1800: 0x202008,
	            0x1900: 0x0,
	            0x1a00: 0x8,
	            0x1b00: 0x10200000,
	            0x1c00: 0x2000,
	            0x1d00: 0x10002008,
	            0x1e00: 0x10202000,
	            0x1f00: 0x200008,
	            0x1080: 0x8,
	            0x1180: 0x202000,
	            0x1280: 0x200000,
	            0x1380: 0x10000008,
	            0x1480: 0x10002000,
	            0x1580: 0x2008,
	            0x1680: 0x10202008,
	            0x1780: 0x10200000,
	            0x1880: 0x10202000,
	            0x1980: 0x10200008,
	            0x1a80: 0x2000,
	            0x1b80: 0x202008,
	            0x1c80: 0x200008,
	            0x1d80: 0x0,
	            0x1e80: 0x10000000,
	            0x1f80: 0x10002008
	        },
	        {
	            0x0: 0x100000,
	            0x10: 0x2000401,
	            0x20: 0x400,
	            0x30: 0x100401,
	            0x40: 0x2100401,
	            0x50: 0x0,
	            0x60: 0x1,
	            0x70: 0x2100001,
	            0x80: 0x2000400,
	            0x90: 0x100001,
	            0xa0: 0x2000001,
	            0xb0: 0x2100400,
	            0xc0: 0x2100000,
	            0xd0: 0x401,
	            0xe0: 0x100400,
	            0xf0: 0x2000000,
	            0x8: 0x2100001,
	            0x18: 0x0,
	            0x28: 0x2000401,
	            0x38: 0x2100400,
	            0x48: 0x100000,
	            0x58: 0x2000001,
	            0x68: 0x2000000,
	            0x78: 0x401,
	            0x88: 0x100401,
	            0x98: 0x2000400,
	            0xa8: 0x2100000,
	            0xb8: 0x100001,
	            0xc8: 0x400,
	            0xd8: 0x2100401,
	            0xe8: 0x1,
	            0xf8: 0x100400,
	            0x100: 0x2000000,
	            0x110: 0x100000,
	            0x120: 0x2000401,
	            0x130: 0x2100001,
	            0x140: 0x100001,
	            0x150: 0x2000400,
	            0x160: 0x2100400,
	            0x170: 0x100401,
	            0x180: 0x401,
	            0x190: 0x2100401,
	            0x1a0: 0x100400,
	            0x1b0: 0x1,
	            0x1c0: 0x0,
	            0x1d0: 0x2100000,
	            0x1e0: 0x2000001,
	            0x1f0: 0x400,
	            0x108: 0x100400,
	            0x118: 0x2000401,
	            0x128: 0x2100001,
	            0x138: 0x1,
	            0x148: 0x2000000,
	            0x158: 0x100000,
	            0x168: 0x401,
	            0x178: 0x2100400,
	            0x188: 0x2000001,
	            0x198: 0x2100000,
	            0x1a8: 0x0,
	            0x1b8: 0x2100401,
	            0x1c8: 0x100401,
	            0x1d8: 0x400,
	            0x1e8: 0x2000400,
	            0x1f8: 0x100001
	        },
	        {
	            0x0: 0x8000820,
	            0x1: 0x20000,
	            0x2: 0x8000000,
	            0x3: 0x20,
	            0x4: 0x20020,
	            0x5: 0x8020820,
	            0x6: 0x8020800,
	            0x7: 0x800,
	            0x8: 0x8020000,
	            0x9: 0x8000800,
	            0xa: 0x20800,
	            0xb: 0x8020020,
	            0xc: 0x820,
	            0xd: 0x0,
	            0xe: 0x8000020,
	            0xf: 0x20820,
	            0x80000000: 0x800,
	            0x80000001: 0x8020820,
	            0x80000002: 0x8000820,
	            0x80000003: 0x8000000,
	            0x80000004: 0x8020000,
	            0x80000005: 0x20800,
	            0x80000006: 0x20820,
	            0x80000007: 0x20,
	            0x80000008: 0x8000020,
	            0x80000009: 0x820,
	            0x8000000a: 0x20020,
	            0x8000000b: 0x8020800,
	            0x8000000c: 0x0,
	            0x8000000d: 0x8020020,
	            0x8000000e: 0x8000800,
	            0x8000000f: 0x20000,
	            0x10: 0x20820,
	            0x11: 0x8020800,
	            0x12: 0x20,
	            0x13: 0x800,
	            0x14: 0x8000800,
	            0x15: 0x8000020,
	            0x16: 0x8020020,
	            0x17: 0x20000,
	            0x18: 0x0,
	            0x19: 0x20020,
	            0x1a: 0x8020000,
	            0x1b: 0x8000820,
	            0x1c: 0x8020820,
	            0x1d: 0x20800,
	            0x1e: 0x820,
	            0x1f: 0x8000000,
	            0x80000010: 0x20000,
	            0x80000011: 0x800,
	            0x80000012: 0x8020020,
	            0x80000013: 0x20820,
	            0x80000014: 0x20,
	            0x80000015: 0x8020000,
	            0x80000016: 0x8000000,
	            0x80000017: 0x8000820,
	            0x80000018: 0x8020820,
	            0x80000019: 0x8000020,
	            0x8000001a: 0x8000800,
	            0x8000001b: 0x0,
	            0x8000001c: 0x20800,
	            0x8000001d: 0x820,
	            0x8000001e: 0x20020,
	            0x8000001f: 0x8020800
	        }
	    ];

	    // Masks that select the SBOX input
	    var SBOX_MASK = [
	        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,
	        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f
	    ];

	    /**
	     * DES block cipher algorithm.
	     */
	    var DES = C_algo.DES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;

	            // Select 56 bits according to PC1
	            var keyBits = [];
	            for (var i = 0; i < 56; i++) {
	                var keyBitPos = PC1[i] - 1;
	                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;
	            }

	            // Assemble 16 subkeys
	            var subKeys = this._subKeys = [];
	            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {
	                // Create subkey
	                var subKey = subKeys[nSubKey] = [];

	                // Shortcut
	                var bitShift = BIT_SHIFTS[nSubKey];

	                // Select 48 bits according to PC2
	                for (var i = 0; i < 24; i++) {
	                    // Select from the left 28 key bits
	                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);

	                    // Select from the right 28 key bits
	                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);
	                }

	                // Since each subkey is applied to an expanded 32-bit input,
	                // the subkey can be broken into 8 values scaled to 32-bits,
	                // which allows the key to be used without expansion
	                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);
	                for (var i = 1; i < 7; i++) {
	                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);
	                }
	                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);
	            }

	            // Compute inverse subkeys
	            var invSubKeys = this._invSubKeys = [];
	            for (var i = 0; i < 16; i++) {
	                invSubKeys[i] = subKeys[15 - i];
	            }
	        },

	        encryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._subKeys);
	        },

	        decryptBlock: function (M, offset) {
	            this._doCryptBlock(M, offset, this._invSubKeys);
	        },

	        _doCryptBlock: function (M, offset, subKeys) {
	            // Get input
	            this._lBlock = M[offset];
	            this._rBlock = M[offset + 1];

	            // Initial permutation
	            exchangeLR.call(this, 4,  0x0f0f0f0f);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeLR.call(this, 1,  0x55555555);

	            // Rounds
	            for (var round = 0; round < 16; round++) {
	                // Shortcuts
	                var subKey = subKeys[round];
	                var lBlock = this._lBlock;
	                var rBlock = this._rBlock;

	                // Feistel function
	                var f = 0;
	                for (var i = 0; i < 8; i++) {
	                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
	                }
	                this._lBlock = rBlock;
	                this._rBlock = lBlock ^ f;
	            }

	            // Undo swap from last round
	            var t = this._lBlock;
	            this._lBlock = this._rBlock;
	            this._rBlock = t;

	            // Final permutation
	            exchangeLR.call(this, 1,  0x55555555);
	            exchangeRL.call(this, 8,  0x00ff00ff);
	            exchangeRL.call(this, 2,  0x33333333);
	            exchangeLR.call(this, 16, 0x0000ffff);
	            exchangeLR.call(this, 4,  0x0f0f0f0f);

	            // Set output
	            M[offset] = this._lBlock;
	            M[offset + 1] = this._rBlock;
	        },

	        keySize: 64/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    // Swap bits across the left and right words
	    function exchangeLR(offset, mask) {
	        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;
	        this._rBlock ^= t;
	        this._lBlock ^= t << offset;
	    }

	    function exchangeRL(offset, mask) {
	        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;
	        this._lBlock ^= t;
	        this._rBlock ^= t << offset;
	    }

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
	     */
	    C.DES = BlockCipher._createHelper(DES);

	    /**
	     * Triple-DES block cipher algorithm.
	     */
	    var TripleDES = C_algo.TripleDES = BlockCipher.extend({
	        _doReset: function () {
	            // Shortcuts
	            var key = this._key;
	            var keyWords = key.words;

	            // Create DES instances
	            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));
	            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));
	            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));
	        },

	        encryptBlock: function (M, offset) {
	            this._des1.encryptBlock(M, offset);
	            this._des2.decryptBlock(M, offset);
	            this._des3.encryptBlock(M, offset);
	        },

	        decryptBlock: function (M, offset) {
	            this._des3.decryptBlock(M, offset);
	            this._des2.encryptBlock(M, offset);
	            this._des1.decryptBlock(M, offset);
	        },

	        keySize: 192/32,

	        ivSize: 64/32,

	        blockSize: 64/32
	    });

	    /**
	     * Shortcut functions to the cipher's object interface.
	     *
	     * @example
	     *
	     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
	     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
	     */
	    C.TripleDES = BlockCipher._createHelper(TripleDES);
	}());


	return CryptoJS.TripleDES;

}));

/***/ }),

/***/ "./node_modules/crypto-js/x64-core.js":
/*!********************************************!*\
  !*** ./node_modules/crypto-js/x64-core.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

;(function (root, factory) {
	if (true) {
		// CommonJS
		module.exports = exports = factory(__webpack_require__(/*! ./core */ "./node_modules/crypto-js/core.js"));
	}
	else {}
}(this, function (CryptoJS) {

	(function (undefined) {
	    // Shortcuts
	    var C = CryptoJS;
	    var C_lib = C.lib;
	    var Base = C_lib.Base;
	    var X32WordArray = C_lib.WordArray;

	    /**
	     * x64 namespace.
	     */
	    var C_x64 = C.x64 = {};

	    /**
	     * A 64-bit word.
	     */
	    var X64Word = C_x64.Word = Base.extend({
	        /**
	         * Initializes a newly created 64-bit word.
	         *
	         * @param {number} high The high 32 bits.
	         * @param {number} low The low 32 bits.
	         *
	         * @example
	         *
	         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
	         */
	        init: function (high, low) {
	            this.high = high;
	            this.low = low;
	        }

	        /**
	         * Bitwise NOTs this word.
	         *
	         * @return {X64Word} A new x64-Word object after negating.
	         *
	         * @example
	         *
	         *     var negated = x64Word.not();
	         */
	        // not: function () {
	            // var high = ~this.high;
	            // var low = ~this.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ANDs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to AND with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ANDing.
	         *
	         * @example
	         *
	         *     var anded = x64Word.and(anotherX64Word);
	         */
	        // and: function (word) {
	            // var high = this.high & word.high;
	            // var low = this.low & word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise ORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to OR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after ORing.
	         *
	         * @example
	         *
	         *     var ored = x64Word.or(anotherX64Word);
	         */
	        // or: function (word) {
	            // var high = this.high | word.high;
	            // var low = this.low | word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Bitwise XORs this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to XOR with this word.
	         *
	         * @return {X64Word} A new x64-Word object after XORing.
	         *
	         * @example
	         *
	         *     var xored = x64Word.xor(anotherX64Word);
	         */
	        // xor: function (word) {
	            // var high = this.high ^ word.high;
	            // var low = this.low ^ word.low;

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the left.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftL(25);
	         */
	        // shiftL: function (n) {
	            // if (n < 32) {
	                // var high = (this.high << n) | (this.low >>> (32 - n));
	                // var low = this.low << n;
	            // } else {
	                // var high = this.low << (n - 32);
	                // var low = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Shifts this word n bits to the right.
	         *
	         * @param {number} n The number of bits to shift.
	         *
	         * @return {X64Word} A new x64-Word object after shifting.
	         *
	         * @example
	         *
	         *     var shifted = x64Word.shiftR(7);
	         */
	        // shiftR: function (n) {
	            // if (n < 32) {
	                // var low = (this.low >>> n) | (this.high << (32 - n));
	                // var high = this.high >>> n;
	            // } else {
	                // var low = this.high >>> (n - 32);
	                // var high = 0;
	            // }

	            // return X64Word.create(high, low);
	        // },

	        /**
	         * Rotates this word n bits to the left.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotL(25);
	         */
	        // rotL: function (n) {
	            // return this.shiftL(n).or(this.shiftR(64 - n));
	        // },

	        /**
	         * Rotates this word n bits to the right.
	         *
	         * @param {number} n The number of bits to rotate.
	         *
	         * @return {X64Word} A new x64-Word object after rotating.
	         *
	         * @example
	         *
	         *     var rotated = x64Word.rotR(7);
	         */
	        // rotR: function (n) {
	            // return this.shiftR(n).or(this.shiftL(64 - n));
	        // },

	        /**
	         * Adds this word with the passed word.
	         *
	         * @param {X64Word} word The x64-Word to add with this word.
	         *
	         * @return {X64Word} A new x64-Word object after adding.
	         *
	         * @example
	         *
	         *     var added = x64Word.add(anotherX64Word);
	         */
	        // add: function (word) {
	            // var low = (this.low + word.low) | 0;
	            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
	            // var high = (this.high + word.high + carry) | 0;

	            // return X64Word.create(high, low);
	        // }
	    });

	    /**
	     * An array of 64-bit words.
	     *
	     * @property {Array} words The array of CryptoJS.x64.Word objects.
	     * @property {number} sigBytes The number of significant bytes in this word array.
	     */
	    var X64WordArray = C_x64.WordArray = Base.extend({
	        /**
	         * Initializes a newly created word array.
	         *
	         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
	         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
	         *
	         * @example
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create();
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ]);
	         *
	         *     var wordArray = CryptoJS.x64.WordArray.create([
	         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
	         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
	         *     ], 10);
	         */
	        init: function (words, sigBytes) {
	            words = this.words = words || [];

	            if (sigBytes != undefined) {
	                this.sigBytes = sigBytes;
	            } else {
	                this.sigBytes = words.length * 8;
	            }
	        },

	        /**
	         * Converts this 64-bit word array to a 32-bit word array.
	         *
	         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
	         *
	         * @example
	         *
	         *     var x32WordArray = x64WordArray.toX32();
	         */
	        toX32: function () {
	            // Shortcuts
	            var x64Words = this.words;
	            var x64WordsLength = x64Words.length;

	            // Convert
	            var x32Words = [];
	            for (var i = 0; i < x64WordsLength; i++) {
	                var x64Word = x64Words[i];
	                x32Words.push(x64Word.high);
	                x32Words.push(x64Word.low);
	            }

	            return X32WordArray.create(x32Words, this.sigBytes);
	        },

	        /**
	         * Creates a copy of this word array.
	         *
	         * @return {X64WordArray} The clone.
	         *
	         * @example
	         *
	         *     var clone = x64WordArray.clone();
	         */
	        clone: function () {
	            var clone = Base.clone.call(this);

	            // Clone "words" array
	            var words = clone.words = this.words.slice(0);

	            // Clone each X64Word object
	            var wordsLength = words.length;
	            for (var i = 0; i < wordsLength; i++) {
	                words[i] = words[i].clone();
	            }

	            return clone;
	        }
	    });
	}());


	return CryptoJS;

}));

/***/ }),

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * This is the web browser implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(/*! ./debug */ "./node_modules/debug/src/debug.js");
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = 'undefined' != typeof chrome
               && 'undefined' != typeof chrome.storage
                  ? chrome.storage.local
                  : localstorage();

/**
 * Colors.
 */

exports.colors = [
  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',
  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',
  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',
  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',
  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',
  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',
  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',
  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',
  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',
  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',
  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
    return true;
  }

  // Internet Explorer and Edge do not support colors.
  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  }

  // is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
    // is firebug? http://stackoverflow.com/a/398120/376773
    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
    // is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
    // double check webkit in userAgent just in case we are in a worker
    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

exports.formatters.j = function(v) {
  try {
    return JSON.stringify(v);
  } catch (err) {
    return '[UnexpectedJSONParseError]: ' + err.message;
  }
};


/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var useColors = this.useColors;

  args[0] = (useColors ? '%c' : '')
    + this.namespace
    + (useColors ? ' %c' : ' ')
    + args[0]
    + (useColors ? '%c ' : ' ')
    + '+' + exports.humanize(this.diff);

  if (!useColors) return;

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit')

  // the final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into
  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function(match) {
    if ('%%' === match) return;
    index++;
    if ('%c' === match) {
      // we only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });

  args.splice(lastC, 0, c);
}

/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */

function log() {
  // this hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'
  return 'object' === typeof console
    && console.log
    && Function.prototype.apply.call(console.log, console, arguments);
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  try {
    if (null == namespaces) {
      exports.storage.removeItem('debug');
    } else {
      exports.storage.debug = namespaces;
    }
  } catch(e) {}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  var r;
  try {
    r = exports.storage.debug;
  } catch(e) {}

  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = process.env.DEBUG;
  }

  return r;
}

/**
 * Enable namespaces listed in `localStorage.debug` initially.
 */

exports.enable(load());

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
  try {
    return window.localStorage;
  } catch (e) {}
}


/***/ }),

/***/ "./node_modules/debug/src/debug.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/debug.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
exports.coerce = coerce;
exports.disable = disable;
exports.enable = enable;
exports.enabled = enabled;
exports.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");

/**
 * Active `debug` instances.
 */
exports.instances = [];

/**
 * The currently active debug mode names, and names to skip.
 */

exports.names = [];
exports.skips = [];

/**
 * Map of special "%n" handling functions, for the debug "format" argument.
 *
 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
 */

exports.formatters = {};

/**
 * Select a color.
 * @param {String} namespace
 * @return {Number}
 * @api private
 */

function selectColor(namespace) {
  var hash = 0, i;

  for (i in namespace) {
    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
    hash |= 0; // Convert to 32bit integer
  }

  return exports.colors[Math.abs(hash) % exports.colors.length];
}

/**
 * Create a debugger with the given `namespace`.
 *
 * @param {String} namespace
 * @return {Function}
 * @api public
 */

function createDebug(namespace) {

  var prevTime;

  function debug() {
    // disabled?
    if (!debug.enabled) return;

    var self = debug;

    // set `diff` timestamp
    var curr = +new Date();
    var ms = curr - (prevTime || curr);
    self.diff = ms;
    self.prev = prevTime;
    self.curr = curr;
    prevTime = curr;

    // turn the `arguments` into a proper Array
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }

    args[0] = exports.coerce(args[0]);

    if ('string' !== typeof args[0]) {
      // anything else let's inspect with %O
      args.unshift('%O');
    }

    // apply any `formatters` transformations
    var index = 0;
    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
      // if we encounter an escaped % then don't increase the array index
      if (match === '%%') return match;
      index++;
      var formatter = exports.formatters[format];
      if ('function' === typeof formatter) {
        var val = args[index];
        match = formatter.call(self, val);

        // now we need to remove `args[index]` since it's inlined in the `format`
        args.splice(index, 1);
        index--;
      }
      return match;
    });

    // apply env-specific formatting (colors, etc.)
    exports.formatArgs.call(self, args);

    var logFn = debug.log || exports.log || console.log.bind(console);
    logFn.apply(self, args);
  }

  debug.namespace = namespace;
  debug.enabled = exports.enabled(namespace);
  debug.useColors = exports.useColors();
  debug.color = selectColor(namespace);
  debug.destroy = destroy;

  // env-specific initialization logic for debug instances
  if ('function' === typeof exports.init) {
    exports.init(debug);
  }

  exports.instances.push(debug);

  return debug;
}

function destroy () {
  var index = exports.instances.indexOf(this);
  if (index !== -1) {
    exports.instances.splice(index, 1);
    return true;
  } else {
    return false;
  }
}

/**
 * Enables a debug mode by namespaces. This can include modes
 * separated by a colon and wildcards.
 *
 * @param {String} namespaces
 * @api public
 */

function enable(namespaces) {
  exports.save(namespaces);

  exports.names = [];
  exports.skips = [];

  var i;
  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
  var len = split.length;

  for (i = 0; i < len; i++) {
    if (!split[i]) continue; // ignore empty strings
    namespaces = split[i].replace(/\*/g, '.*?');
    if (namespaces[0] === '-') {
      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
    } else {
      exports.names.push(new RegExp('^' + namespaces + '$'));
    }
  }

  for (i = 0; i < exports.instances.length; i++) {
    var instance = exports.instances[i];
    instance.enabled = exports.enabled(instance.namespace);
  }
}

/**
 * Disable debug output.
 *
 * @api public
 */

function disable() {
  exports.enable('');
}

/**
 * Returns true if the given mode name is enabled, false otherwise.
 *
 * @param {String} name
 * @return {Boolean}
 * @api public
 */

function enabled(name) {
  if (name[name.length - 1] === '*') {
    return true;
  }
  var i, len;
  for (i = 0, len = exports.skips.length; i < len; i++) {
    if (exports.skips[i].test(name)) {
      return false;
    }
  }
  for (i = 0, len = exports.names.length; i < len; i++) {
    if (exports.names[i].test(name)) {
      return true;
    }
  }
  return false;
}

/**
 * Coerce `val`.
 *
 * @param {Mixed} val
 * @return {Mixed}
 * @api private
 */

function coerce(val) {
  if (val instanceof Error) return val.stack || val.message;
  return val;
}


/***/ }),

/***/ "./node_modules/debug/src/index.js":
/*!*****************************************!*\
  !*** ./node_modules/debug/src/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Detect Electron renderer process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer') {
  module.exports = __webpack_require__(/*! ./browser.js */ "./node_modules/debug/src/browser.js");
} else {
  module.exports = __webpack_require__(/*! ./node.js */ "./node_modules/debug/src/node.js");
}


/***/ }),

/***/ "./node_modules/debug/src/node.js":
/*!****************************************!*\
  !*** ./node_modules/debug/src/node.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Module dependencies.
 */

var tty = __webpack_require__(/*! tty */ "tty");
var util = __webpack_require__(/*! util */ "util");

/**
 * This is the Node.js implementation of `debug()`.
 *
 * Expose `debug()` as the module.
 */

exports = module.exports = __webpack_require__(/*! ./debug */ "./node_modules/debug/src/debug.js");
exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;

/**
 * Colors.
 */

exports.colors = [ 6, 2, 3, 4, 5, 1 ];

try {
  var supportsColor = __webpack_require__(/*! supports-color */ "./node_modules/supports-color/index.js");
  if (supportsColor && supportsColor.level >= 2) {
    exports.colors = [
      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,
      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,
      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,
      205, 206, 207, 208, 209, 214, 215, 220, 221
    ];
  }
} catch (err) {
  // swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(function (key) {
  return /^debug_/i.test(key);
}).reduce(function (obj, key) {
  // camel-case
  var prop = key
    .substring(6)
    .toLowerCase()
    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });

  // coerce string value into JS value
  var val = process.env[key];
  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;
  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;
  else if (val === 'null') val = null;
  else val = Number(val);

  obj[prop] = val;
  return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
  return 'colors' in exports.inspectOpts
    ? Boolean(exports.inspectOpts.colors)
    : tty.isatty(process.stderr.fd);
}

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

exports.formatters.o = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts)
    .split('\n').map(function(str) {
      return str.trim()
    }).join(' ');
};

/**
 * Map %o to `util.inspect()`, allowing multiple lines if needed.
 */

exports.formatters.O = function(v) {
  this.inspectOpts.colors = this.useColors;
  return util.inspect(v, this.inspectOpts);
};

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
  var name = this.namespace;
  var useColors = this.useColors;

  if (useColors) {
    var c = this.color;
    var colorCode = '\u001b[3' + (c < 8 ? c : '8;5;' + c);
    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\u001b[0m';

    args[0] = prefix + args[0].split('\n').join('\n' + prefix);
    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\u001b[0m');
  } else {
    args[0] = getDate() + name + ' ' + args[0];
  }
}

function getDate() {
  if (exports.inspectOpts.hideDate) {
    return '';
  } else {
    return new Date().toISOString() + ' ';
  }
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log() {
  return process.stderr.write(util.format.apply(util, arguments) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */

function save(namespaces) {
  if (null == namespaces) {
    // If you set a process.env field to null or undefined, it gets cast to the
    // string 'null' or 'undefined'. Just delete instead.
    delete process.env.DEBUG;
  } else {
    process.env.DEBUG = namespaces;
  }
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
  return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init (debug) {
  debug.inspectOpts = {};

  var keys = Object.keys(exports.inspectOpts);
  for (var i = 0; i < keys.length; i++) {
    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
  }
}

/**
 * Enable namespaces listed in `process.env.DEBUG` initially.
 */

exports.enable(load());


/***/ }),

/***/ "./node_modules/minimist/index.js":
/*!****************************************!*\
  !*** ./node_modules/minimist/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (args, opts) {
    if (!opts) opts = {};
    
    var flags = { bools : {}, strings : {}, unknownFn: null };

    if (typeof opts['unknown'] === 'function') {
        flags.unknownFn = opts['unknown'];
    }

    if (typeof opts['boolean'] === 'boolean' && opts['boolean']) {
      flags.allBools = true;
    } else {
      [].concat(opts['boolean']).filter(Boolean).forEach(function (key) {
          flags.bools[key] = true;
      });
    }
    
    var aliases = {};
    Object.keys(opts.alias || {}).forEach(function (key) {
        aliases[key] = [].concat(opts.alias[key]);
        aliases[key].forEach(function (x) {
            aliases[x] = [key].concat(aliases[key].filter(function (y) {
                return x !== y;
            }));
        });
    });

    [].concat(opts.string).filter(Boolean).forEach(function (key) {
        flags.strings[key] = true;
        if (aliases[key]) {
            flags.strings[aliases[key]] = true;
        }
     });

    var defaults = opts['default'] || {};
    
    var argv = { _ : [] };
    Object.keys(flags.bools).forEach(function (key) {
        setArg(key, defaults[key] === undefined ? false : defaults[key]);
    });
    
    var notFlags = [];

    if (args.indexOf('--') !== -1) {
        notFlags = args.slice(args.indexOf('--')+1);
        args = args.slice(0, args.indexOf('--'));
    }

    function argDefined(key, arg) {
        return (flags.allBools && /^--[^=]+$/.test(arg)) ||
            flags.strings[key] || flags.bools[key] || aliases[key];
    }

    function setArg (key, val, arg) {
        if (arg && flags.unknownFn && !argDefined(key, arg)) {
            if (flags.unknownFn(arg) === false) return;
        }

        var value = !flags.strings[key] && isNumber(val)
            ? Number(val) : val
        ;
        setKey(argv, key.split('.'), value);
        
        (aliases[key] || []).forEach(function (x) {
            setKey(argv, x.split('.'), value);
        });
    }

    function setKey (obj, keys, value) {
        var o = obj;
        keys.slice(0,-1).forEach(function (key) {
            if (o[key] === undefined) o[key] = {};
            o = o[key];
        });

        var key = keys[keys.length - 1];
        if (o[key] === undefined || flags.bools[key] || typeof o[key] === 'boolean') {
            o[key] = value;
        }
        else if (Array.isArray(o[key])) {
            o[key].push(value);
        }
        else {
            o[key] = [ o[key], value ];
        }
    }
    
    function aliasIsBoolean(key) {
      return aliases[key].some(function (x) {
          return flags.bools[x];
      });
    }

    for (var i = 0; i < args.length; i++) {
        var arg = args[i];
        
        if (/^--.+=/.test(arg)) {
            // Using [\s\S] instead of . because js doesn't support the
            // 'dotall' regex modifier. See:
            // http://stackoverflow.com/a/1068308/13216
            var m = arg.match(/^--([^=]+)=([\s\S]*)$/);
            var key = m[1];
            var value = m[2];
            if (flags.bools[key]) {
                value = value !== 'false';
            }
            setArg(key, value, arg);
        }
        else if (/^--no-.+/.test(arg)) {
            var key = arg.match(/^--no-(.+)/)[1];
            setArg(key, false, arg);
        }
        else if (/^--.+/.test(arg)) {
            var key = arg.match(/^--(.+)/)[1];
            var next = args[i + 1];
            if (next !== undefined && !/^-/.test(next)
            && !flags.bools[key]
            && !flags.allBools
            && (aliases[key] ? !aliasIsBoolean(key) : true)) {
                setArg(key, next, arg);
                i++;
            }
            else if (/^(true|false)$/.test(next)) {
                setArg(key, next === 'true', arg);
                i++;
            }
            else {
                setArg(key, flags.strings[key] ? '' : true, arg);
            }
        }
        else if (/^-[^-]+/.test(arg)) {
            var letters = arg.slice(1,-1).split('');
            
            var broken = false;
            for (var j = 0; j < letters.length; j++) {
                var next = arg.slice(j+2);
                
                if (next === '-') {
                    setArg(letters[j], next, arg)
                    continue;
                }
                
                if (/[A-Za-z]/.test(letters[j]) && /=/.test(next)) {
                    setArg(letters[j], next.split('=')[1], arg);
                    broken = true;
                    break;
                }
                
                if (/[A-Za-z]/.test(letters[j])
                && /-?\d+(\.\d*)?(e-?\d+)?$/.test(next)) {
                    setArg(letters[j], next, arg);
                    broken = true;
                    break;
                }
                
                if (letters[j+1] && letters[j+1].match(/\W/)) {
                    setArg(letters[j], arg.slice(j+2), arg);
                    broken = true;
                    break;
                }
                else {
                    setArg(letters[j], flags.strings[letters[j]] ? '' : true, arg);
                }
            }
            
            var key = arg.slice(-1)[0];
            if (!broken && key !== '-') {
                if (args[i+1] && !/^(-|--)[^-]/.test(args[i+1])
                && !flags.bools[key]
                && (aliases[key] ? !aliasIsBoolean(key) : true)) {
                    setArg(key, args[i+1], arg);
                    i++;
                }
                else if (args[i+1] && /true|false/.test(args[i+1])) {
                    setArg(key, args[i+1] === 'true', arg);
                    i++;
                }
                else {
                    setArg(key, flags.strings[key] ? '' : true, arg);
                }
            }
        }
        else {
            if (!flags.unknownFn || flags.unknownFn(arg) !== false) {
                argv._.push(
                    flags.strings['_'] || !isNumber(arg) ? arg : Number(arg)
                );
            }
            if (opts.stopEarly) {
                argv._.push.apply(argv._, args.slice(i + 1));
                break;
            }
        }
    }
    
    Object.keys(defaults).forEach(function (key) {
        if (!hasKey(argv, key.split('.'))) {
            setKey(argv, key.split('.'), defaults[key]);
            
            (aliases[key] || []).forEach(function (x) {
                setKey(argv, x.split('.'), defaults[key]);
            });
        }
    });
    
    if (opts['--']) {
        argv['--'] = new Array();
        notFlags.forEach(function(key) {
            argv['--'].push(key);
        });
    }
    else {
        notFlags.forEach(function(key) {
            argv._.push(key);
        });
    }

    return argv;
};

function hasKey (obj, keys) {
    var o = obj;
    keys.slice(0,-1).forEach(function (key) {
        o = (o[key] || {});
    });

    var key = keys[keys.length - 1];
    return key in o;
}

function isNumber (x) {
    if (typeof x === 'number') return true;
    if (/^0x[0-9a-f]+$/i.test(x)) return true;
    return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
}



/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isNaN(val) === false) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  if (ms >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (ms >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (ms >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (ms >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  return plural(ms, d, 'day') ||
    plural(ms, h, 'hour') ||
    plural(ms, m, 'minute') ||
    plural(ms, s, 'second') ||
    ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, n, name) {
  if (ms < n) {
    return;
  }
  if (ms < n * 1.5) {
    return Math.floor(ms / n) + ' ' + name;
  }
  return Math.ceil(ms / n) + ' ' + name + 's';
}


/***/ }),

/***/ "./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var argv = process.argv;

var terminator = argv.indexOf('--');
var hasFlag = function (flag) {
	flag = '--' + flag;
	var pos = argv.indexOf(flag);
	return pos !== -1 && (terminator !== -1 ? pos < terminator : true);
};

module.exports = (function () {
	if ('FORCE_COLOR' in process.env) {
		return true;
	}

	if (hasFlag('no-color') ||
		hasFlag('no-colors') ||
		hasFlag('color=false')) {
		return false;
	}

	if (hasFlag('color') ||
		hasFlag('colors') ||
		hasFlag('color=true') ||
		hasFlag('color=always')) {
		return true;
	}

	if (process.stdout && !process.stdout.isTTY) {
		return false;
	}

	if (process.platform === 'win32') {
		return true;
	}

	if ('COLORTERM' in process.env) {
		return true;
	}

	if (process.env.TERM === 'dumb') {
		return false;
	}

	if (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {
		return true;
	}

	return false;
})();


/***/ }),

/***/ "./node_modules/utf8/utf8.js":
/*!***********************************!*\
  !*** ./node_modules/utf8/utf8.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/utf8js v2.1.2 by @mathias */
;(function(root) {

	// Detect free variables `exports`
	var freeExports = typeof exports == 'object' && exports;

	// Detect free variable `module`
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;

	// Detect free variable `global`, from Node.js or Browserified code,
	// and use it as `root`
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}

	/*--------------------------------------------------------------------------*/

	var stringFromCharCode = String.fromCharCode;

	// Taken from https://mths.be/punycode
	function ucs2decode(string) {
		var output = [];
		var counter = 0;
		var length = string.length;
		var value;
		var extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	// Taken from https://mths.be/punycode
	function ucs2encode(array) {
		var length = array.length;
		var index = -1;
		var value;
		var output = '';
		while (++index < length) {
			value = array[index];
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
		}
		return output;
	}

	function checkScalarValue(codePoint) {
		if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {
			throw Error(
				'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +
				' is not a scalar value'
			);
		}
	}
	/*--------------------------------------------------------------------------*/

	function createByte(codePoint, shift) {
		return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);
	}

	function encodeCodePoint(codePoint) {
		if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence
			return stringFromCharCode(codePoint);
		}
		var symbol = '';
		if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence
			symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);
		}
		else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence
			checkScalarValue(codePoint);
			symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);
			symbol += createByte(codePoint, 6);
		}
		else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence
			symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);
			symbol += createByte(codePoint, 12);
			symbol += createByte(codePoint, 6);
		}
		symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);
		return symbol;
	}

	function utf8encode(string) {
		var codePoints = ucs2decode(string);
		var length = codePoints.length;
		var index = -1;
		var codePoint;
		var byteString = '';
		while (++index < length) {
			codePoint = codePoints[index];
			byteString += encodeCodePoint(codePoint);
		}
		return byteString;
	}

	/*--------------------------------------------------------------------------*/

	function readContinuationByte() {
		if (byteIndex >= byteCount) {
			throw Error('Invalid byte index');
		}

		var continuationByte = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		if ((continuationByte & 0xC0) == 0x80) {
			return continuationByte & 0x3F;
		}

		// If we end up here, it’s not a continuation byte
		throw Error('Invalid continuation byte');
	}

	function decodeSymbol() {
		var byte1;
		var byte2;
		var byte3;
		var byte4;
		var codePoint;

		if (byteIndex > byteCount) {
			throw Error('Invalid byte index');
		}

		if (byteIndex == byteCount) {
			return false;
		}

		// Read first byte
		byte1 = byteArray[byteIndex] & 0xFF;
		byteIndex++;

		// 1-byte sequence (no continuation bytes)
		if ((byte1 & 0x80) == 0) {
			return byte1;
		}

		// 2-byte sequence
		if ((byte1 & 0xE0) == 0xC0) {
			byte2 = readContinuationByte();
			codePoint = ((byte1 & 0x1F) << 6) | byte2;
			if (codePoint >= 0x80) {
				return codePoint;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 3-byte sequence (may include unpaired surrogates)
		if ((byte1 & 0xF0) == 0xE0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;
			if (codePoint >= 0x0800) {
				checkScalarValue(codePoint);
				return codePoint;
			} else {
				throw Error('Invalid continuation byte');
			}
		}

		// 4-byte sequence
		if ((byte1 & 0xF8) == 0xF0) {
			byte2 = readContinuationByte();
			byte3 = readContinuationByte();
			byte4 = readContinuationByte();
			codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |
				(byte3 << 0x06) | byte4;
			if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {
				return codePoint;
			}
		}

		throw Error('Invalid UTF-8 detected');
	}

	var byteArray;
	var byteCount;
	var byteIndex;
	function utf8decode(byteString) {
		byteArray = ucs2decode(byteString);
		byteCount = byteArray.length;
		byteIndex = 0;
		var codePoints = [];
		var tmp;
		while ((tmp = decodeSymbol()) !== false) {
			codePoints.push(tmp);
		}
		return ucs2encode(codePoints);
	}

	/*--------------------------------------------------------------------------*/

	var utf8 = {
		'version': '2.1.2',
		'encode': utf8encode,
		'decode': utf8decode
	};

	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		true
	) {
		!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
			return utf8;
		}).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	}	else { var key, hasOwnProperty, object; }

}(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/web3/index.js":
/*!************************************!*\
  !*** ./node_modules/web3/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Web3 = __webpack_require__(/*! ./lib/web3 */ "./node_modules/web3/lib/web3.js");

// dont override global variable
if (typeof window !== 'undefined' && typeof window.Web3 === 'undefined') {
    window.Web3 = Web3;
}

module.exports = Web3;


/***/ }),

/***/ "./node_modules/web3/lib/contracts/GlobalRegistrar.json":
/*!**************************************************************!*\
  !*** ./node_modules/web3/lib/contracts/GlobalRegistrar.json ***!
  \**************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, default */
/***/ (function(module) {

module.exports = [{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"name","outputs":[{"name":"o_name","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"content","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"addr","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"}],"name":"reserve","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"subRegistrar","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_newOwner","type":"address"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_registrar","type":"address"}],"name":"setSubRegistrar","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"Registrar","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_a","type":"address"},{"name":"_primary","type":"bool"}],"name":"setAddress","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_content","type":"bytes32"}],"name":"setContent","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"}],"name":"disown","outputs":[],"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_name","type":"bytes32"},{"indexed":false,"name":"_winner","type":"address"}],"name":"AuctionEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_name","type":"bytes32"},{"indexed":false,"name":"_bidder","type":"address"},{"indexed":false,"name":"_value","type":"uint256"}],"name":"NewBid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"name","type":"bytes32"}],"name":"Changed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"name","type":"bytes32"},{"indexed":true,"name":"addr","type":"address"}],"name":"PrimaryChanged","type":"event"}];

/***/ }),

/***/ "./node_modules/web3/lib/contracts/ICAPRegistrar.json":
/*!************************************************************!*\
  !*** ./node_modules/web3/lib/contracts/ICAPRegistrar.json ***!
  \************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, default */
/***/ (function(module) {

module.exports = [{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_refund","type":"address"}],"name":"disown","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"_name","type":"bytes32"}],"name":"addr","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"}],"name":"reserve","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_newOwner","type":"address"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_name","type":"bytes32"},{"name":"_a","type":"address"}],"name":"setAddr","outputs":[],"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"name","type":"bytes32"}],"name":"Changed","type":"event"}];

/***/ }),

/***/ "./node_modules/web3/lib/contracts/SmartExchange.json":
/*!************************************************************!*\
  !*** ./node_modules/web3/lib/contracts/SmartExchange.json ***!
  \************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, default */
/***/ (function(module) {

module.exports = [{"constant":false,"inputs":[{"name":"from","type":"bytes32"},{"name":"to","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"from","type":"bytes32"},{"name":"to","type":"address"},{"name":"indirectId","type":"bytes32"},{"name":"value","type":"uint256"}],"name":"icapTransfer","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"to","type":"bytes32"}],"name":"deposit","outputs":[],"payable":true,"type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"AnonymousDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"bytes32"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"bytes32"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"bytes32"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"indirectId","type":"bytes32"},{"indexed":false,"name":"value","type":"uint256"}],"name":"IcapTransfer","type":"event"}];

/***/ }),

/***/ "./node_modules/web3/lib/solidity/address.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/solidity/address.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeAddress is a prootype that represents address type
 * It matches:
 * address
 * address[]
 * address[4]
 * address[][]
 * address[3][]
 * address[][6][], ...
 */
var SolidityTypeAddress = function () {
    this._inputFormatter = f.formatInputInt;
    this._outputFormatter = f.formatOutputAddress;
};

SolidityTypeAddress.prototype = new SolidityType({});
SolidityTypeAddress.prototype.constructor = SolidityTypeAddress;

SolidityTypeAddress.prototype.isType = function (name) {
    return !!name.match(/address(\[([0-9]*)\])?/);
};

module.exports = SolidityTypeAddress;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/bool.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/solidity/bool.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeBool is a prootype that represents bool type
 * It matches:
 * bool
 * bool[]
 * bool[4]
 * bool[][]
 * bool[3][]
 * bool[][6][], ...
 */
var SolidityTypeBool = function () {
    this._inputFormatter = f.formatInputBool;
    this._outputFormatter = f.formatOutputBool;
};

SolidityTypeBool.prototype = new SolidityType({});
SolidityTypeBool.prototype.constructor = SolidityTypeBool;

SolidityTypeBool.prototype.isType = function (name) {
    return !!name.match(/^bool(\[([0-9]*)\])*$/);
};

module.exports = SolidityTypeBool;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/bytes.js":
/*!*************************************************!*\
  !*** ./node_modules/web3/lib/solidity/bytes.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeBytes is a prototype that represents the bytes type.
 * It matches:
 * bytes
 * bytes[]
 * bytes[4]
 * bytes[][]
 * bytes[3][]
 * bytes[][6][], ...
 * bytes32
 * bytes8[4]
 * bytes[3][]
 */
var SolidityTypeBytes = function () {
    this._inputFormatter = f.formatInputBytes;
    this._outputFormatter = f.formatOutputBytes;
};

SolidityTypeBytes.prototype = new SolidityType({});
SolidityTypeBytes.prototype.constructor = SolidityTypeBytes;

SolidityTypeBytes.prototype.isType = function (name) {
    return !!name.match(/^bytes([0-9]{1,})(\[([0-9]*)\])*$/);
};

module.exports = SolidityTypeBytes;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/coder.js":
/*!*************************************************!*\
  !*** ./node_modules/web3/lib/solidity/coder.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file coder.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");

var SolidityTypeAddress = __webpack_require__(/*! ./address */ "./node_modules/web3/lib/solidity/address.js");
var SolidityTypeBool = __webpack_require__(/*! ./bool */ "./node_modules/web3/lib/solidity/bool.js");
var SolidityTypeInt = __webpack_require__(/*! ./int */ "./node_modules/web3/lib/solidity/int.js");
var SolidityTypeUInt = __webpack_require__(/*! ./uint */ "./node_modules/web3/lib/solidity/uint.js");
var SolidityTypeDynamicBytes = __webpack_require__(/*! ./dynamicbytes */ "./node_modules/web3/lib/solidity/dynamicbytes.js");
var SolidityTypeString = __webpack_require__(/*! ./string */ "./node_modules/web3/lib/solidity/string.js");
var SolidityTypeReal = __webpack_require__(/*! ./real */ "./node_modules/web3/lib/solidity/real.js");
var SolidityTypeUReal = __webpack_require__(/*! ./ureal */ "./node_modules/web3/lib/solidity/ureal.js");
var SolidityTypeBytes = __webpack_require__(/*! ./bytes */ "./node_modules/web3/lib/solidity/bytes.js");

var isDynamic = function (solidityType, type) {
   return solidityType.isDynamicType(type) ||
          solidityType.isDynamicArray(type);
};

/**
 * SolidityCoder prototype should be used to encode/decode solidity params of any type
 */
var SolidityCoder = function (types) {
    this._types = types;
};

/**
 * This method should be used to transform type to SolidityType
 *
 * @method _requireType
 * @param {String} type
 * @returns {SolidityType}
 * @throws {Error} throws if no matching type is found
 */
SolidityCoder.prototype._requireType = function (type) {
    var solidityType = this._types.filter(function (t) {
        return t.isType(type);
    })[0];

    if (!solidityType) {
        throw Error('invalid solidity type!: ' + type);
    }

    return solidityType;
};

/**
 * Should be used to encode plain param
 *
 * @method encodeParam
 * @param {String} type
 * @param {Object} plain param
 * @return {String} encoded plain param
 */
SolidityCoder.prototype.encodeParam = function (type, param) {
    return this.encodeParams([type], [param]);
};

/**
 * Should be used to encode list of params
 *
 * @method encodeParams
 * @param {Array} types
 * @param {Array} params
 * @return {String} encoded list of params
 */
SolidityCoder.prototype.encodeParams = function (types, params) {
    var solidityTypes = this.getSolidityTypes(types);

    var encodeds = solidityTypes.map(function (solidityType, index) {
        return solidityType.encode(params[index], types[index]);
    });

    var dynamicOffset = solidityTypes.reduce(function (acc, solidityType, index) {
        var staticPartLength = solidityType.staticPartLength(types[index]);
        var roundedStaticPartLength = Math.floor((staticPartLength + 31) / 32) * 32;

        return acc + (isDynamic(solidityTypes[index], types[index]) ?
            32 :
            roundedStaticPartLength);
    }, 0);

    var result = this.encodeMultiWithOffset(types, solidityTypes, encodeds, dynamicOffset);

    return result;
};

SolidityCoder.prototype.encodeMultiWithOffset = function (types, solidityTypes, encodeds, dynamicOffset) {
    var result = "";
    var self = this;

    types.forEach(function (type, i) {
        if (isDynamic(solidityTypes[i], types[i])) {
            result += f.formatInputInt(dynamicOffset).encode();
            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);
            dynamicOffset += e.length / 2;
        } else {
            // don't add length to dynamicOffset. it's already counted
            result += self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);
        }

        // TODO: figure out nested arrays
    });

    types.forEach(function (type, i) {
        if (isDynamic(solidityTypes[i], types[i])) {
            var e = self.encodeWithOffset(types[i], solidityTypes[i], encodeds[i], dynamicOffset);
            dynamicOffset += e.length / 2;
            result += e;
        }
    });
    return result;
};

SolidityCoder.prototype.encodeWithOffset = function (type, solidityType, encoded, offset) {
    /* jshint maxcomplexity: 17 */
    /* jshint maxdepth: 5 */

    var self = this;
    var encodingMode={dynamic:1,static:2,other:3};

    var mode=(solidityType.isDynamicArray(type)?encodingMode.dynamic:(solidityType.isStaticArray(type)?encodingMode.static:encodingMode.other));

    if(mode !== encodingMode.other){
        var nestedName = solidityType.nestedName(type);
        var nestedStaticPartLength = solidityType.staticPartLength(nestedName);
        var result = (mode === encodingMode.dynamic ? encoded[0] : '');

        if (solidityType.isDynamicArray(nestedName)) {
            var previousLength = (mode === encodingMode.dynamic ? 2 : 0);

            for (var i = 0; i < encoded.length; i++) {
                // calculate length of previous item
                if(mode === encodingMode.dynamic){
                    previousLength += +(encoded[i - 1])[0] || 0;
                }
                else if(mode === encodingMode.static){
                    previousLength += +(encoded[i - 1] || [])[0] || 0;
                }
                result += f.formatInputInt(offset + i * nestedStaticPartLength + previousLength * 32).encode();
            }
        }

        var len= (mode === encodingMode.dynamic ? encoded.length-1 : encoded.length);
        for (var c = 0; c < len; c++) {
            var additionalOffset = result / 2;
            if(mode === encodingMode.dynamic){
                result += self.encodeWithOffset(nestedName, solidityType, encoded[c + 1], offset +  additionalOffset);
            }
            else if(mode === encodingMode.static){
                result += self.encodeWithOffset(nestedName, solidityType, encoded[c], offset + additionalOffset);
            }
        }

        return result;
    }

    return encoded;
};


/**
 * Should be used to decode bytes to plain param
 *
 * @method decodeParam
 * @param {String} type
 * @param {String} bytes
 * @return {Object} plain param
 */
SolidityCoder.prototype.decodeParam = function (type, bytes) {
    return this.decodeParams([type], bytes)[0];
};

/**
 * Should be used to decode list of params
 *
 * @method decodeParam
 * @param {Array} types
 * @param {String} bytes
 * @return {Array} array of plain params
 */
SolidityCoder.prototype.decodeParams = function (types, bytes) {
    var solidityTypes = this.getSolidityTypes(types);
    var offsets = this.getOffsets(types, solidityTypes);

    return solidityTypes.map(function (solidityType, index) {
        return solidityType.decode(bytes, offsets[index],  types[index], index);
    });
};

SolidityCoder.prototype.getOffsets = function (types, solidityTypes) {
    var lengths =  solidityTypes.map(function (solidityType, index) {
        return solidityType.staticPartLength(types[index]);
    });

    for (var i = 1; i < lengths.length; i++) {
         // sum with length of previous element
        lengths[i] += lengths[i - 1];
    }

    return lengths.map(function (length, index) {
        // remove the current length, so the length is sum of previous elements
        var staticPartLength = solidityTypes[index].staticPartLength(types[index]);
        return length - staticPartLength;
    });
};

SolidityCoder.prototype.getSolidityTypes = function (types) {
    var self = this;
    return types.map(function (type) {
        return self._requireType(type);
    });
};

var coder = new SolidityCoder([
    new SolidityTypeAddress(),
    new SolidityTypeBool(),
    new SolidityTypeInt(),
    new SolidityTypeUInt(),
    new SolidityTypeDynamicBytes(),
    new SolidityTypeBytes(),
    new SolidityTypeString(),
    new SolidityTypeReal(),
    new SolidityTypeUReal()
]);

module.exports = coder;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/dynamicbytes.js":
/*!********************************************************!*\
  !*** ./node_modules/web3/lib/solidity/dynamicbytes.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

var SolidityTypeDynamicBytes = function () {
    this._inputFormatter = f.formatInputDynamicBytes;
    this._outputFormatter = f.formatOutputDynamicBytes;
};

SolidityTypeDynamicBytes.prototype = new SolidityType({});
SolidityTypeDynamicBytes.prototype.constructor = SolidityTypeDynamicBytes;

SolidityTypeDynamicBytes.prototype.isType = function (name) {
    return !!name.match(/^bytes(\[([0-9]*)\])*$/);
};

SolidityTypeDynamicBytes.prototype.isDynamicType = function () {
    return true;
};

module.exports = SolidityTypeDynamicBytes;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/formatters.js":
/*!******************************************************!*\
  !*** ./node_modules/web3/lib/solidity/formatters.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file formatters.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var BigNumber = __webpack_require__(/*! bignumber.js */ "./node_modules/bignumber.js/bignumber.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var c = __webpack_require__(/*! ../utils/config */ "./node_modules/web3/lib/utils/config.js");
var SolidityParam = __webpack_require__(/*! ./param */ "./node_modules/web3/lib/solidity/param.js");


/**
 * Formats input value to byte representation of int
 * If value is negative, return it's two's complement
 * If the value is floating point, round it down
 *
 * @method formatInputInt
 * @param {String|Number|BigNumber} value that needs to be formatted
 * @returns {SolidityParam}
 */
var formatInputInt = function (value) {
    BigNumber.config(c.ETH_BIGNUMBER_ROUNDING_MODE);
    var result = utils.padLeft(utils.toTwosComplement(value).toString(16), 64);
    return new SolidityParam(result);
};

/**
 * Formats input bytes
 *
 * @method formatInputBytes
 * @param {String}
 * @returns {SolidityParam}
 */
var formatInputBytes = function (value) {
    var result = utils.toHex(value).substr(2);
    var l = Math.floor((result.length + 63) / 64);
    result = utils.padRight(result, l * 64);
    return new SolidityParam(result);
};

/**
 * Formats input bytes
 *
 * @method formatDynamicInputBytes
 * @param {String}
 * @returns {SolidityParam}
 */
var formatInputDynamicBytes = function (value) {
    var result = utils.toHex(value).substr(2);
    var length = result.length / 2;
    var l = Math.floor((result.length + 63) / 64);
    result = utils.padRight(result, l * 64);
    return new SolidityParam(formatInputInt(length).value + result);
};

/**
 * Formats input value to byte representation of string
 *
 * @method formatInputString
 * @param {String}
 * @returns {SolidityParam}
 */
var formatInputString = function (value) {
    var result = utils.fromUtf8(value).substr(2);
    var length = result.length / 2;
    var l = Math.floor((result.length + 63) / 64);
    result = utils.padRight(result, l * 64);
    return new SolidityParam(formatInputInt(length).value + result);
};

/**
 * Formats input value to byte representation of bool
 *
 * @method formatInputBool
 * @param {Boolean}
 * @returns {SolidityParam}
 */
var formatInputBool = function (value) {
    var result = '000000000000000000000000000000000000000000000000000000000000000' + (value ?  '1' : '0');
    return new SolidityParam(result);
};

/**
 * Formats input value to byte representation of real
 * Values are multiplied by 2^m and encoded as integers
 *
 * @method formatInputReal
 * @param {String|Number|BigNumber}
 * @returns {SolidityParam}
 */
var formatInputReal = function (value) {
    return formatInputInt(new BigNumber(value).times(new BigNumber(2).pow(128)));
};

/**
 * Check if input value is negative
 *
 * @method signedIsNegative
 * @param {String} value is hex format
 * @returns {Boolean} true if it is negative, otherwise false
 */
var signedIsNegative = function (value) {
    return (new BigNumber(value.substr(0, 1), 16).toString(2).substr(0, 1)) === '1';
};

/**
 * Formats right-aligned output bytes to int
 *
 * @method formatOutputInt
 * @param {SolidityParam} param
 * @returns {BigNumber} right-aligned output bytes formatted to big number
 */
var formatOutputInt = function (param) {
    var value = param.staticPart() || "0";

    // check if it's negative number
    // it it is, return two's complement
    if (signedIsNegative(value)) {
        return new BigNumber(value, 16).minus(new BigNumber('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16)).minus(1);
    }
    return new BigNumber(value, 16);
};

/**
 * Formats right-aligned output bytes to uint
 *
 * @method formatOutputUInt
 * @param {SolidityParam}
 * @returns {BigNumeber} right-aligned output bytes formatted to uint
 */
var formatOutputUInt = function (param) {
    var value = param.staticPart() || "0";
    return new BigNumber(value, 16);
};

/**
 * Formats right-aligned output bytes to real
 *
 * @method formatOutputReal
 * @param {SolidityParam}
 * @returns {BigNumber} input bytes formatted to real
 */
var formatOutputReal = function (param) {
    return formatOutputInt(param).dividedBy(new BigNumber(2).pow(128));
};

/**
 * Formats right-aligned output bytes to ureal
 *
 * @method formatOutputUReal
 * @param {SolidityParam}
 * @returns {BigNumber} input bytes formatted to ureal
 */
var formatOutputUReal = function (param) {
    return formatOutputUInt(param).dividedBy(new BigNumber(2).pow(128));
};

/**
 * Should be used to format output bool
 *
 * @method formatOutputBool
 * @param {SolidityParam}
 * @returns {Boolean} right-aligned input bytes formatted to bool
 */
var formatOutputBool = function (param) {
    return param.staticPart() === '0000000000000000000000000000000000000000000000000000000000000001' ? true : false;
};

/**
 * Should be used to format output bytes
 *
 * @method formatOutputBytes
 * @param {SolidityParam} left-aligned hex representation of string
 * @param {String} name type name
 * @returns {String} hex string
 */
var formatOutputBytes = function (param, name) {
    var matches = name.match(/^bytes([0-9]*)/);
    var size = parseInt(matches[1]);
    return '0x' + param.staticPart().slice(0, 2 * size);
};

/**
 * Should be used to format output bytes
 *
 * @method formatOutputDynamicBytes
 * @param {SolidityParam} left-aligned hex representation of string
 * @returns {String} hex string
 */
var formatOutputDynamicBytes = function (param) {
    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;
    return '0x' + param.dynamicPart().substr(64, length);
};

/**
 * Should be used to format output string
 *
 * @method formatOutputString
 * @param {SolidityParam} left-aligned hex representation of string
 * @returns {String} ascii string
 */
var formatOutputString = function (param) {
    var length = (new BigNumber(param.dynamicPart().slice(0, 64), 16)).toNumber() * 2;
    return utils.toUtf8(param.dynamicPart().substr(64, length));
};

/**
 * Should be used to format output address
 *
 * @method formatOutputAddress
 * @param {SolidityParam} right-aligned input bytes
 * @returns {String} address
 */
var formatOutputAddress = function (param) {
    var value = param.staticPart();
    return "0x" + value.slice(value.length - 40, value.length);
};

module.exports = {
    formatInputInt: formatInputInt,
    formatInputBytes: formatInputBytes,
    formatInputDynamicBytes: formatInputDynamicBytes,
    formatInputString: formatInputString,
    formatInputBool: formatInputBool,
    formatInputReal: formatInputReal,
    formatOutputInt: formatOutputInt,
    formatOutputUInt: formatOutputUInt,
    formatOutputReal: formatOutputReal,
    formatOutputUReal: formatOutputUReal,
    formatOutputBool: formatOutputBool,
    formatOutputBytes: formatOutputBytes,
    formatOutputDynamicBytes: formatOutputDynamicBytes,
    formatOutputString: formatOutputString,
    formatOutputAddress: formatOutputAddress
};


/***/ }),

/***/ "./node_modules/web3/lib/solidity/int.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/solidity/int.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeInt is a prootype that represents int type
 * It matches:
 * int
 * int[]
 * int[4]
 * int[][]
 * int[3][]
 * int[][6][], ...
 * int32
 * int64[]
 * int8[4]
 * int256[][]
 * int[3][]
 * int64[][6][], ...
 */
var SolidityTypeInt = function () {
    this._inputFormatter = f.formatInputInt;
    this._outputFormatter = f.formatOutputInt;
};

SolidityTypeInt.prototype = new SolidityType({});
SolidityTypeInt.prototype.constructor = SolidityTypeInt;

SolidityTypeInt.prototype.isType = function (name) {
    return !!name.match(/^int([0-9]*)?(\[([0-9]*)\])*$/);
};

module.exports = SolidityTypeInt;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/param.js":
/*!*************************************************!*\
  !*** ./node_modules/web3/lib/solidity/param.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file param.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");

/**
 * SolidityParam object prototype.
 * Should be used when encoding, decoding solidity bytes
 */
var SolidityParam = function (value, offset) {
    this.value = value || '';
    this.offset = offset; // offset in bytes
};

/**
 * This method should be used to get length of params's dynamic part
 * 
 * @method dynamicPartLength
 * @returns {Number} length of dynamic part (in bytes)
 */
SolidityParam.prototype.dynamicPartLength = function () {
    return this.dynamicPart().length / 2;
};

/**
 * This method should be used to create copy of solidity param with different offset
 *
 * @method withOffset
 * @param {Number} offset length in bytes
 * @returns {SolidityParam} new solidity param with applied offset
 */
SolidityParam.prototype.withOffset = function (offset) {
    return new SolidityParam(this.value, offset);
};

/**
 * This method should be used to combine solidity params together
 * eg. when appending an array
 *
 * @method combine
 * @param {SolidityParam} param with which we should combine
 * @param {SolidityParam} result of combination
 */
SolidityParam.prototype.combine = function (param) {
    return new SolidityParam(this.value + param.value); 
};

/**
 * This method should be called to check if param has dynamic size.
 * If it has, it returns true, otherwise false
 *
 * @method isDynamic
 * @returns {Boolean}
 */
SolidityParam.prototype.isDynamic = function () {
    return this.offset !== undefined;
};

/**
 * This method should be called to transform offset to bytes
 *
 * @method offsetAsBytes
 * @returns {String} bytes representation of offset
 */
SolidityParam.prototype.offsetAsBytes = function () {
    return !this.isDynamic() ? '' : utils.padLeft(utils.toTwosComplement(this.offset).toString(16), 64);
};

/**
 * This method should be called to get static part of param
 *
 * @method staticPart
 * @returns {String} offset if it is a dynamic param, otherwise value
 */
SolidityParam.prototype.staticPart = function () {
    if (!this.isDynamic()) {
        return this.value; 
    } 
    return this.offsetAsBytes();
};

/**
 * This method should be called to get dynamic part of param
 *
 * @method dynamicPart
 * @returns {String} returns a value if it is a dynamic param, otherwise empty string
 */
SolidityParam.prototype.dynamicPart = function () {
    return this.isDynamic() ? this.value : '';
};

/**
 * This method should be called to encode param
 *
 * @method encode
 * @returns {String}
 */
SolidityParam.prototype.encode = function () {
    return this.staticPart() + this.dynamicPart();
};

/**
 * This method should be called to encode array of params
 *
 * @method encodeList
 * @param {Array[SolidityParam]} params
 * @returns {String}
 */
SolidityParam.encodeList = function (params) {
    
    // updating offsets
    var totalOffset = params.length * 32;
    var offsetParams = params.map(function (param) {
        if (!param.isDynamic()) {
            return param;
        }
        var offset = totalOffset;
        totalOffset += param.dynamicPartLength();
        return param.withOffset(offset);
    });

    // encode everything!
    return offsetParams.reduce(function (result, param) {
        return result + param.dynamicPart();
    }, offsetParams.reduce(function (result, param) {
        return result + param.staticPart();
    }, ''));
};



module.exports = SolidityParam;



/***/ }),

/***/ "./node_modules/web3/lib/solidity/real.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/solidity/real.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeReal is a prootype that represents real type
 * It matches:
 * real
 * real[]
 * real[4]
 * real[][]
 * real[3][]
 * real[][6][], ...
 * real32
 * real64[]
 * real8[4]
 * real256[][]
 * real[3][]
 * real64[][6][], ...
 */
var SolidityTypeReal = function () {
    this._inputFormatter = f.formatInputReal;
    this._outputFormatter = f.formatOutputReal;
};

SolidityTypeReal.prototype = new SolidityType({});
SolidityTypeReal.prototype.constructor = SolidityTypeReal;

SolidityTypeReal.prototype.isType = function (name) {
    return !!name.match(/real([0-9]*)?(\[([0-9]*)\])?/);
};

module.exports = SolidityTypeReal;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/string.js":
/*!**************************************************!*\
  !*** ./node_modules/web3/lib/solidity/string.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

var SolidityTypeString = function () {
    this._inputFormatter = f.formatInputString;
    this._outputFormatter = f.formatOutputString;
};

SolidityTypeString.prototype = new SolidityType({});
SolidityTypeString.prototype.constructor = SolidityTypeString;

SolidityTypeString.prototype.isType = function (name) {
    return !!name.match(/^string(\[([0-9]*)\])*$/);
};

SolidityTypeString.prototype.isDynamicType = function () {
    return true;
};

module.exports = SolidityTypeString;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/type.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/solidity/type.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityParam = __webpack_require__(/*! ./param */ "./node_modules/web3/lib/solidity/param.js");

/**
 * SolidityType prototype is used to encode/decode solidity params of certain type
 */
var SolidityType = function (config) {
    this._inputFormatter = config.inputFormatter;
    this._outputFormatter = config.outputFormatter;
};

/**
 * Should be used to determine if this SolidityType do match given name
 *
 * @method isType
 * @param {String} name
 * @return {Bool} true if type match this SolidityType, otherwise false
 */
SolidityType.prototype.isType = function (name) {
    throw "this method should be overrwritten for type " + name;
};

/**
 * Should be used to determine what is the length of static part in given type
 *
 * @method staticPartLength
 * @param {String} name
 * @return {Number} length of static part in bytes
 */
SolidityType.prototype.staticPartLength = function (name) {
    // If name isn't an array then treat it like a single element array.
    return (this.nestedTypes(name) || ['[1]'])
        .map(function (type) {
            // the length of the nested array
            return parseInt(type.slice(1, -1), 10) || 1;
        })
        .reduce(function (previous, current) {
            return previous * current;
        // all basic types are 32 bytes long
        }, 32);
};

/**
 * Should be used to determine if type is dynamic array
 * eg:
 * "type[]" => true
 * "type[4]" => false
 *
 * @method isDynamicArray
 * @param {String} name
 * @return {Bool} true if the type is dynamic array
 */
SolidityType.prototype.isDynamicArray = function (name) {
    var nestedTypes = this.nestedTypes(name);
    return !!nestedTypes && !nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);
};

/**
 * Should be used to determine if type is static array
 * eg:
 * "type[]" => false
 * "type[4]" => true
 *
 * @method isStaticArray
 * @param {String} name
 * @return {Bool} true if the type is static array
 */
SolidityType.prototype.isStaticArray = function (name) {
    var nestedTypes = this.nestedTypes(name);
    return !!nestedTypes && !!nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g);
};

/**
 * Should return length of static array
 * eg.
 * "int[32]" => 32
 * "int256[14]" => 14
 * "int[2][3]" => 3
 * "int" => 1
 * "int[1]" => 1
 * "int[]" => 1
 *
 * @method staticArrayLength
 * @param {String} name
 * @return {Number} static array length
 */
SolidityType.prototype.staticArrayLength = function (name) {
    var nestedTypes = this.nestedTypes(name);
    if (nestedTypes) {
       return parseInt(nestedTypes[nestedTypes.length - 1].match(/[0-9]{1,}/g) || 1);
    }
    return 1;
};

/**
 * Should return nested type
 * eg.
 * "int[32]" => "int"
 * "int256[14]" => "int256"
 * "int[2][3]" => "int[2]"
 * "int" => "int"
 * "int[]" => "int"
 *
 * @method nestedName
 * @param {String} name
 * @return {String} nested name
 */
SolidityType.prototype.nestedName = function (name) {
    // remove last [] in name
    var nestedTypes = this.nestedTypes(name);
    if (!nestedTypes) {
        return name;
    }

    return name.substr(0, name.length - nestedTypes[nestedTypes.length - 1].length);
};

/**
 * Should return true if type has dynamic size by default
 * such types are "string", "bytes"
 *
 * @method isDynamicType
 * @param {String} name
 * @return {Bool} true if is dynamic, otherwise false
 */
SolidityType.prototype.isDynamicType = function () {
    return false;
};

/**
 * Should return array of nested types
 * eg.
 * "int[2][3][]" => ["[2]", "[3]", "[]"]
 * "int[] => ["[]"]
 * "int" => null
 *
 * @method nestedTypes
 * @param {String} name
 * @return {Array} array of nested types
 */
SolidityType.prototype.nestedTypes = function (name) {
    // return list of strings eg. "[]", "[3]", "[]", "[2]"
    return name.match(/(\[[0-9]*\])/g);
};

/**
 * Should be used to encode the value
 *
 * @method encode
 * @param {Object} value
 * @param {String} name
 * @return {String} encoded value
 */
SolidityType.prototype.encode = function (value, name) {
    var self = this;
    if (this.isDynamicArray(name)) {

        return (function () {
            var length = value.length;                          // in int
            var nestedName = self.nestedName(name);

            var result = [];
            result.push(f.formatInputInt(length).encode());

            value.forEach(function (v) {
                result.push(self.encode(v, nestedName));
            });

            return result;
        })();

    } else if (this.isStaticArray(name)) {

        return (function () {
            var length = self.staticArrayLength(name);          // in int
            var nestedName = self.nestedName(name);

            var result = [];
            for (var i = 0; i < length; i++) {
                result.push(self.encode(value[i], nestedName));
            }

            return result;
        })();

    }

    return this._inputFormatter(value, name).encode();
};

/**
 * Should be used to decode value from bytes
 *
 * @method decode
 * @param {String} bytes
 * @param {Number} offset in bytes
 * @param {String} name type name
 * @returns {Object} decoded value
 */
SolidityType.prototype.decode = function (bytes, offset, name) {
    var self = this;

    if (this.isDynamicArray(name)) {

        return (function () {
            var arrayOffset = parseInt('0x' + bytes.substr(offset * 2, 64)); // in bytes
            var length = parseInt('0x' + bytes.substr(arrayOffset * 2, 64)); // in int
            var arrayStart = arrayOffset + 32; // array starts after length; // in bytes

            var nestedName = self.nestedName(name);
            var nestedStaticPartLength = self.staticPartLength(nestedName);  // in bytes
            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;
            var result = [];

            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {
                result.push(self.decode(bytes, arrayStart + i, nestedName));
            }

            return result;
        })();

    } else if (this.isStaticArray(name)) {

        return (function () {
            var length = self.staticArrayLength(name);                      // in int
            var arrayStart = offset;                                        // in bytes

            var nestedName = self.nestedName(name);
            var nestedStaticPartLength = self.staticPartLength(nestedName); // in bytes
            var roundedNestedStaticPartLength = Math.floor((nestedStaticPartLength + 31) / 32) * 32;
            var result = [];

            for (var i = 0; i < length * roundedNestedStaticPartLength; i += roundedNestedStaticPartLength) {
                result.push(self.decode(bytes, arrayStart + i, nestedName));
            }

            return result;
        })();
    } else if (this.isDynamicType(name)) {

        return (function () {
            var dynamicOffset = parseInt('0x' + bytes.substr(offset * 2, 64));      // in bytes
            var length = parseInt('0x' + bytes.substr(dynamicOffset * 2, 64));      // in bytes
            var roundedLength = Math.floor((length + 31) / 32);                     // in int
            var param = new SolidityParam(bytes.substr(dynamicOffset * 2, ( 1 + roundedLength) * 64), 0);
            return self._outputFormatter(param, name);
        })();
    }

    var length = this.staticPartLength(name);
    var param = new SolidityParam(bytes.substr(offset * 2, length * 2));
    return this._outputFormatter(param, name);
};

module.exports = SolidityType;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/uint.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/solidity/uint.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeUInt is a prootype that represents uint type
 * It matches:
 * uint
 * uint[]
 * uint[4]
 * uint[][]
 * uint[3][]
 * uint[][6][], ...
 * uint32
 * uint64[]
 * uint8[4]
 * uint256[][]
 * uint[3][]
 * uint64[][6][], ...
 */
var SolidityTypeUInt = function () {
    this._inputFormatter = f.formatInputInt;
    this._outputFormatter = f.formatOutputUInt;
};

SolidityTypeUInt.prototype = new SolidityType({});
SolidityTypeUInt.prototype.constructor = SolidityTypeUInt;

SolidityTypeUInt.prototype.isType = function (name) {
    return !!name.match(/^uint([0-9]*)?(\[([0-9]*)\])*$/);
};

module.exports = SolidityTypeUInt;


/***/ }),

/***/ "./node_modules/web3/lib/solidity/ureal.js":
/*!*************************************************!*\
  !*** ./node_modules/web3/lib/solidity/ureal.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var f = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/solidity/formatters.js");
var SolidityType = __webpack_require__(/*! ./type */ "./node_modules/web3/lib/solidity/type.js");

/**
 * SolidityTypeUReal is a prootype that represents ureal type
 * It matches:
 * ureal
 * ureal[]
 * ureal[4]
 * ureal[][]
 * ureal[3][]
 * ureal[][6][], ...
 * ureal32
 * ureal64[]
 * ureal8[4]
 * ureal256[][]
 * ureal[3][]
 * ureal64[][6][], ...
 */
var SolidityTypeUReal = function () {
    this._inputFormatter = f.formatInputReal;
    this._outputFormatter = f.formatOutputUReal;
};

SolidityTypeUReal.prototype = new SolidityType({});
SolidityTypeUReal.prototype.constructor = SolidityTypeUReal;

SolidityTypeUReal.prototype.isType = function (name) {
    return !!name.match(/^ureal([0-9]*)?(\[([0-9]*)\])*$/);
};

module.exports = SolidityTypeUReal;


/***/ }),

/***/ "./node_modules/web3/lib/utils/config.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/utils/config.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file config.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

/**
 * Utils
 * 
 * @module utils
 */

/**
 * Utility functions
 * 
 * @class [utils] config
 * @constructor
 */


/// required to define ETH_BIGNUMBER_ROUNDING_MODE
var BigNumber = __webpack_require__(/*! bignumber.js */ "./node_modules/bignumber.js/bignumber.js");

var ETH_UNITS = [
    'wei',
    'kwei',
    'Mwei',
    'Gwei',
    'szabo',
    'finney',
    'femtoether',
    'picoether',
    'nanoether',
    'microether',
    'milliether',
    'nano',
    'micro',
    'milli',
    'ether',
    'grand',
    'Mether',
    'Gether',
    'Tether',
    'Pether',
    'Eether',
    'Zether',
    'Yether',
    'Nether',
    'Dether',
    'Vether',
    'Uether'
];

module.exports = {
    ETH_PADDING: 32,
    ETH_SIGNATURE_LENGTH: 4,
    ETH_UNITS: ETH_UNITS,
    ETH_BIGNUMBER_ROUNDING_MODE: { ROUNDING_MODE: BigNumber.ROUND_DOWN },
    ETH_POLLING_TIMEOUT: 1000/2,
    defaultBlock: 'latest',
    defaultAccount: undefined
};



/***/ }),

/***/ "./node_modules/web3/lib/utils/sha3.js":
/*!*********************************************!*\
  !*** ./node_modules/web3/lib/utils/sha3.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file sha3.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var CryptoJS = __webpack_require__(/*! crypto-js */ "./node_modules/crypto-js/index.js");
var sha3 = __webpack_require__(/*! crypto-js/sha3 */ "./node_modules/crypto-js/sha3.js");

module.exports = function (value, options) {
    if (options && options.encoding === 'hex') {
        if (value.length > 2 && value.substr(0, 2) === '0x') {
            value = value.substr(2);
        }
        value = CryptoJS.enc.Hex.parse(value);
    }

    return sha3(value, {
        outputLength: 256
    }).toString();
};



/***/ }),

/***/ "./node_modules/web3/lib/utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/utils/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file utils.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

/**
 * Utils
 *
 * @module utils
 */

/**
 * Utility functions
 *
 * @class [utils] utils
 * @constructor
 */


var BigNumber = __webpack_require__(/*! bignumber.js */ "./node_modules/bignumber.js/bignumber.js");
var sha3 = __webpack_require__(/*! ./sha3.js */ "./node_modules/web3/lib/utils/sha3.js");
var utf8 = __webpack_require__(/*! utf8 */ "./node_modules/utf8/utf8.js");

var unitMap = {
    'noether':      '0',
    'wei':          '1',
    'kwei':         '1000',
    'Kwei':         '1000',
    'babbage':      '1000',
    'femtoether':   '1000',
    'mwei':         '1000000',
    'Mwei':         '1000000',
    'lovelace':     '1000000',
    'picoether':    '1000000',
    'gwei':         '1000000000',
    'Gwei':         '1000000000',
    'shannon':      '1000000000',
    'nanoether':    '1000000000',
    'nano':         '1000000000',
    'szabo':        '1000000000000',
    'microether':   '1000000000000',
    'micro':        '1000000000000',
    'finney':       '1000000000000000',
    'milliether':   '1000000000000000',
    'milli':        '1000000000000000',
    'ether':        '1000000000000000000',
    'kether':       '1000000000000000000000',
    'grand':        '1000000000000000000000',
    'mether':       '1000000000000000000000000',
    'gether':       '1000000000000000000000000000',
    'tether':       '1000000000000000000000000000000'
};

/**
 * Should be called to pad string to expected length
 *
 * @method padLeft
 * @param {String} string to be padded
 * @param {Number} characters that result string should have
 * @param {String} sign, by default 0
 * @returns {String} right aligned string
 */
var padLeft = function (string, chars, sign) {
    return new Array(chars - string.length + 1).join(sign ? sign : "0") + string;
};

/**
 * Should be called to pad string to expected length
 *
 * @method padRight
 * @param {String} string to be padded
 * @param {Number} characters that result string should have
 * @param {String} sign, by default 0
 * @returns {String} right aligned string
 */
var padRight = function (string, chars, sign) {
    return string + (new Array(chars - string.length + 1).join(sign ? sign : "0"));
};

/**
 * Should be called to get utf8 from it's hex representation
 *
 * @method toUtf8
 * @param {String} string in hex
 * @returns {String} ascii string representation of hex value
 */
var toUtf8 = function(hex) {
// Find termination
    var str = "";
    var i = 0, l = hex.length;
    if (hex.substring(0, 2) === '0x') {
        i = 2;
    }
    for (; i < l; i+=2) {
        var code = parseInt(hex.substr(i, 2), 16);
        if (code === 0)
            break;
        str += String.fromCharCode(code);
    }

    return utf8.decode(str);
};

/**
 * Should be called to get ascii from it's hex representation
 *
 * @method toAscii
 * @param {String} string in hex
 * @returns {String} ascii string representation of hex value
 */
var toAscii = function(hex) {
// Find termination
    var str = "";
    var i = 0, l = hex.length;
    if (hex.substring(0, 2) === '0x') {
        i = 2;
    }
    for (; i < l; i+=2) {
        var code = parseInt(hex.substr(i, 2), 16);
        str += String.fromCharCode(code);
    }

    return str;
};

/**
 * Should be called to get hex representation (prefixed by 0x) of utf8 string
 *
 * @method fromUtf8
 * @param {String} string
 * @param {Number} optional padding
 * @returns {String} hex representation of input string
 */
var fromUtf8 = function(str) {
    str = utf8.encode(str);
    var hex = "";
    for(var i = 0; i < str.length; i++) {
        var code = str.charCodeAt(i);
        if (code === 0)
            break;
        var n = code.toString(16);
        hex += n.length < 2 ? '0' + n : n;
    }

    return "0x" + hex;
};

/**
 * Should be called to get hex representation (prefixed by 0x) of ascii string
 *
 * @method fromAscii
 * @param {String} string
 * @param {Number} optional padding
 * @returns {String} hex representation of input string
 */
var fromAscii = function(str) {
    var hex = "";
    for(var i = 0; i < str.length; i++) {
        var code = str.charCodeAt(i);
        var n = code.toString(16);
        hex += n.length < 2 ? '0' + n : n;
    }

    return "0x" + hex;
};

/**
 * Should be used to create full function/event name from json abi
 *
 * @method transformToFullName
 * @param {Object} json-abi
 * @return {String} full fnction/event name
 */
var transformToFullName = function (json) {
    if (json.name.indexOf('(') !== -1) {
        return json.name;
    }

    var typeName = json.inputs.map(function(i){return i.type; }).join();
    return json.name + '(' + typeName + ')';
};

/**
 * Should be called to get display name of contract function
 *
 * @method extractDisplayName
 * @param {String} name of function/event
 * @returns {String} display name for function/event eg. multiply(uint256) -> multiply
 */
var extractDisplayName = function (name) {
    var length = name.indexOf('(');
    return length !== -1 ? name.substr(0, length) : name;
};

/// @returns overloaded part of function/event name
var extractTypeName = function (name) {
    /// TODO: make it invulnerable
    var length = name.indexOf('(');
    return length !== -1 ? name.substr(length + 1, name.length - 1 - (length + 1)).replace(' ', '') : "";
};

/**
 * Converts value to it's decimal representation in string
 *
 * @method toDecimal
 * @param {String|Number|BigNumber}
 * @return {String}
 */
var toDecimal = function (value) {
    return toBigNumber(value).toNumber();
};

/**
 * Converts value to it's hex representation
 *
 * @method fromDecimal
 * @param {String|Number|BigNumber}
 * @return {String}
 */
var fromDecimal = function (value) {
    var number = toBigNumber(value);
    var result = number.toString(16);

    return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;
};

/**
 * Auto converts any given value into it's hex representation.
 *
 * And even stringifys objects before.
 *
 * @method toHex
 * @param {String|Number|BigNumber|Object}
 * @return {String}
 */
var toHex = function (val) {
    /*jshint maxcomplexity: 8 */

    if (isBoolean(val))
        return fromDecimal(+val);

    if (isBigNumber(val))
        return fromDecimal(val);

    if (typeof val === 'object')
        return fromUtf8(JSON.stringify(val));

    // if its a negative number, pass it through fromDecimal
    if (isString(val)) {
        if (val.indexOf('-0x') === 0)
            return fromDecimal(val);
        else if(val.indexOf('0x') === 0)
            return val;
        else if (!isFinite(val))
            return fromAscii(val);
    }

    return fromDecimal(val);
};

/**
 * Returns value of unit in Wei
 *
 * @method getValueOfUnit
 * @param {String} unit the unit to convert to, default ether
 * @returns {BigNumber} value of the unit (in Wei)
 * @throws error if the unit is not correct:w
 */
var getValueOfUnit = function (unit) {
    unit = unit ? unit.toLowerCase() : 'ether';
    var unitValue = unitMap[unit];
    if (unitValue === undefined) {
        throw new Error('This unit doesn\'t exists, please use the one of the following units' + JSON.stringify(unitMap, null, 2));
    }
    return new BigNumber(unitValue, 10);
};

/**
 * Takes a number of wei and converts it to any other ether unit.
 *
 * Possible units are:
 *   SI Short   SI Full        Effigy       Other
 * - kwei       femtoether     babbage
 * - mwei       picoether      lovelace
 * - gwei       nanoether      shannon      nano
 * - --         microether     szabo        micro
 * - --         milliether     finney       milli
 * - ether      --             --
 * - kether                    --           grand
 * - mether
 * - gether
 * - tether
 *
 * @method fromWei
 * @param {Number|String} number can be a number, number string or a HEX of a decimal
 * @param {String} unit the unit to convert to, default ether
 * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number
*/
var fromWei = function(number, unit) {
    var returnValue = toBigNumber(number).dividedBy(getValueOfUnit(unit));

    return isBigNumber(number) ? returnValue : returnValue.toString(10);
};

/**
 * Takes a number of a unit and converts it to wei.
 *
 * Possible units are:
 *   SI Short   SI Full        Effigy       Other
 * - kwei       femtoether     babbage
 * - mwei       picoether      lovelace
 * - gwei       nanoether      shannon      nano
 * - --         microether     szabo        micro
 * - --         milliether     finney       milli
 * - ether      --             --
 * - kether                    --           grand
 * - mether
 * - gether
 * - tether
 *
 * @method toWei
 * @param {Number|String|BigNumber} number can be a number, number string or a HEX of a decimal
 * @param {String} unit the unit to convert from, default ether
 * @return {String|Object} When given a BigNumber object it returns one as well, otherwise a number
*/
var toWei = function(number, unit) {
    var returnValue = toBigNumber(number).times(getValueOfUnit(unit));

    return isBigNumber(number) ? returnValue : returnValue.toString(10);
};

/**
 * Takes an input and transforms it into an bignumber
 *
 * @method toBigNumber
 * @param {Number|String|BigNumber} a number, string, HEX string or BigNumber
 * @return {BigNumber} BigNumber
*/
var toBigNumber = function(number) {
    /*jshint maxcomplexity:5 */
    number = number || 0;
    if (isBigNumber(number))
        return number;

    if (isString(number) && (number.indexOf('0x') === 0 || number.indexOf('-0x') === 0)) {
        return new BigNumber(number.replace('0x',''), 16);
    }

    return new BigNumber(number.toString(10), 10);
};

/**
 * Takes and input transforms it into bignumber and if it is negative value, into two's complement
 *
 * @method toTwosComplement
 * @param {Number|String|BigNumber}
 * @return {BigNumber}
 */
var toTwosComplement = function (number) {
    var bigNumber = toBigNumber(number).round();
    if (bigNumber.lessThan(0)) {
        return new BigNumber("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", 16).plus(bigNumber).plus(1);
    }
    return bigNumber;
};

/**
 * Checks if the given string is strictly an address
 *
 * @method isStrictAddress
 * @param {String} address the given HEX adress
 * @return {Boolean}
*/
var isStrictAddress = function (address) {
    return /^0x[0-9a-f]{40}$/i.test(address);
};

/**
 * Checks if the given string is an address
 *
 * @method isAddress
 * @param {String} address the given HEX adress
 * @return {Boolean}
*/
var isAddress = function (address) {
    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {
        // check if it has the basic requirements of an address
        return false;
    } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {
        // If it's all small caps or all all caps, return true
        return true;
    } else {
        // Otherwise check each case
        return isChecksumAddress(address);
    }
};

/**
 * Checks if the given string is a checksummed address
 *
 * @method isChecksumAddress
 * @param {String} address the given HEX adress
 * @return {Boolean}
*/
var isChecksumAddress = function (address) {
    // Check each case
    address = address.replace('0x','');
    var addressHash = sha3(address.toLowerCase());

    for (var i = 0; i < 40; i++ ) {
        // the nth letter should be uppercase if the nth digit of casemap is 1
        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {
            return false;
        }
    }
    return true;
};



/**
 * Makes a checksum address
 *
 * @method toChecksumAddress
 * @param {String} address the given HEX adress
 * @return {String}
*/
var toChecksumAddress = function (address) {
    if (typeof address === 'undefined') return '';

    address = address.toLowerCase().replace('0x','');
    var addressHash = sha3(address);
    var checksumAddress = '0x';

    for (var i = 0; i < address.length; i++ ) {
        // If ith character is 9 to f then make it uppercase
        if (parseInt(addressHash[i], 16) > 7) {
          checksumAddress += address[i].toUpperCase();
        } else {
            checksumAddress += address[i];
        }
    }
    return checksumAddress;
};

/**
 * Transforms given string to valid 20 bytes-length addres with 0x prefix
 *
 * @method toAddress
 * @param {String} address
 * @return {String} formatted address
 */
var toAddress = function (address) {
    if (isStrictAddress(address)) {
        return address;
    }

    if (/^[0-9a-f]{40}$/.test(address)) {
        return '0x' + address;
    }

    return '0x' + padLeft(toHex(address).substr(2), 40);
};

/**
 * Returns true if object is BigNumber, otherwise false
 *
 * @method isBigNumber
 * @param {Object}
 * @return {Boolean}
 */
var isBigNumber = function (object) {
    return object instanceof BigNumber ||
        (object && object.constructor && object.constructor.name === 'BigNumber');
};

/**
 * Returns true if object is string, otherwise false
 *
 * @method isString
 * @param {Object}
 * @return {Boolean}
 */
var isString = function (object) {
    return typeof object === 'string' ||
        (object && object.constructor && object.constructor.name === 'String');
};

/**
 * Returns true if object is function, otherwise false
 *
 * @method isFunction
 * @param {Object}
 * @return {Boolean}
 */
var isFunction = function (object) {
    return typeof object === 'function';
};

/**
 * Returns true if object is Objet, otherwise false
 *
 * @method isObject
 * @param {Object}
 * @return {Boolean}
 */
var isObject = function (object) {
    return object !== null && !(Array.isArray(object)) && typeof object === 'object';
};

/**
 * Returns true if object is boolean, otherwise false
 *
 * @method isBoolean
 * @param {Object}
 * @return {Boolean}
 */
var isBoolean = function (object) {
    return typeof object === 'boolean';
};

/**
 * Returns true if object is array, otherwise false
 *
 * @method isArray
 * @param {Object}
 * @return {Boolean}
 */
var isArray = function (object) {
    return Array.isArray(object);
};

/**
 * Returns true if given string is valid json object
 *
 * @method isJson
 * @param {String}
 * @return {Boolean}
 */
var isJson = function (str) {
    try {
        return !!JSON.parse(str);
    } catch (e) {
        return false;
    }
};

/**
 * Returns true if given string is a valid Ethereum block header bloom.
 *
 * @method isBloom
 * @param {String} hex encoded bloom filter
 * @return {Boolean}
 */
var isBloom = function (bloom) {
    if (!/^(0x)?[0-9a-f]{512}$/i.test(bloom)) {
        return false;
    } else if (/^(0x)?[0-9a-f]{512}$/.test(bloom) || /^(0x)?[0-9A-F]{512}$/.test(bloom)) {
        return true;
    }
    return false;
};

/**
 * Returns true if given string is a valid log topic.
 *
 * @method isTopic
 * @param {String} hex encoded topic
 * @return {Boolean}
 */
var isTopic = function (topic) {
    if (!/^(0x)?[0-9a-f]{64}$/i.test(topic)) {
        return false;
    } else if (/^(0x)?[0-9a-f]{64}$/.test(topic) || /^(0x)?[0-9A-F]{64}$/.test(topic)) {
        return true;
    }
    return false;
};

module.exports = {
    padLeft: padLeft,
    padRight: padRight,
    toHex: toHex,
    toDecimal: toDecimal,
    fromDecimal: fromDecimal,
    toUtf8: toUtf8,
    toAscii: toAscii,
    fromUtf8: fromUtf8,
    fromAscii: fromAscii,
    transformToFullName: transformToFullName,
    extractDisplayName: extractDisplayName,
    extractTypeName: extractTypeName,
    toWei: toWei,
    fromWei: fromWei,
    toBigNumber: toBigNumber,
    toTwosComplement: toTwosComplement,
    toAddress: toAddress,
    isBigNumber: isBigNumber,
    isStrictAddress: isStrictAddress,
    isAddress: isAddress,
    isChecksumAddress: isChecksumAddress,
    toChecksumAddress: toChecksumAddress,
    isFunction: isFunction,
    isString: isString,
    isObject: isObject,
    isBoolean: isBoolean,
    isArray: isArray,
    isJson: isJson,
    isBloom: isBloom,
    isTopic: isTopic,
};


/***/ }),

/***/ "./node_modules/web3/lib/version.json":
/*!********************************************!*\
  !*** ./node_modules/web3/lib/version.json ***!
  \********************************************/
/*! exports provided: version, default */
/***/ (function(module) {

module.exports = {"version":"0.20.3"};

/***/ }),

/***/ "./node_modules/web3/lib/web3.js":
/*!***************************************!*\
  !*** ./node_modules/web3/lib/web3.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file web3.js
 * @authors:
 *   Jeffrey Wilcke <jeff@ethdev.com>
 *   Marek Kotewicz <marek@ethdev.com>
 *   Marian Oancea <marian@ethdev.com>
 *   Fabian Vogelsteller <fabian@ethdev.com>
 *   Gav Wood <g@ethdev.com>
 * @date 2014
 */

var RequestManager = __webpack_require__(/*! ./web3/requestmanager */ "./node_modules/web3/lib/web3/requestmanager.js");
var Iban = __webpack_require__(/*! ./web3/iban */ "./node_modules/web3/lib/web3/iban.js");
var Eth = __webpack_require__(/*! ./web3/methods/eth */ "./node_modules/web3/lib/web3/methods/eth.js");
var DB = __webpack_require__(/*! ./web3/methods/db */ "./node_modules/web3/lib/web3/methods/db.js");
var Shh = __webpack_require__(/*! ./web3/methods/shh */ "./node_modules/web3/lib/web3/methods/shh.js");
var Net = __webpack_require__(/*! ./web3/methods/net */ "./node_modules/web3/lib/web3/methods/net.js");
var Personal = __webpack_require__(/*! ./web3/methods/personal */ "./node_modules/web3/lib/web3/methods/personal.js");
var Swarm = __webpack_require__(/*! ./web3/methods/swarm */ "./node_modules/web3/lib/web3/methods/swarm.js");
var Settings = __webpack_require__(/*! ./web3/settings */ "./node_modules/web3/lib/web3/settings.js");
var version = __webpack_require__(/*! ./version.json */ "./node_modules/web3/lib/version.json");
var utils = __webpack_require__(/*! ./utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var sha3 = __webpack_require__(/*! ./utils/sha3 */ "./node_modules/web3/lib/utils/sha3.js");
var extend = __webpack_require__(/*! ./web3/extend */ "./node_modules/web3/lib/web3/extend.js");
var Batch = __webpack_require__(/*! ./web3/batch */ "./node_modules/web3/lib/web3/batch.js");
var Property = __webpack_require__(/*! ./web3/property */ "./node_modules/web3/lib/web3/property.js");
var HttpProvider = __webpack_require__(/*! ./web3/httpprovider */ "./node_modules/web3/lib/web3/httpprovider.js");
var IpcProvider = __webpack_require__(/*! ./web3/ipcprovider */ "./node_modules/web3/lib/web3/ipcprovider.js");
var BigNumber = __webpack_require__(/*! bignumber.js */ "./node_modules/bignumber.js/bignumber.js");



function Web3 (provider) {
    this._requestManager = new RequestManager(provider);
    this.currentProvider = provider;
    this.eth = new Eth(this);
    this.db = new DB(this);
    this.shh = new Shh(this);
    this.net = new Net(this);
    this.personal = new Personal(this);
    this.bzz = new Swarm(this);
    this.settings = new Settings();
    this.version = {
        api: version.version
    };
    this.providers = {
        HttpProvider: HttpProvider,
        IpcProvider: IpcProvider
    };
    this._extend = extend(this);
    this._extend({
        properties: properties()
    });
}

// expose providers on the class
Web3.providers = {
    HttpProvider: HttpProvider,
    IpcProvider: IpcProvider
};

Web3.prototype.setProvider = function (provider) {
    this._requestManager.setProvider(provider);
    this.currentProvider = provider;
};

Web3.prototype.reset = function (keepIsSyncing) {
    this._requestManager.reset(keepIsSyncing);
    this.settings = new Settings();
};

Web3.prototype.BigNumber = BigNumber;
Web3.prototype.toHex = utils.toHex;
Web3.prototype.toAscii = utils.toAscii;
Web3.prototype.toUtf8 = utils.toUtf8;
Web3.prototype.fromAscii = utils.fromAscii;
Web3.prototype.fromUtf8 = utils.fromUtf8;
Web3.prototype.toDecimal = utils.toDecimal;
Web3.prototype.fromDecimal = utils.fromDecimal;
Web3.prototype.toBigNumber = utils.toBigNumber;
Web3.prototype.toWei = utils.toWei;
Web3.prototype.fromWei = utils.fromWei;
Web3.prototype.isAddress = utils.isAddress;
Web3.prototype.isChecksumAddress = utils.isChecksumAddress;
Web3.prototype.toChecksumAddress = utils.toChecksumAddress;
Web3.prototype.isIBAN = utils.isIBAN;
Web3.prototype.padLeft = utils.padLeft;
Web3.prototype.padRight = utils.padRight;


Web3.prototype.sha3 = function(string, options) {
    return '0x' + sha3(string, options);
};

/**
 * Transforms direct icap to address
 */
Web3.prototype.fromICAP = function (icap) {
    var iban = new Iban(icap);
    return iban.address();
};

var properties = function () {
    return [
        new Property({
            name: 'version.node',
            getter: 'web3_clientVersion'
        }),
        new Property({
            name: 'version.network',
            getter: 'net_version',
            inputFormatter: utils.toDecimal
        }),
        new Property({
            name: 'version.ethereum',
            getter: 'eth_protocolVersion',
            inputFormatter: utils.toDecimal
        }),
        new Property({
            name: 'version.whisper',
            getter: 'shh_version',
            inputFormatter: utils.toDecimal
        })
    ];
};

Web3.prototype.isConnected = function(){
    return (this.currentProvider && this.currentProvider.isConnected());
};

Web3.prototype.createBatch = function () {
    return new Batch(this);
};

module.exports = Web3;



/***/ }),

/***/ "./node_modules/web3/lib/web3/allevents.js":
/*!*************************************************!*\
  !*** ./node_modules/web3/lib/web3/allevents.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file allevents.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2014
 */

var sha3 = __webpack_require__(/*! ../utils/sha3 */ "./node_modules/web3/lib/utils/sha3.js");
var SolidityEvent = __webpack_require__(/*! ./event */ "./node_modules/web3/lib/web3/event.js");
var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var Filter = __webpack_require__(/*! ./filter */ "./node_modules/web3/lib/web3/filter.js");
var watches = __webpack_require__(/*! ./methods/watches */ "./node_modules/web3/lib/web3/methods/watches.js");

var AllSolidityEvents = function (requestManager, json, address) {
    this._requestManager = requestManager;
    this._json = json;
    this._address = address;
};

AllSolidityEvents.prototype.encode = function (options) {
    options = options || {};
    var result = {};

    ['fromBlock', 'toBlock'].filter(function (f) {
        return options[f] !== undefined;
    }).forEach(function (f) {
        result[f] = formatters.inputBlockNumberFormatter(options[f]);
    });

    result.address = this._address;

    return result;
};

AllSolidityEvents.prototype.decode = function (data) {
    data.data = data.data || '';
    data.topics = data.topics || [];

    var eventTopic = data.topics[0].slice(2);
    var match = this._json.filter(function (j) {
        return eventTopic === sha3(utils.transformToFullName(j));
    })[0];

    if (!match) { // cannot find matching event?
        console.warn('cannot find event for log');
        return data;
    }

    var event = new SolidityEvent(this._requestManager, match, this._address);
    return event.decode(data);
};

AllSolidityEvents.prototype.execute = function (options, callback) {

    if (utils.isFunction(arguments[arguments.length - 1])) {
        callback = arguments[arguments.length - 1];
        if(arguments.length === 1)
            options = null;
    }

    var o = this.encode(options);
    var formatter = this.decode.bind(this);
    return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);
};

AllSolidityEvents.prototype.attachToContract = function (contract) {
    var execute = this.execute.bind(this);
    contract.allEvents = execute;
};

module.exports = AllSolidityEvents;



/***/ }),

/***/ "./node_modules/web3/lib/web3/batch.js":
/*!*********************************************!*\
  !*** ./node_modules/web3/lib/web3/batch.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file batch.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var Jsonrpc = __webpack_require__(/*! ./jsonrpc */ "./node_modules/web3/lib/web3/jsonrpc.js");
var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");

var Batch = function (web3) {
    this.requestManager = web3._requestManager;
    this.requests = [];
};

/**
 * Should be called to add create new request to batch request
 *
 * @method add
 * @param {Object} jsonrpc requet object
 */
Batch.prototype.add = function (request) {
    this.requests.push(request);
};

/**
 * Should be called to execute batch request
 *
 * @method execute
 */
Batch.prototype.execute = function () {
    var requests = this.requests;
    this.requestManager.sendBatch(requests, function (err, results) {
        results = results || [];
        requests.map(function (request, index) {
            return results[index] || {};
        }).forEach(function (result, index) {
            if (requests[index].callback) {

                if (!Jsonrpc.isValidResponse(result)) {
                    return requests[index].callback(errors.InvalidResponse(result));
                }

                requests[index].callback(null, (requests[index].format ? requests[index].format(result.result) : result.result));
            }
        });
    }); 
};

module.exports = Batch;



/***/ }),

/***/ "./node_modules/web3/lib/web3/contract.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/web3/contract.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file contract.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2014
 */

var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var coder = __webpack_require__(/*! ../solidity/coder */ "./node_modules/web3/lib/solidity/coder.js");
var SolidityEvent = __webpack_require__(/*! ./event */ "./node_modules/web3/lib/web3/event.js");
var SolidityFunction = __webpack_require__(/*! ./function */ "./node_modules/web3/lib/web3/function.js");
var AllEvents = __webpack_require__(/*! ./allevents */ "./node_modules/web3/lib/web3/allevents.js");

/**
 * Should be called to encode constructor params
 *
 * @method encodeConstructorParams
 * @param {Array} abi
 * @param {Array} constructor params
 */
var encodeConstructorParams = function (abi, params) {
    return abi.filter(function (json) {
        return json.type === 'constructor' && json.inputs.length === params.length;
    }).map(function (json) {
        return json.inputs.map(function (input) {
            return input.type;
        });
    }).map(function (types) {
        return coder.encodeParams(types, params);
    })[0] || '';
};

/**
 * Should be called to add functions to contract object
 *
 * @method addFunctionsToContract
 * @param {Contract} contract
 * @param {Array} abi
 */
var addFunctionsToContract = function (contract) {
    contract.abi.filter(function (json) {
        return json.type === 'function';
    }).map(function (json) {
        return new SolidityFunction(contract._eth, json, contract.address);
    }).forEach(function (f) {
        f.attachToContract(contract);
    });
};

/**
 * Should be called to add events to contract object
 *
 * @method addEventsToContract
 * @param {Contract} contract
 * @param {Array} abi
 */
var addEventsToContract = function (contract) {
    var events = contract.abi.filter(function (json) {
        return json.type === 'event';
    });

    var All = new AllEvents(contract._eth._requestManager, events, contract.address);
    All.attachToContract(contract);

    events.map(function (json) {
        return new SolidityEvent(contract._eth._requestManager, json, contract.address);
    }).forEach(function (e) {
        e.attachToContract(contract);
    });
};


/**
 * Should be called to check if the contract gets properly deployed on the blockchain.
 *
 * @method checkForContractAddress
 * @param {Object} contract
 * @param {Function} callback
 * @returns {Undefined}
 */
var checkForContractAddress = function(contract, callback){
    var count = 0,
        callbackFired = false;

    // wait for receipt
    var filter = contract._eth.filter('latest', function(e){
        if (!e && !callbackFired) {
            count++;

            // stop watching after 50 blocks (timeout)
            if (count > 50) {

                filter.stopWatching(function() {});
                callbackFired = true;

                if (callback)
                    callback(new Error('Contract transaction couldn\'t be found after 50 blocks'));
                else
                    throw new Error('Contract transaction couldn\'t be found after 50 blocks');


            } else {

                contract._eth.getTransactionReceipt(contract.transactionHash, function(e, receipt){
                    if(receipt && !callbackFired) {

                        contract._eth.getCode(receipt.contractAddress, function(e, code){
                            /*jshint maxcomplexity: 6 */

                            if(callbackFired || !code)
                                return;

                            filter.stopWatching(function() {});
                            callbackFired = true;

                            if(code.length > 3) {

                                // console.log('Contract code deployed!');

                                contract.address = receipt.contractAddress;

                                // attach events and methods again after we have
                                addFunctionsToContract(contract);
                                addEventsToContract(contract);

                                // call callback for the second time
                                if(callback)
                                    callback(null, contract);

                            } else {
                                if(callback)
                                    callback(new Error('The contract code couldn\'t be stored, please check your gas amount.'));
                                else
                                    throw new Error('The contract code couldn\'t be stored, please check your gas amount.');
                            }
                        });
                    }
                });
            }
        }
    });
};

/**
 * Should be called to create new ContractFactory instance
 *
 * @method ContractFactory
 * @param {Array} abi
 */
var ContractFactory = function (eth, abi) {
    this.eth = eth;
    this.abi = abi;

    /**
     * Should be called to create new contract on a blockchain
     *
     * @method new
     * @param {Any} contract constructor param1 (optional)
     * @param {Any} contract constructor param2 (optional)
     * @param {Object} contract transaction object (required)
     * @param {Function} callback
     * @returns {Contract} returns contract instance
     */
    this.new = function () {
        /*jshint maxcomplexity: 7 */
        
        var contract = new Contract(this.eth, this.abi);

        // parse arguments
        var options = {}; // required!
        var callback;

        var args = Array.prototype.slice.call(arguments);
        if (utils.isFunction(args[args.length - 1])) {
            callback = args.pop();
        }

        var last = args[args.length - 1];
        if (utils.isObject(last) && !utils.isArray(last)) {
            options = args.pop();
        }

        if (options.value > 0) {
            var constructorAbi = abi.filter(function (json) {
                return json.type === 'constructor' && json.inputs.length === args.length;
            })[0] || {};

            if (!constructorAbi.payable) {
                throw new Error('Cannot send value to non-payable constructor');
            }
        }

        var bytes = encodeConstructorParams(this.abi, args);
        options.data += bytes;

        if (callback) {

            // wait for the contract address adn check if the code was deployed
            this.eth.sendTransaction(options, function (err, hash) {
                if (err) {
                    callback(err);
                } else {
                    // add the transaction hash
                    contract.transactionHash = hash;

                    // call callback for the first time
                    callback(null, contract);

                    checkForContractAddress(contract, callback);
                }
            });
        } else {
            var hash = this.eth.sendTransaction(options);
            // add the transaction hash
            contract.transactionHash = hash;
            checkForContractAddress(contract);
        }

        return contract;
    };

    this.new.getData = this.getData.bind(this);
};

/**
 * Should be called to create new ContractFactory
 *
 * @method contract
 * @param {Array} abi
 * @returns {ContractFactory} new contract factory
 */
//var contract = function (abi) {
    //return new ContractFactory(abi);
//};



/**
 * Should be called to get access to existing contract on a blockchain
 *
 * @method at
 * @param {Address} contract address (required)
 * @param {Function} callback {optional)
 * @returns {Contract} returns contract if no callback was passed,
 * otherwise calls callback function (err, contract)
 */
ContractFactory.prototype.at = function (address, callback) {
    var contract = new Contract(this.eth, this.abi, address);

    // this functions are not part of prototype,
    // because we dont want to spoil the interface
    addFunctionsToContract(contract);
    addEventsToContract(contract);

    if (callback) {
        callback(null, contract);
    }
    return contract;
};

/**
 * Gets the data, which is data to deploy plus constructor params
 *
 * @method getData
 */
ContractFactory.prototype.getData = function () {
    var options = {}; // required!
    var args = Array.prototype.slice.call(arguments);

    var last = args[args.length - 1];
    if (utils.isObject(last) && !utils.isArray(last)) {
        options = args.pop();
    }

    var bytes = encodeConstructorParams(this.abi, args);
    options.data += bytes;

    return options.data;
};

/**
 * Should be called to create new contract instance
 *
 * @method Contract
 * @param {Array} abi
 * @param {Address} contract address
 */
var Contract = function (eth, abi, address) {
    this._eth = eth;
    this.transactionHash = null;
    this.address = address;
    this.abi = abi;
};

module.exports = ContractFactory;


/***/ }),

/***/ "./node_modules/web3/lib/web3/errors.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/web3/errors.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file errors.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

module.exports = {
    InvalidNumberOfSolidityArgs: function () {
        return new Error('Invalid number of arguments to Solidity function');
    },
    InvalidNumberOfRPCParams: function () {
        return new Error('Invalid number of input parameters to RPC method');
    },
    InvalidConnection: function (host){
        return new Error('CONNECTION ERROR: Couldn\'t connect to node '+ host +'.');
    },
    InvalidProvider: function () {
        return new Error('Provider not set or invalid');
    },
    InvalidResponse: function (result){
        var message = !!result && !!result.error && !!result.error.message ? result.error.message : 'Invalid JSON RPC response: ' + JSON.stringify(result);
        return new Error(message);
    },
    ConnectionTimeout: function (ms){
        return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');
    }
};


/***/ }),

/***/ "./node_modules/web3/lib/web3/event.js":
/*!*********************************************!*\
  !*** ./node_modules/web3/lib/web3/event.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file event.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2014
 */

var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var coder = __webpack_require__(/*! ../solidity/coder */ "./node_modules/web3/lib/solidity/coder.js");
var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var sha3 = __webpack_require__(/*! ../utils/sha3 */ "./node_modules/web3/lib/utils/sha3.js");
var Filter = __webpack_require__(/*! ./filter */ "./node_modules/web3/lib/web3/filter.js");
var watches = __webpack_require__(/*! ./methods/watches */ "./node_modules/web3/lib/web3/methods/watches.js");

/**
 * This prototype should be used to create event filters
 */
var SolidityEvent = function (requestManager, json, address) {
    this._requestManager = requestManager;
    this._params = json.inputs;
    this._name = utils.transformToFullName(json);
    this._address = address;
    this._anonymous = json.anonymous;
};

/**
 * Should be used to get filtered param types
 *
 * @method types
 * @param {Bool} decide if returned typed should be indexed
 * @return {Array} array of types
 */
SolidityEvent.prototype.types = function (indexed) {
    return this._params.filter(function (i) {
        return i.indexed === indexed;
    }).map(function (i) {
        return i.type;
    });
};

/**
 * Should be used to get event display name
 *
 * @method displayName
 * @return {String} event display name
 */
SolidityEvent.prototype.displayName = function () {
    return utils.extractDisplayName(this._name);
};

/**
 * Should be used to get event type name
 *
 * @method typeName
 * @return {String} event type name
 */
SolidityEvent.prototype.typeName = function () {
    return utils.extractTypeName(this._name);
};

/**
 * Should be used to get event signature
 *
 * @method signature
 * @return {String} event signature
 */
SolidityEvent.prototype.signature = function () {
    return sha3(this._name);
};

/**
 * Should be used to encode indexed params and options to one final object
 *
 * @method encode
 * @param {Object} indexed
 * @param {Object} options
 * @return {Object} everything combined together and encoded
 */
SolidityEvent.prototype.encode = function (indexed, options) {
    indexed = indexed || {};
    options = options || {};
    var result = {};

    ['fromBlock', 'toBlock'].filter(function (f) {
        return options[f] !== undefined;
    }).forEach(function (f) {
        result[f] = formatters.inputBlockNumberFormatter(options[f]);
    });

    result.topics = [];

    result.address = this._address;
    if (!this._anonymous) {
        result.topics.push('0x' + this.signature());
    }

    var indexedTopics = this._params.filter(function (i) {
        return i.indexed === true;
    }).map(function (i) {
        var value = indexed[i.name];
        if (value === undefined || value === null) {
            return null;
        }

        if (utils.isArray(value)) {
            return value.map(function (v) {
                return '0x' + coder.encodeParam(i.type, v);
            });
        }
        return '0x' + coder.encodeParam(i.type, value);
    });

    result.topics = result.topics.concat(indexedTopics);

    return result;
};

/**
 * Should be used to decode indexed params and options
 *
 * @method decode
 * @param {Object} data
 * @return {Object} result object with decoded indexed && not indexed params
 */
SolidityEvent.prototype.decode = function (data) {

    data.data = data.data || '';
    data.topics = data.topics || [];

    var argTopics = this._anonymous ? data.topics : data.topics.slice(1);
    var indexedData = argTopics.map(function (topics) { return topics.slice(2); }).join("");
    var indexedParams = coder.decodeParams(this.types(true), indexedData);

    var notIndexedData = data.data.slice(2);
    var notIndexedParams = coder.decodeParams(this.types(false), notIndexedData);

    var result = formatters.outputLogFormatter(data);
    result.event = this.displayName();
    result.address = data.address;

    result.args = this._params.reduce(function (acc, current) {
        acc[current.name] = current.indexed ? indexedParams.shift() : notIndexedParams.shift();
        return acc;
    }, {});

    delete result.data;
    delete result.topics;

    return result;
};

/**
 * Should be used to create new filter object from event
 *
 * @method execute
 * @param {Object} indexed
 * @param {Object} options
 * @return {Object} filter object
 */
SolidityEvent.prototype.execute = function (indexed, options, callback) {

    if (utils.isFunction(arguments[arguments.length - 1])) {
        callback = arguments[arguments.length - 1];
        if(arguments.length === 2)
            options = null;
        if(arguments.length === 1) {
            options = null;
            indexed = {};
        }
    }

    var o = this.encode(indexed, options);
    var formatter = this.decode.bind(this);
    return new Filter(o, 'eth', this._requestManager, watches.eth(), formatter, callback);
};

/**
 * Should be used to attach event to contract object
 *
 * @method attachToContract
 * @param {Contract}
 */
SolidityEvent.prototype.attachToContract = function (contract) {
    var execute = this.execute.bind(this);
    var displayName = this.displayName();
    if (!contract[displayName]) {
        contract[displayName] = execute;
    }
    contract[displayName][this.typeName()] = this.execute.bind(this, contract);
};

module.exports = SolidityEvent;



/***/ }),

/***/ "./node_modules/web3/lib/web3/extend.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/web3/extend.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var utils = __webpack_require__(/*! ./../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var Method = __webpack_require__(/*! ./method */ "./node_modules/web3/lib/web3/method.js");
var Property = __webpack_require__(/*! ./property */ "./node_modules/web3/lib/web3/property.js");

// TODO: refactor, so the input params are not altered.
// it's necessary to make same 'extension' work with multiple providers
var extend = function (web3) {
    /* jshint maxcomplexity:5 */
    var ex = function (extension) {

        var extendedObject;
        if (extension.property) {
            if (!web3[extension.property]) {
                web3[extension.property] = {};
            }
            extendedObject = web3[extension.property];
        } else {
            extendedObject = web3;
        }

        if (extension.methods) {
            extension.methods.forEach(function (method) {
                method.attachToObject(extendedObject);
                method.setRequestManager(web3._requestManager);
            });
        }

        if (extension.properties) {
            extension.properties.forEach(function (property) {
                property.attachToObject(extendedObject);
                property.setRequestManager(web3._requestManager);
            });
        }
    };

    ex.formatters = formatters; 
    ex.utils = utils;
    ex.Method = Method;
    ex.Property = Property;

    return ex;
};



module.exports = extend;



/***/ }),

/***/ "./node_modules/web3/lib/web3/filter.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/web3/filter.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file filter.js
 * @authors:
 *   Jeffrey Wilcke <jeff@ethdev.com>
 *   Marek Kotewicz <marek@ethdev.com>
 *   Marian Oancea <marian@ethdev.com>
 *   Fabian Vogelsteller <fabian@ethdev.com>
 *   Gav Wood <g@ethdev.com>
 * @date 2014
 */

var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");

/**
* Converts a given topic to a hex string, but also allows null values.
*
* @param {Mixed} value
* @return {String}
*/
var toTopic = function(value){

    if(value === null || typeof value === 'undefined')
        return null;

    value = String(value);

    if(value.indexOf('0x') === 0)
        return value;
    else
        return utils.fromUtf8(value);
};

/// This method should be called on options object, to verify deprecated properties && lazy load dynamic ones
/// @param should be string or object
/// @returns options string or object
var getOptions = function (options, type) {
    /*jshint maxcomplexity: 6 */

    if (utils.isString(options)) {
        return options;
    }

    options = options || {};


    switch(type) {
        case 'eth':

            // make sure topics, get converted to hex
            options.topics = options.topics || [];
            options.topics = options.topics.map(function(topic){
                return (utils.isArray(topic)) ? topic.map(toTopic) : toTopic(topic);
            });

            return {
                topics: options.topics,
                from: options.from,
                to: options.to,
                address: options.address,
                fromBlock: formatters.inputBlockNumberFormatter(options.fromBlock),
                toBlock: formatters.inputBlockNumberFormatter(options.toBlock)
            };
        case 'shh':
            return options;
    }
};

/**
Adds the callback and sets up the methods, to iterate over the results.

@method getLogsAtStart
@param {Object} self
@param {function} callback
*/
var getLogsAtStart = function(self, callback){
    // call getFilterLogs for the first watch callback start
    if (!utils.isString(self.options)) {
        self.get(function (err, messages) {
            // don't send all the responses to all the watches again... just to self one
            if (err) {
                callback(err);
            }

            if(utils.isArray(messages)) {
                messages.forEach(function (message) {
                    callback(null, message);
                });
            }
        });
    }
};

/**
Adds the callback and sets up the methods, to iterate over the results.

@method pollFilter
@param {Object} self
*/
var pollFilter = function(self) {

    var onMessage = function (error, messages) {
        if (error) {
            return self.callbacks.forEach(function (callback) {
                callback(error);
            });
        }

        if(utils.isArray(messages)) {
            messages.forEach(function (message) {
                message = self.formatter ? self.formatter(message) : message;
                self.callbacks.forEach(function (callback) {
                    callback(null, message);
                });
            });
        }
    };

    self.requestManager.startPolling({
        method: self.implementation.poll.call,
        params: [self.filterId],
    }, self.filterId, onMessage, self.stopWatching.bind(self));

};

var Filter = function (options, type, requestManager, methods, formatter, callback, filterCreationErrorCallback) {
    var self = this;
    var implementation = {};
    methods.forEach(function (method) {
        method.setRequestManager(requestManager);
        method.attachToObject(implementation);
    });
    this.requestManager = requestManager;
    this.options = getOptions(options, type);
    this.implementation = implementation;
    this.filterId = null;
    this.callbacks = [];
    this.getLogsCallbacks = [];
    this.pollFilters = [];
    this.formatter = formatter;
    this.implementation.newFilter(this.options, function(error, id){
        if(error) {
            self.callbacks.forEach(function(cb){
                cb(error);
            });
            if (typeof filterCreationErrorCallback === 'function') {
              filterCreationErrorCallback(error);
            }
        } else {
            self.filterId = id;

            // check if there are get pending callbacks as a consequence
            // of calling get() with filterId unassigned.
            self.getLogsCallbacks.forEach(function (cb){
                self.get(cb);
            });
            self.getLogsCallbacks = [];

            // get filter logs for the already existing watch calls
            self.callbacks.forEach(function(cb){
                getLogsAtStart(self, cb);
            });
            if(self.callbacks.length > 0)
                pollFilter(self);

            // start to watch immediately
            if(typeof callback === 'function') {
                return self.watch(callback);
            }
        }
    });

    return this;
};

Filter.prototype.watch = function (callback) {
    this.callbacks.push(callback);

    if(this.filterId) {
        getLogsAtStart(this, callback);
        pollFilter(this);
    }

    return this;
};

Filter.prototype.stopWatching = function (callback) {
    this.requestManager.stopPolling(this.filterId);
    this.callbacks = [];
    // remove filter async
    if (callback) {
        this.implementation.uninstallFilter(this.filterId, callback);
    } else {
        return this.implementation.uninstallFilter(this.filterId);
    }
};

Filter.prototype.get = function (callback) {
    var self = this;
    if (utils.isFunction(callback)) {
        if (this.filterId === null) {
            // If filterId is not set yet, call it back
            // when newFilter() assigns it.
            this.getLogsCallbacks.push(callback);
        } else {
            this.implementation.getLogs(this.filterId, function(err, res){
                if (err) {
                    callback(err);
                } else {
                    callback(null, res.map(function (log) {
                        return self.formatter ? self.formatter(log) : log;
                    }));
                }
            });
        }
    } else {
        if (this.filterId === null) {
            throw new Error('Filter ID Error: filter().get() can\'t be chained synchronous, please provide a callback for the get() method.');
        }
        var logs = this.implementation.getLogs(this.filterId);
        return logs.map(function (log) {
            return self.formatter ? self.formatter(log) : log;
        });
    }

    return this;
};

module.exports = Filter;



/***/ }),

/***/ "./node_modules/web3/lib/web3/formatters.js":
/*!**************************************************!*\
  !*** ./node_modules/web3/lib/web3/formatters.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file formatters.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @author Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */




var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var config = __webpack_require__(/*! ../utils/config */ "./node_modules/web3/lib/utils/config.js");
var Iban = __webpack_require__(/*! ./iban */ "./node_modules/web3/lib/web3/iban.js");

/**
 * Should the format output to a big number
 *
 * @method outputBigNumberFormatter
 * @param {String|Number|BigNumber}
 * @returns {BigNumber} object
 */
var outputBigNumberFormatter = function (number) {
    return utils.toBigNumber(number);
};

var isPredefinedBlockNumber = function (blockNumber) {
    return blockNumber === 'latest' || blockNumber === 'pending' || blockNumber === 'earliest';
};

var inputDefaultBlockNumberFormatter = function (blockNumber) {
    if (blockNumber === undefined) {
        return config.defaultBlock;
    }
    return inputBlockNumberFormatter(blockNumber);
};

var inputBlockNumberFormatter = function (blockNumber) {
    if (blockNumber === undefined) {
        return undefined;
    } else if (isPredefinedBlockNumber(blockNumber)) {
        return blockNumber;
    }
    return utils.toHex(blockNumber);
};

/**
 * Formats the input of a transaction and converts all values to HEX
 *
 * @method inputCallFormatter
 * @param {Object} transaction options
 * @returns object
*/
var inputCallFormatter = function (options){

    options.from = options.from || config.defaultAccount;

    if (options.from) {
        options.from = inputAddressFormatter(options.from);
    }

    if (options.to) { // it might be contract creation
        options.to = inputAddressFormatter(options.to);
    }

    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {
        return options[key] !== undefined;
    }).forEach(function(key){
        options[key] = utils.fromDecimal(options[key]);
    });

    return options;
};

/**
 * Formats the input of a transaction and converts all values to HEX
 *
 * @method inputTransactionFormatter
 * @param {Object} transaction options
 * @returns object
*/
var inputTransactionFormatter = function (options){

    options.from = options.from || config.defaultAccount;
    options.from = inputAddressFormatter(options.from);

    if (options.to) { // it might be contract creation
        options.to = inputAddressFormatter(options.to);
    }

    ['gasPrice', 'gas', 'value', 'nonce'].filter(function (key) {
        return options[key] !== undefined;
    }).forEach(function(key){
        options[key] = utils.fromDecimal(options[key]);
    });

    return options;
};

/**
 * Formats the output of a transaction to its proper values
 *
 * @method outputTransactionFormatter
 * @param {Object} tx
 * @returns {Object}
*/
var outputTransactionFormatter = function (tx){
    if(tx.blockNumber !== null)
        tx.blockNumber = utils.toDecimal(tx.blockNumber);
    if(tx.transactionIndex !== null)
        tx.transactionIndex = utils.toDecimal(tx.transactionIndex);
    tx.nonce = utils.toDecimal(tx.nonce);
    tx.gas = utils.toDecimal(tx.gas);
    tx.gasPrice = utils.toBigNumber(tx.gasPrice);
    tx.value = utils.toBigNumber(tx.value);
    return tx;
};

/**
 * Formats the output of a transaction receipt to its proper values
 *
 * @method outputTransactionReceiptFormatter
 * @param {Object} receipt
 * @returns {Object}
*/
var outputTransactionReceiptFormatter = function (receipt){
    if(receipt.blockNumber !== null)
        receipt.blockNumber = utils.toDecimal(receipt.blockNumber);
    if(receipt.transactionIndex !== null)
        receipt.transactionIndex = utils.toDecimal(receipt.transactionIndex);
    receipt.cumulativeGasUsed = utils.toDecimal(receipt.cumulativeGasUsed);
    receipt.gasUsed = utils.toDecimal(receipt.gasUsed);

    if(utils.isArray(receipt.logs)) {
        receipt.logs = receipt.logs.map(function(log){
            return outputLogFormatter(log);
        });
    }

    return receipt;
};

/**
 * Formats the output of a block to its proper values
 *
 * @method outputBlockFormatter
 * @param {Object} block
 * @returns {Object}
*/
var outputBlockFormatter = function(block) {

    // transform to number
    block.gasLimit = utils.toDecimal(block.gasLimit);
    block.gasUsed = utils.toDecimal(block.gasUsed);
    block.size = utils.toDecimal(block.size);
    block.timestamp = utils.toDecimal(block.timestamp);
    if(block.number !== null)
        block.number = utils.toDecimal(block.number);

    block.difficulty = utils.toBigNumber(block.difficulty);
    block.totalDifficulty = utils.toBigNumber(block.totalDifficulty);

    if (utils.isArray(block.transactions)) {
        block.transactions.forEach(function(item){
            if(!utils.isString(item))
                return outputTransactionFormatter(item);
        });
    }

    return block;
};

/**
 * Formats the output of a log
 *
 * @method outputLogFormatter
 * @param {Object} log object
 * @returns {Object} log
*/
var outputLogFormatter = function(log) {
    if(log.blockNumber)
        log.blockNumber = utils.toDecimal(log.blockNumber);
    if(log.transactionIndex)
        log.transactionIndex = utils.toDecimal(log.transactionIndex);
    if(log.logIndex)
        log.logIndex = utils.toDecimal(log.logIndex);

    return log;
};

/**
 * Formats the input of a whisper post and converts all values to HEX
 *
 * @method inputPostFormatter
 * @param {Object} transaction object
 * @returns {Object}
*/
var inputPostFormatter = function(post) {

    // post.payload = utils.toHex(post.payload);
    post.ttl = utils.fromDecimal(post.ttl);
    post.workToProve = utils.fromDecimal(post.workToProve);
    post.priority = utils.fromDecimal(post.priority);

    // fallback
    if (!utils.isArray(post.topics)) {
        post.topics = post.topics ? [post.topics] : [];
    }

    // format the following options
    post.topics = post.topics.map(function(topic){
        // convert only if not hex
        return (topic.indexOf('0x') === 0) ? topic : utils.fromUtf8(topic);
    });

    return post;
};

/**
 * Formats the output of a received post message
 *
 * @method outputPostFormatter
 * @param {Object}
 * @returns {Object}
 */
var outputPostFormatter = function(post){

    post.expiry = utils.toDecimal(post.expiry);
    post.sent = utils.toDecimal(post.sent);
    post.ttl = utils.toDecimal(post.ttl);
    post.workProved = utils.toDecimal(post.workProved);
    // post.payloadRaw = post.payload;
    // post.payload = utils.toAscii(post.payload);

    // if (utils.isJson(post.payload)) {
    //     post.payload = JSON.parse(post.payload);
    // }

    // format the following options
    if (!post.topics) {
        post.topics = [];
    }
    post.topics = post.topics.map(function(topic){
        return utils.toAscii(topic);
    });

    return post;
};

var inputAddressFormatter = function (address) {
    var iban = new Iban(address);
    if (iban.isValid() && iban.isDirect()) {
        return '0x' + iban.address();
    } else if (utils.isStrictAddress(address)) {
        return address;
    } else if (utils.isAddress(address)) {
        return '0x' + address;
    }
    throw new Error('invalid address');
};


var outputSyncingFormatter = function(result) {
    if (!result) {
        return result;
    }

    result.startingBlock = utils.toDecimal(result.startingBlock);
    result.currentBlock = utils.toDecimal(result.currentBlock);
    result.highestBlock = utils.toDecimal(result.highestBlock);
    if (result.knownStates) {
        result.knownStates = utils.toDecimal(result.knownStates);
        result.pulledStates = utils.toDecimal(result.pulledStates);
    }

    return result;
};

module.exports = {
    inputDefaultBlockNumberFormatter: inputDefaultBlockNumberFormatter,
    inputBlockNumberFormatter: inputBlockNumberFormatter,
    inputCallFormatter: inputCallFormatter,
    inputTransactionFormatter: inputTransactionFormatter,
    inputAddressFormatter: inputAddressFormatter,
    inputPostFormatter: inputPostFormatter,
    outputBigNumberFormatter: outputBigNumberFormatter,
    outputTransactionFormatter: outputTransactionFormatter,
    outputTransactionReceiptFormatter: outputTransactionReceiptFormatter,
    outputBlockFormatter: outputBlockFormatter,
    outputLogFormatter: outputLogFormatter,
    outputPostFormatter: outputPostFormatter,
    outputSyncingFormatter: outputSyncingFormatter
};



/***/ }),

/***/ "./node_modules/web3/lib/web3/function.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/web3/function.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file function.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var coder = __webpack_require__(/*! ../solidity/coder */ "./node_modules/web3/lib/solidity/coder.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");
var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var sha3 = __webpack_require__(/*! ../utils/sha3 */ "./node_modules/web3/lib/utils/sha3.js");

/**
 * This prototype should be used to call/sendTransaction to solidity functions
 */
var SolidityFunction = function (eth, json, address) {
    this._eth = eth;
    this._inputTypes = json.inputs.map(function (i) {
        return i.type;
    });
    this._outputTypes = json.outputs.map(function (i) {
        return i.type;
    });
    this._constant = json.constant;
    this._payable = json.payable;
    this._name = utils.transformToFullName(json);
    this._address = address;
};

SolidityFunction.prototype.extractCallback = function (args) {
    if (utils.isFunction(args[args.length - 1])) {
        return args.pop(); // modify the args array!
    }
};

SolidityFunction.prototype.extractDefaultBlock = function (args) {
    if (args.length > this._inputTypes.length && !utils.isObject(args[args.length -1])) {
        return formatters.inputDefaultBlockNumberFormatter(args.pop()); // modify the args array!
    }
};

/**
 * Should be called to check if the number of arguments is correct
 *
 * @method validateArgs
 * @param {Array} arguments
 * @throws {Error} if it is not
 */
SolidityFunction.prototype.validateArgs = function (args) {
    var inputArgs = args.filter(function (a) {
      // filter the options object but not arguments that are arrays
      return !( (utils.isObject(a) === true) &&
                (utils.isArray(a) === false) &&
                (utils.isBigNumber(a) === false)
              );
    });
    if (inputArgs.length !== this._inputTypes.length) {
        throw errors.InvalidNumberOfSolidityArgs();
    }
};

/**
 * Should be used to create payload from arguments
 *
 * @method toPayload
 * @param {Array} solidity function params
 * @param {Object} optional payload options
 */
SolidityFunction.prototype.toPayload = function (args) {
    var options = {};
    if (args.length > this._inputTypes.length && utils.isObject(args[args.length -1])) {
        options = args[args.length - 1];
    }
    this.validateArgs(args);
    options.to = this._address;
    options.data = '0x' + this.signature() + coder.encodeParams(this._inputTypes, args);
    return options;
};

/**
 * Should be used to get function signature
 *
 * @method signature
 * @return {String} function signature
 */
SolidityFunction.prototype.signature = function () {
    return sha3(this._name).slice(0, 8);
};


SolidityFunction.prototype.unpackOutput = function (output) {
    if (!output) {
        return;
    }

    output = output.length >= 2 ? output.slice(2) : output;
    var result = coder.decodeParams(this._outputTypes, output);
    return result.length === 1 ? result[0] : result;
};

/**
 * Calls a contract function.
 *
 * @method call
 * @param {...Object} Contract function arguments
 * @param {function} If the last argument is a function, the contract function
 *   call will be asynchronous, and the callback will be passed the
 *   error and result.
 * @return {String} output bytes
 */
SolidityFunction.prototype.call = function () {
    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });
    var callback = this.extractCallback(args);
    var defaultBlock = this.extractDefaultBlock(args);
    var payload = this.toPayload(args);


    if (!callback) {
        var output = this._eth.call(payload, defaultBlock);
        return this.unpackOutput(output);
    }

    var self = this;
    this._eth.call(payload, defaultBlock, function (error, output) {
        if (error) return callback(error, null);

        var unpacked = null;
        try {
            unpacked = self.unpackOutput(output);
        }
        catch (e) {
            error = e;
        }

        callback(error, unpacked);
    });
};

/**
 * Should be used to sendTransaction to solidity function
 *
 * @method sendTransaction
 */
SolidityFunction.prototype.sendTransaction = function () {
    var args = Array.prototype.slice.call(arguments).filter(function (a) {return a !== undefined; });
    var callback = this.extractCallback(args);
    var payload = this.toPayload(args);

    if (payload.value > 0 && !this._payable) {
        throw new Error('Cannot send value to non-payable function');
    }

    if (!callback) {
        return this._eth.sendTransaction(payload);
    }

    this._eth.sendTransaction(payload, callback);
};

/**
 * Should be used to estimateGas of solidity function
 *
 * @method estimateGas
 */
SolidityFunction.prototype.estimateGas = function () {
    var args = Array.prototype.slice.call(arguments);
    var callback = this.extractCallback(args);
    var payload = this.toPayload(args);

    if (!callback) {
        return this._eth.estimateGas(payload);
    }

    this._eth.estimateGas(payload, callback);
};

/**
 * Return the encoded data of the call
 *
 * @method getData
 * @return {String} the encoded data
 */
SolidityFunction.prototype.getData = function () {
    var args = Array.prototype.slice.call(arguments);
    var payload = this.toPayload(args);

    return payload.data;
};

/**
 * Should be used to get function display name
 *
 * @method displayName
 * @return {String} display name of the function
 */
SolidityFunction.prototype.displayName = function () {
    return utils.extractDisplayName(this._name);
};

/**
 * Should be used to get function type name
 *
 * @method typeName
 * @return {String} type name of the function
 */
SolidityFunction.prototype.typeName = function () {
    return utils.extractTypeName(this._name);
};

/**
 * Should be called to get rpc requests from solidity function
 *
 * @method request
 * @returns {Object}
 */
SolidityFunction.prototype.request = function () {
    var args = Array.prototype.slice.call(arguments);
    var callback = this.extractCallback(args);
    var payload = this.toPayload(args);
    var format = this.unpackOutput.bind(this);

    return {
        method: this._constant ? 'eth_call' : 'eth_sendTransaction',
        callback: callback,
        params: [payload],
        format: format
    };
};

/**
 * Should be called to execute function
 *
 * @method execute
 */
SolidityFunction.prototype.execute = function () {
    var transaction = !this._constant;

    // send transaction
    if (transaction) {
        return this.sendTransaction.apply(this, Array.prototype.slice.call(arguments));
    }

    // call
    return this.call.apply(this, Array.prototype.slice.call(arguments));
};

/**
 * Should be called to attach function to contract
 *
 * @method attachToContract
 * @param {Contract}
 */
SolidityFunction.prototype.attachToContract = function (contract) {
    var execute = this.execute.bind(this);
    execute.request = this.request.bind(this);
    execute.call = this.call.bind(this);
    execute.sendTransaction = this.sendTransaction.bind(this);
    execute.estimateGas = this.estimateGas.bind(this);
    execute.getData = this.getData.bind(this);
    var displayName = this.displayName();
    if (!contract[displayName]) {
        contract[displayName] = execute;
    }
    contract[displayName][this.typeName()] = execute; // circular!!!!
};

module.exports = SolidityFunction;


/***/ }),

/***/ "./node_modules/web3/lib/web3/httpprovider.js":
/*!****************************************************!*\
  !*** ./node_modules/web3/lib/web3/httpprovider.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file httpprovider.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 *   Marian Oancea <marian@ethdev.com>
 *   Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */

var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");

// workaround to use httpprovider in different envs

// browser
if (typeof window !== 'undefined' && window.XMLHttpRequest) {
  XMLHttpRequest = window.XMLHttpRequest; // jshint ignore: line
// node
} else {
  XMLHttpRequest = __webpack_require__(/*! xmlhttprequest */ "./node_modules/xmlhttprequest/lib/XMLHttpRequest.js").XMLHttpRequest; // jshint ignore: line
}

var XHR2 = __webpack_require__(/*! xhr2 */ "./node_modules/xhr2/lib/xhr2.js"); // jshint ignore: line

/**
 * HttpProvider should be used to send rpc calls over http
 */
var HttpProvider = function (host, timeout, user, password, headers) {
  this.host = host || 'http://localhost:8545';
  this.timeout = timeout || 0;
  this.user = user;
  this.password = password;
  this.headers = headers;
};

/**
 * Should be called to prepare new XMLHttpRequest
 *
 * @method prepareRequest
 * @param {Boolean} true if request should be async
 * @return {XMLHttpRequest} object
 */
HttpProvider.prototype.prepareRequest = function (async) {
  var request;

  if (async) {
    request = new XHR2();
    request.timeout = this.timeout;
  } else {
    request = new XMLHttpRequest();
  }

  request.open('POST', this.host, async);
  if (this.user && this.password) {
    var auth = 'Basic ' + new Buffer(this.user + ':' + this.password).toString('base64');
    request.setRequestHeader('Authorization', auth);
  } request.setRequestHeader('Content-Type', 'application/json');
  if(this.headers) {
      this.headers.forEach(function(header) {
          request.setRequestHeader(header.name, header.value);
      });
  }
  return request;
};

/**
 * Should be called to make sync request
 *
 * @method send
 * @param {Object} payload
 * @return {Object} result
 */
HttpProvider.prototype.send = function (payload) {
  var request = this.prepareRequest(false);

  try {
    request.send(JSON.stringify(payload));
  } catch (error) {
    throw errors.InvalidConnection(this.host);
  }

  var result = request.responseText;

  try {
    result = JSON.parse(result);
  } catch (e) {
    throw errors.InvalidResponse(request.responseText);
  }

  return result;
};

/**
 * Should be used to make async request
 *
 * @method sendAsync
 * @param {Object} payload
 * @param {Function} callback triggered on end with (err, result)
 */
HttpProvider.prototype.sendAsync = function (payload, callback) {
  var request = this.prepareRequest(true);

  request.onreadystatechange = function () {
    if (request.readyState === 4 && request.timeout !== 1) {
      var result = request.responseText;
      var error = null;

      try {
        result = JSON.parse(result);
      } catch (e) {
        error = errors.InvalidResponse(request.responseText);
      }

      callback(error, result);
    }
  };

  request.ontimeout = function () {
    callback(errors.ConnectionTimeout(this.timeout));
  };

  try {
    request.send(JSON.stringify(payload));
  } catch (error) {
    callback(errors.InvalidConnection(this.host));
  }
};

/**
 * Synchronously tries to make Http request
 *
 * @method isConnected
 * @return {Boolean} returns true if request haven't failed. Otherwise false
 */
HttpProvider.prototype.isConnected = function () {
  try {
    this.send({
      id: 9999999999,
      jsonrpc: '2.0',
      method: 'net_listening',
      params: []
    });
    return true;
  } catch (e) {
    return false;
  }
};

module.exports = HttpProvider;


/***/ }),

/***/ "./node_modules/web3/lib/web3/iban.js":
/*!********************************************!*\
  !*** ./node_modules/web3/lib/web3/iban.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file iban.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var BigNumber = __webpack_require__(/*! bignumber.js */ "./node_modules/bignumber.js/bignumber.js");

var padLeft = function (string, bytes) {
    var result = string;
    while (result.length < bytes * 2) {
        result = '0' + result;
    }
    return result;
};

/**
 * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to
 * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.
 *
 * @method iso13616Prepare
 * @param {String} iban the IBAN
 * @returns {String} the prepared IBAN
 */
var iso13616Prepare = function (iban) {
    var A = 'A'.charCodeAt(0);
    var Z = 'Z'.charCodeAt(0);

    iban = iban.toUpperCase();
    iban = iban.substr(4) + iban.substr(0,4);

    return iban.split('').map(function(n){
        var code = n.charCodeAt(0);
        if (code >= A && code <= Z){
            // A = 10, B = 11, ... Z = 35
            return code - A + 10;
        } else {
            return n;
        }
    }).join('');
};

/**
 * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.
 *
 * @method mod9710
 * @param {String} iban
 * @returns {Number}
 */
var mod9710 = function (iban) {
    var remainder = iban,
        block;

    while (remainder.length > 2){
        block = remainder.slice(0, 9);
        remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);
    }

    return parseInt(remainder, 10) % 97;
};

/**
 * This prototype should be used to create iban object from iban correct string
 *
 * @param {String} iban
 */
var Iban = function (iban) {
    this._iban = iban;
};

/**
 * This method should be used to create iban object from ethereum address
 *
 * @method fromAddress
 * @param {String} address
 * @return {Iban} the IBAN object
 */
Iban.fromAddress = function (address) {
    var asBn = new BigNumber(address, 16);
    var base36 = asBn.toString(36);
    var padded = padLeft(base36, 15);
    return Iban.fromBban(padded.toUpperCase());
};

/**
 * Convert the passed BBAN to an IBAN for this country specification.
 * Please note that <i>"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account"</i>.
 * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits
 *
 * @method fromBban
 * @param {String} bban the BBAN to convert to IBAN
 * @returns {Iban} the IBAN object
 */
Iban.fromBban = function (bban) {
    var countryCode = 'XE';

    var remainder = mod9710(iso13616Prepare(countryCode + '00' + bban));
    var checkDigit = ('0' + (98 - remainder)).slice(-2);

    return new Iban(countryCode + checkDigit + bban);
};

/**
 * Should be used to create IBAN object for given institution and identifier
 *
 * @method createIndirect
 * @param {Object} options, required options are "institution" and "identifier"
 * @return {Iban} the IBAN object
 */
Iban.createIndirect = function (options) {
    return Iban.fromBban('ETH' + options.institution + options.identifier);
};

/**
 * Thos method should be used to check if given string is valid iban object
 *
 * @method isValid
 * @param {String} iban string
 * @return {Boolean} true if it is valid IBAN
 */
Iban.isValid = function (iban) {
    var i = new Iban(iban);
    return i.isValid();
};

/**
 * Should be called to check if iban is correct
 *
 * @method isValid
 * @returns {Boolean} true if it is, otherwise false
 */
Iban.prototype.isValid = function () {
    return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(this._iban) &&
        mod9710(iso13616Prepare(this._iban)) === 1;
};

/**
 * Should be called to check if iban number is direct
 *
 * @method isDirect
 * @returns {Boolean} true if it is, otherwise false
 */
Iban.prototype.isDirect = function () {
    return this._iban.length === 34 || this._iban.length === 35;
};

/**
 * Should be called to check if iban number if indirect
 *
 * @method isIndirect
 * @returns {Boolean} true if it is, otherwise false
 */
Iban.prototype.isIndirect = function () {
    return this._iban.length === 20;
};

/**
 * Should be called to get iban checksum
 * Uses the mod-97-10 checksumming protocol (ISO/IEC 7064:2003)
 *
 * @method checksum
 * @returns {String} checksum
 */
Iban.prototype.checksum = function () {
    return this._iban.substr(2, 2);
};

/**
 * Should be called to get institution identifier
 * eg. XREG
 *
 * @method institution
 * @returns {String} institution identifier
 */
Iban.prototype.institution = function () {
    return this.isIndirect() ? this._iban.substr(7, 4) : '';
};

/**
 * Should be called to get client identifier within institution
 * eg. GAVOFYORK
 *
 * @method client
 * @returns {String} client identifier
 */
Iban.prototype.client = function () {
    return this.isIndirect() ? this._iban.substr(11) : '';
};

/**
 * Should be called to get client direct address
 *
 * @method address
 * @returns {String} client direct address
 */
Iban.prototype.address = function () {
    if (this.isDirect()) {
        var base36 = this._iban.substr(4);
        var asBn = new BigNumber(base36, 36);
        return padLeft(asBn.toString(16), 20);
    } 

    return '';
};

Iban.prototype.toString = function () {
    return this._iban;
};

module.exports = Iban;



/***/ }),

/***/ "./node_modules/web3/lib/web3/ipcprovider.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/web3/ipcprovider.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file ipcprovider.js
 * @authors:
 *   Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */



var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");


var IpcProvider = function (path, net) {
    var _this = this;
    this.responseCallbacks = {};
    this.path = path;
    
    this.connection = net.connect({path: this.path});

    this.connection.on('error', function(e){
        console.error('IPC Connection Error', e);
        _this._timeout();
    });

    this.connection.on('end', function(){
        _this._timeout();
    }); 


    // LISTEN FOR CONNECTION RESPONSES
    this.connection.on('data', function(data) {
        /*jshint maxcomplexity: 6 */

        _this._parseResponse(data.toString()).forEach(function(result){

            var id = null;

            // get the id which matches the returned id
            if(utils.isArray(result)) {
                result.forEach(function(load){
                    if(_this.responseCallbacks[load.id])
                        id = load.id;
                });
            } else {
                id = result.id;
            }

            // fire the callback
            if(_this.responseCallbacks[id]) {
                _this.responseCallbacks[id](null, result);
                delete _this.responseCallbacks[id];
            }
        });
    });
};

/**
Will parse the response and make an array out of it.

@method _parseResponse
@param {String} data
*/
IpcProvider.prototype._parseResponse = function(data) {
    var _this = this,
        returnValues = [];
    
    // DE-CHUNKER
    var dechunkedData = data
        .replace(/\}[\n\r]?\{/g,'}|--|{') // }{
        .replace(/\}\][\n\r]?\[\{/g,'}]|--|[{') // }][{
        .replace(/\}[\n\r]?\[\{/g,'}|--|[{') // }[{
        .replace(/\}\][\n\r]?\{/g,'}]|--|{') // }]{
        .split('|--|');

    dechunkedData.forEach(function(data){

        // prepend the last chunk
        if(_this.lastChunk)
            data = _this.lastChunk + data;

        var result = null;

        try {
            result = JSON.parse(data);

        } catch(e) {

            _this.lastChunk = data;

            // start timeout to cancel all requests
            clearTimeout(_this.lastChunkTimeout);
            _this.lastChunkTimeout = setTimeout(function(){
                _this._timeout();
                throw errors.InvalidResponse(data);
            }, 1000 * 15);

            return;
        }

        // cancel timeout and set chunk to null
        clearTimeout(_this.lastChunkTimeout);
        _this.lastChunk = null;

        if(result)
            returnValues.push(result);
    });

    return returnValues;
};


/**
Get the adds a callback to the responseCallbacks object,
which will be called if a response matching the response Id will arrive.

@method _addResponseCallback
*/
IpcProvider.prototype._addResponseCallback = function(payload, callback) {
    var id = payload.id || payload[0].id;
    var method = payload.method || payload[0].method;

    this.responseCallbacks[id] = callback;
    this.responseCallbacks[id].method = method;
};

/**
Timeout all requests when the end/error event is fired

@method _timeout
*/
IpcProvider.prototype._timeout = function() {
    for(var key in this.responseCallbacks) {
        if(this.responseCallbacks.hasOwnProperty(key)){
            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));
            delete this.responseCallbacks[key];
        }
    }
};


/**
Check if the current connection is still valid.

@method isConnected
*/
IpcProvider.prototype.isConnected = function() {
    var _this = this;

    // try reconnect, when connection is gone
    if(!_this.connection.writable)
        _this.connection.connect({path: _this.path});

    return !!this.connection.writable;
};

IpcProvider.prototype.send = function (payload) {

    if(this.connection.writeSync) {
        var result;

        // try reconnect, when connection is gone
        if(!this.connection.writable)
            this.connection.connect({path: this.path});

        var data = this.connection.writeSync(JSON.stringify(payload));

        try {
            result = JSON.parse(data);
        } catch(e) {
            throw errors.InvalidResponse(data);                
        }

        return result;

    } else {
        throw new Error('You tried to send "'+ payload.method +'" synchronously. Synchronous requests are not supported by the IPC provider.');
    }
};

IpcProvider.prototype.sendAsync = function (payload, callback) {
    // try reconnect, when connection is gone
    if(!this.connection.writable)
        this.connection.connect({path: this.path});


    this.connection.write(JSON.stringify(payload));
    this._addResponseCallback(payload, callback);
};

module.exports = IpcProvider;



/***/ }),

/***/ "./node_modules/web3/lib/web3/jsonrpc.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/web3/jsonrpc.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file jsonrpc.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 *   Aaron Kumavis <aaron@kumavis.me>
 * @date 2015
 */

// Initialize Jsonrpc as a simple object with utility functions.
var Jsonrpc = {
    messageId: 0
};

/**
 * Should be called to valid json create payload object
 *
 * @method toPayload
 * @param {Function} method of jsonrpc call, required
 * @param {Array} params, an array of method params, optional
 * @returns {Object} valid jsonrpc payload object
 */
Jsonrpc.toPayload = function (method, params) {
    if (!method)
        console.error('jsonrpc method should be specified!');

    // advance message ID
    Jsonrpc.messageId++;

    return {
        jsonrpc: '2.0',
        id: Jsonrpc.messageId,
        method: method,
        params: params || []
    };
};

/**
 * Should be called to check if jsonrpc response is valid
 *
 * @method isValidResponse
 * @param {Object}
 * @returns {Boolean} true if response is valid, otherwise false
 */
Jsonrpc.isValidResponse = function (response) {
    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);

    function validateSingleMessage(message){
      return !!message &&
        !message.error &&
        message.jsonrpc === '2.0' &&
        typeof message.id === 'number' &&
        message.result !== undefined; // only undefined is not valid json object
    }
};

/**
 * Should be called to create batch payload object
 *
 * @method toBatchPayload
 * @param {Array} messages, an array of objects with method (required) and params (optional) fields
 * @returns {Array} batch payload
 */
Jsonrpc.toBatchPayload = function (messages) {
    return messages.map(function (message) {
        return Jsonrpc.toPayload(message.method, message.params);
    });
};

module.exports = Jsonrpc;



/***/ }),

/***/ "./node_modules/web3/lib/web3/method.js":
/*!**********************************************!*\
  !*** ./node_modules/web3/lib/web3/method.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file method.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");

var Method = function (options) {
    this.name = options.name;
    this.call = options.call;
    this.params = options.params || 0;
    this.inputFormatter = options.inputFormatter;
    this.outputFormatter = options.outputFormatter;
    this.requestManager = null;
};

Method.prototype.setRequestManager = function (rm) {
    this.requestManager = rm;
};

/**
 * Should be used to determine name of the jsonrpc method based on arguments
 *
 * @method getCall
 * @param {Array} arguments
 * @return {String} name of jsonrpc method
 */
Method.prototype.getCall = function (args) {
    return utils.isFunction(this.call) ? this.call(args) : this.call;
};

/**
 * Should be used to extract callback from array of arguments. Modifies input param
 *
 * @method extractCallback
 * @param {Array} arguments
 * @return {Function|Null} callback, if exists
 */
Method.prototype.extractCallback = function (args) {
    if (utils.isFunction(args[args.length - 1])) {
        return args.pop(); // modify the args array!
    }
};

/**
 * Should be called to check if the number of arguments is correct
 * 
 * @method validateArgs
 * @param {Array} arguments
 * @throws {Error} if it is not
 */
Method.prototype.validateArgs = function (args) {
    if (args.length !== this.params) {
        throw errors.InvalidNumberOfRPCParams();
    }
};

/**
 * Should be called to format input args of method
 * 
 * @method formatInput
 * @param {Array}
 * @return {Array}
 */
Method.prototype.formatInput = function (args) {
    if (!this.inputFormatter) {
        return args;
    }

    return this.inputFormatter.map(function (formatter, index) {
        return formatter ? formatter(args[index]) : args[index];
    });
};

/**
 * Should be called to format output(result) of method
 *
 * @method formatOutput
 * @param {Object}
 * @return {Object}
 */
Method.prototype.formatOutput = function (result) {
    return this.outputFormatter && result ? this.outputFormatter(result) : result;
};

/**
 * Should create payload from given input args
 *
 * @method toPayload
 * @param {Array} args
 * @return {Object}
 */
Method.prototype.toPayload = function (args) {
    var call = this.getCall(args);
    var callback = this.extractCallback(args);
    var params = this.formatInput(args);
    this.validateArgs(params);

    return {
        method: call,
        params: params,
        callback: callback
    };
};

Method.prototype.attachToObject = function (obj) {
    var func = this.buildCall();
    func.call = this.call; // TODO!!! that's ugly. filter.js uses it
    var name = this.name.split('.');
    if (name.length > 1) {
        obj[name[0]] = obj[name[0]] || {};
        obj[name[0]][name[1]] = func;
    } else {
        obj[name[0]] = func; 
    }
};

Method.prototype.buildCall = function() {
    var method = this;
    var send = function () {
        var payload = method.toPayload(Array.prototype.slice.call(arguments));
        if (payload.callback) {
            return method.requestManager.sendAsync(payload, function (err, result) {
                payload.callback(err, method.formatOutput(result));
            });
        }
        return method.formatOutput(method.requestManager.send(payload));
    };
    send.request = this.request.bind(this);
    return send;
};

/**
 * Should be called to create pure JSONRPC request which can be used in batch request
 *
 * @method request
 * @param {...} params
 * @return {Object} jsonrpc request
 */
Method.prototype.request = function () {
    var payload = this.toPayload(Array.prototype.slice.call(arguments));
    payload.format = this.formatOutput.bind(this);
    return payload;
};

module.exports = Method;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/db.js":
/*!**************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/db.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file db.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");

var DB = function (web3) {
    this._requestManager = web3._requestManager;

    var self = this;
    
    methods().forEach(function(method) { 
        method.attachToObject(self);
        method.setRequestManager(web3._requestManager);
    });
};

var methods = function () {
    var putString = new Method({
        name: 'putString',
        call: 'db_putString',
        params: 3
    });

    var getString = new Method({
        name: 'getString',
        call: 'db_getString',
        params: 2
    });

    var putHex = new Method({
        name: 'putHex',
        call: 'db_putHex',
        params: 3
    });

    var getHex = new Method({
        name: 'getHex',
        call: 'db_getHex',
        params: 2
    });

    return [
        putString, getString, putHex, getHex
    ];
};

module.exports = DB;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/eth.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/eth.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file eth.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @author Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */



var formatters = __webpack_require__(/*! ../formatters */ "./node_modules/web3/lib/web3/formatters.js");
var utils = __webpack_require__(/*! ../../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");
var Property = __webpack_require__(/*! ../property */ "./node_modules/web3/lib/web3/property.js");
var c = __webpack_require__(/*! ../../utils/config */ "./node_modules/web3/lib/utils/config.js");
var Contract = __webpack_require__(/*! ../contract */ "./node_modules/web3/lib/web3/contract.js");
var watches = __webpack_require__(/*! ./watches */ "./node_modules/web3/lib/web3/methods/watches.js");
var Filter = __webpack_require__(/*! ../filter */ "./node_modules/web3/lib/web3/filter.js");
var IsSyncing = __webpack_require__(/*! ../syncing */ "./node_modules/web3/lib/web3/syncing.js");
var namereg = __webpack_require__(/*! ../namereg */ "./node_modules/web3/lib/web3/namereg.js");
var Iban = __webpack_require__(/*! ../iban */ "./node_modules/web3/lib/web3/iban.js");
var transfer = __webpack_require__(/*! ../transfer */ "./node_modules/web3/lib/web3/transfer.js");

var blockCall = function (args) {
    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? "eth_getBlockByHash" : "eth_getBlockByNumber";
};

var transactionFromBlockCall = function (args) {
    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';
};

var uncleCall = function (args) {
    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';
};

var getBlockTransactionCountCall = function (args) {
    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';
};

var uncleCountCall = function (args) {
    return (utils.isString(args[0]) && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';
};

function Eth(web3) {
    this._requestManager = web3._requestManager;

    var self = this;

    methods().forEach(function(method) {
        method.attachToObject(self);
        method.setRequestManager(self._requestManager);
    });

    properties().forEach(function(p) {
        p.attachToObject(self);
        p.setRequestManager(self._requestManager);
    });


    this.iban = Iban;
    this.sendIBANTransaction = transfer.bind(null, this);
}

Object.defineProperty(Eth.prototype, 'defaultBlock', {
    get: function () {
        return c.defaultBlock;
    },
    set: function (val) {
        c.defaultBlock = val;
        return val;
    }
});

Object.defineProperty(Eth.prototype, 'defaultAccount', {
    get: function () {
        return c.defaultAccount;
    },
    set: function (val) {
        c.defaultAccount = val;
        return val;
    }
});

var methods = function () {
    var getBalance = new Method({
        name: 'getBalance',
        call: 'eth_getBalance',
        params: 2,
        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter],
        outputFormatter: formatters.outputBigNumberFormatter
    });

    var getStorageAt = new Method({
        name: 'getStorageAt',
        call: 'eth_getStorageAt',
        params: 3,
        inputFormatter: [null, utils.toHex, formatters.inputDefaultBlockNumberFormatter]
    });

    var getCode = new Method({
        name: 'getCode',
        call: 'eth_getCode',
        params: 2,
        inputFormatter: [formatters.inputAddressFormatter, formatters.inputDefaultBlockNumberFormatter]
    });

    var getBlock = new Method({
        name: 'getBlock',
        call: blockCall,
        params: 2,
        inputFormatter: [formatters.inputBlockNumberFormatter, function (val) { return !!val; }],
        outputFormatter: formatters.outputBlockFormatter
    });

    var getUncle = new Method({
        name: 'getUncle',
        call: uncleCall,
        params: 2,
        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],
        outputFormatter: formatters.outputBlockFormatter,

    });

    var getCompilers = new Method({
        name: 'getCompilers',
        call: 'eth_getCompilers',
        params: 0
    });

    var getBlockTransactionCount = new Method({
        name: 'getBlockTransactionCount',
        call: getBlockTransactionCountCall,
        params: 1,
        inputFormatter: [formatters.inputBlockNumberFormatter],
        outputFormatter: utils.toDecimal
    });

    var getBlockUncleCount = new Method({
        name: 'getBlockUncleCount',
        call: uncleCountCall,
        params: 1,
        inputFormatter: [formatters.inputBlockNumberFormatter],
        outputFormatter: utils.toDecimal
    });

    var getTransaction = new Method({
        name: 'getTransaction',
        call: 'eth_getTransactionByHash',
        params: 1,
        outputFormatter: formatters.outputTransactionFormatter
    });

    var getTransactionFromBlock = new Method({
        name: 'getTransactionFromBlock',
        call: transactionFromBlockCall,
        params: 2,
        inputFormatter: [formatters.inputBlockNumberFormatter, utils.toHex],
        outputFormatter: formatters.outputTransactionFormatter
    });

    var getTransactionReceipt = new Method({
        name: 'getTransactionReceipt',
        call: 'eth_getTransactionReceipt',
        params: 1,
        outputFormatter: formatters.outputTransactionReceiptFormatter
    });

    var getTransactionCount = new Method({
        name: 'getTransactionCount',
        call: 'eth_getTransactionCount',
        params: 2,
        inputFormatter: [null, formatters.inputDefaultBlockNumberFormatter],
        outputFormatter: utils.toDecimal
    });

    var sendRawTransaction = new Method({
        name: 'sendRawTransaction',
        call: 'eth_sendRawTransaction',
        params: 1,
        inputFormatter: [null]
    });

    var sendTransaction = new Method({
        name: 'sendTransaction',
        call: 'eth_sendTransaction',
        params: 1,
        inputFormatter: [formatters.inputTransactionFormatter]
    });

    var signTransaction = new Method({
        name: 'signTransaction',
        call: 'eth_signTransaction',
        params: 1,
        inputFormatter: [formatters.inputTransactionFormatter]
    });

    var sign = new Method({
        name: 'sign',
        call: 'eth_sign',
        params: 2,
        inputFormatter: [formatters.inputAddressFormatter, null]
    });

    var call = new Method({
        name: 'call',
        call: 'eth_call',
        params: 2,
        inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter]
    });

    var estimateGas = new Method({
        name: 'estimateGas',
        call: 'eth_estimateGas',
        params: 1,
        inputFormatter: [formatters.inputCallFormatter],
        outputFormatter: utils.toDecimal
    });

    var compileSolidity = new Method({
        name: 'compile.solidity',
        call: 'eth_compileSolidity',
        params: 1
    });

    var compileLLL = new Method({
        name: 'compile.lll',
        call: 'eth_compileLLL',
        params: 1
    });

    var compileSerpent = new Method({
        name: 'compile.serpent',
        call: 'eth_compileSerpent',
        params: 1
    });

    var submitWork = new Method({
        name: 'submitWork',
        call: 'eth_submitWork',
        params: 3
    });

    var getWork = new Method({
        name: 'getWork',
        call: 'eth_getWork',
        params: 0
    });

    return [
        getBalance,
        getStorageAt,
        getCode,
        getBlock,
        getUncle,
        getCompilers,
        getBlockTransactionCount,
        getBlockUncleCount,
        getTransaction,
        getTransactionFromBlock,
        getTransactionReceipt,
        getTransactionCount,
        call,
        estimateGas,
        sendRawTransaction,
        signTransaction,
        sendTransaction,
        sign,
        compileSolidity,
        compileLLL,
        compileSerpent,
        submitWork,
        getWork
    ];
};


var properties = function () {
    return [
        new Property({
            name: 'coinbase',
            getter: 'eth_coinbase'
        }),
        new Property({
            name: 'mining',
            getter: 'eth_mining'
        }),
        new Property({
            name: 'hashrate',
            getter: 'eth_hashrate',
            outputFormatter: utils.toDecimal
        }),
        new Property({
            name: 'syncing',
            getter: 'eth_syncing',
            outputFormatter: formatters.outputSyncingFormatter
        }),
        new Property({
            name: 'gasPrice',
            getter: 'eth_gasPrice',
            outputFormatter: formatters.outputBigNumberFormatter
        }),
        new Property({
            name: 'accounts',
            getter: 'eth_accounts'
        }),
        new Property({
            name: 'blockNumber',
            getter: 'eth_blockNumber',
            outputFormatter: utils.toDecimal
        }),
        new Property({
            name: 'protocolVersion',
            getter: 'eth_protocolVersion'
        })
    ];
};

Eth.prototype.contract = function (abi) {
    var factory = new Contract(this, abi);
    return factory;
};

Eth.prototype.filter = function (options, callback, filterCreationErrorCallback) {
    return new Filter(options, 'eth', this._requestManager, watches.eth(), formatters.outputLogFormatter, callback, filterCreationErrorCallback);
};

Eth.prototype.namereg = function () {
    return this.contract(namereg.global.abi).at(namereg.global.address);
};

Eth.prototype.icapNamereg = function () {
    return this.contract(namereg.icap.abi).at(namereg.icap.address);
};

Eth.prototype.isSyncing = function (callback) {
    return new IsSyncing(this._requestManager, callback);
};

module.exports = Eth;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/net.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/net.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file eth.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var utils = __webpack_require__(/*! ../../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var Property = __webpack_require__(/*! ../property */ "./node_modules/web3/lib/web3/property.js");

var Net = function (web3) {
    this._requestManager = web3._requestManager;

    var self = this;

    properties().forEach(function(p) { 
        p.attachToObject(self);
        p.setRequestManager(web3._requestManager);
    });
};

/// @returns an array of objects describing web3.eth api properties
var properties = function () {
    return [
        new Property({
            name: 'listening',
            getter: 'net_listening'
        }),
        new Property({
            name: 'peerCount',
            getter: 'net_peerCount',
            outputFormatter: utils.toDecimal
        })
    ];
};

module.exports = Net;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/personal.js":
/*!********************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/personal.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file eth.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @author Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */



var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");
var Property = __webpack_require__(/*! ../property */ "./node_modules/web3/lib/web3/property.js");
var formatters = __webpack_require__(/*! ../formatters */ "./node_modules/web3/lib/web3/formatters.js");

function Personal(web3) {
    this._requestManager = web3._requestManager;

    var self = this;

    methods().forEach(function(method) {
        method.attachToObject(self);
        method.setRequestManager(self._requestManager);
    });

    properties().forEach(function(p) {
        p.attachToObject(self);
        p.setRequestManager(self._requestManager);
    });
}

var methods = function () {
    var newAccount = new Method({
        name: 'newAccount',
        call: 'personal_newAccount',
        params: 1,
        inputFormatter: [null]
    });

    var importRawKey = new Method({
        name: 'importRawKey',
		call: 'personal_importRawKey',
		params: 2
    });

    var sign = new Method({
        name: 'sign',
		call: 'personal_sign',
		params: 3,
		inputFormatter: [null, formatters.inputAddressFormatter, null]
    });

    var ecRecover = new Method({
        name: 'ecRecover',
		call: 'personal_ecRecover',
		params: 2
    });

    var unlockAccount = new Method({
        name: 'unlockAccount',
        call: 'personal_unlockAccount',
        params: 3,
        inputFormatter: [formatters.inputAddressFormatter, null, null]
    });

    var sendTransaction = new Method({
        name: 'sendTransaction',
        call: 'personal_sendTransaction',
        params: 2,
        inputFormatter: [formatters.inputTransactionFormatter, null]
    });

    var lockAccount = new Method({
        name: 'lockAccount',
        call: 'personal_lockAccount',
        params: 1,
        inputFormatter: [formatters.inputAddressFormatter]
    });

    return [
        newAccount,
        importRawKey,
        unlockAccount,
        ecRecover,
        sign,
        sendTransaction,
        lockAccount
    ];
};

var properties = function () {
    return [
        new Property({
            name: 'listAccounts',
            getter: 'personal_listAccounts'
        })
    ];
};


module.exports = Personal;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/shh.js":
/*!***************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/shh.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file shh.js
 * @authors:
 *   Fabian Vogelsteller <fabian@ethereum.org>
 *   Marek Kotewicz <marek@ethcore.io>
 * @date 2017
 */

var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");
var Filter = __webpack_require__(/*! ../filter */ "./node_modules/web3/lib/web3/filter.js");
var watches = __webpack_require__(/*! ./watches */ "./node_modules/web3/lib/web3/methods/watches.js");

var Shh = function (web3) {
    this._requestManager = web3._requestManager;

    var self = this;

    methods().forEach(function(method) {
        method.attachToObject(self);
        method.setRequestManager(self._requestManager);
    });
};

Shh.prototype.newMessageFilter = function (options, callback, filterCreationErrorCallback) {
    return new Filter(options, 'shh', this._requestManager, watches.shh(), null, callback, filterCreationErrorCallback);
};

var methods = function () {

    return [
        new Method({
            name: 'version',
            call: 'shh_version',
            params: 0
        }),
        new Method({
            name: 'info',
            call: 'shh_info',
            params: 0
        }),
        new Method({
            name: 'setMaxMessageSize',
            call: 'shh_setMaxMessageSize',
            params: 1
        }),
        new Method({
            name: 'setMinPoW',
            call: 'shh_setMinPoW',
            params: 1
        }),
        new Method({
            name: 'markTrustedPeer',
            call: 'shh_markTrustedPeer',
            params: 1
        }),
        new Method({
            name: 'newKeyPair',
            call: 'shh_newKeyPair',
            params: 0
        }),
        new Method({
            name: 'addPrivateKey',
            call: 'shh_addPrivateKey',
            params: 1
        }),
        new Method({
            name: 'deleteKeyPair',
            call: 'shh_deleteKeyPair',
            params: 1
        }),
        new Method({
            name: 'hasKeyPair',
            call: 'shh_hasKeyPair',
            params: 1
        }),
        new Method({
            name: 'getPublicKey',
            call: 'shh_getPublicKey',
            params: 1
        }),
        new Method({
            name: 'getPrivateKey',
            call: 'shh_getPrivateKey',
            params: 1
        }),
        new Method({
            name: 'newSymKey',
            call: 'shh_newSymKey',
            params: 0
        }),
        new Method({
            name: 'addSymKey',
            call: 'shh_addSymKey',
            params: 1
        }),
        new Method({
            name: 'generateSymKeyFromPassword',
            call: 'shh_generateSymKeyFromPassword',
            params: 1
        }),
        new Method({
            name: 'hasSymKey',
            call: 'shh_hasSymKey',
            params: 1
        }),
        new Method({
            name: 'getSymKey',
            call: 'shh_getSymKey',
            params: 1
        }),
        new Method({
            name: 'deleteSymKey',
            call: 'shh_deleteSymKey',
            params: 1
        }),

        // subscribe and unsubscribe missing

        new Method({
            name: 'post',
            call: 'shh_post',
            params: 1,
            inputFormatter: [null]
        })
    ];
};

module.exports = Shh;



/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/swarm.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/swarm.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file bzz.js
 * @author Alex Beregszaszi <alex@rtfs.hu>
 * @date 2016
 *
 * Reference: https://github.com/ethereum/go-ethereum/blob/swarm/internal/web3ext/web3ext.go#L33
 */



var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");
var Property = __webpack_require__(/*! ../property */ "./node_modules/web3/lib/web3/property.js");

function Swarm(web3) {
    this._requestManager = web3._requestManager;

    var self = this;

    methods().forEach(function(method) {
        method.attachToObject(self);
        method.setRequestManager(self._requestManager);
    });

    properties().forEach(function(p) {
        p.attachToObject(self);
        p.setRequestManager(self._requestManager);
    });
}

var methods = function () {
    var blockNetworkRead = new Method({
        name: 'blockNetworkRead',
        call: 'bzz_blockNetworkRead',
        params: 1,
        inputFormatter: [null]
    });

    var syncEnabled = new Method({
        name: 'syncEnabled',
        call: 'bzz_syncEnabled',
        params: 1,
        inputFormatter: [null]
    });

    var swapEnabled = new Method({
        name: 'swapEnabled',
        call: 'bzz_swapEnabled',
        params: 1,
        inputFormatter: [null]
    });

    var download = new Method({
        name: 'download',
        call: 'bzz_download',
        params: 2,
        inputFormatter: [null, null]
    });

    var upload = new Method({
        name: 'upload',
        call: 'bzz_upload',
        params: 2,
        inputFormatter: [null, null]
    });

    var retrieve = new Method({
        name: 'retrieve',
        call: 'bzz_retrieve',
        params: 1,
        inputFormatter: [null]
    });

    var store = new Method({
        name: 'store',
        call: 'bzz_store',
        params: 2,
        inputFormatter: [null, null]
    });

    var get = new Method({
        name: 'get',
        call: 'bzz_get',
        params: 1,
        inputFormatter: [null]
    });

    var put = new Method({
        name: 'put',
        call: 'bzz_put',
        params: 2,
        inputFormatter: [null, null]
    });

    var modify = new Method({
        name: 'modify',
        call: 'bzz_modify',
        params: 4,
        inputFormatter: [null, null, null, null]
    });

    return [
        blockNetworkRead,
        syncEnabled,
        swapEnabled,
        download,
        upload,
        retrieve,
        store,
        get,
        put,
        modify
    ];
};

var properties = function () {
    return [
        new Property({
            name: 'hive',
            getter: 'bzz_hive'
        }),
        new Property({
            name: 'info',
            getter: 'bzz_info'
        })
    ];
};


module.exports = Swarm;


/***/ }),

/***/ "./node_modules/web3/lib/web3/methods/watches.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3/lib/web3/methods/watches.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file watches.js
 * @authors:
 *   Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var Method = __webpack_require__(/*! ../method */ "./node_modules/web3/lib/web3/method.js");

/// @returns an array of objects describing web3.eth.filter api methods
var eth = function () {
    var newFilterCall = function (args) {
        var type = args[0];

        switch(type) {
            case 'latest':
                args.shift();
                this.params = 0;
                return 'eth_newBlockFilter';
            case 'pending':
                args.shift();
                this.params = 0;
                return 'eth_newPendingTransactionFilter';
            default:
                return 'eth_newFilter';
        }
    };

    var newFilter = new Method({
        name: 'newFilter',
        call: newFilterCall,
        params: 1
    });

    var uninstallFilter = new Method({
        name: 'uninstallFilter',
        call: 'eth_uninstallFilter',
        params: 1
    });

    var getLogs = new Method({
        name: 'getLogs',
        call: 'eth_getFilterLogs',
        params: 1
    });

    var poll = new Method({
        name: 'poll',
        call: 'eth_getFilterChanges',
        params: 1
    });

    return [
        newFilter,
        uninstallFilter,
        getLogs,
        poll
    ];
};

/// @returns an array of objects describing web3.shh.watch api methods
var shh = function () {

    return [
        new Method({
            name: 'newFilter',
            call: 'shh_newMessageFilter',
            params: 1
        }),
        new Method({
            name: 'uninstallFilter',
            call: 'shh_deleteMessageFilter',
            params: 1
        }),
        new Method({
            name: 'getLogs',
            call: 'shh_getFilterMessages',
            params: 1
        }),
        new Method({
            name: 'poll',
            call: 'shh_getFilterMessages',
            params: 1
        })
    ];
};

module.exports = {
    eth: eth,
    shh: shh
};



/***/ }),

/***/ "./node_modules/web3/lib/web3/namereg.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/web3/namereg.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file namereg.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var globalRegistrarAbi = __webpack_require__(/*! ../contracts/GlobalRegistrar.json */ "./node_modules/web3/lib/contracts/GlobalRegistrar.json");
var icapRegistrarAbi= __webpack_require__(/*! ../contracts/ICAPRegistrar.json */ "./node_modules/web3/lib/contracts/ICAPRegistrar.json");

var globalNameregAddress = '0xc6d9d2cd449a754c494264e1809c50e34d64562b';
var icapNameregAddress = '0xa1a111bc074c9cfa781f0c38e63bd51c91b8af00';

module.exports = {
    global: {
        abi: globalRegistrarAbi,
        address: globalNameregAddress
    },
    icap: {
        abi: icapRegistrarAbi,
        address: icapNameregAddress
    }
};



/***/ }),

/***/ "./node_modules/web3/lib/web3/property.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/web3/property.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/**
 * @file property.js
 * @author Fabian Vogelsteller <fabian@frozeman.de>
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");

var Property = function (options) {
    this.name = options.name;
    this.getter = options.getter;
    this.setter = options.setter;
    this.outputFormatter = options.outputFormatter;
    this.inputFormatter = options.inputFormatter;
    this.requestManager = null;
};

Property.prototype.setRequestManager = function (rm) {
    this.requestManager = rm;
};

/**
 * Should be called to format input args of method
 *
 * @method formatInput
 * @param {Array}
 * @return {Array}
 */
Property.prototype.formatInput = function (arg) {
    return this.inputFormatter ? this.inputFormatter(arg) : arg;
};

/**
 * Should be called to format output(result) of method
 *
 * @method formatOutput
 * @param {Object}
 * @return {Object}
 */
Property.prototype.formatOutput = function (result) {
    return this.outputFormatter && result !== null && result !== undefined ? this.outputFormatter(result) : result;
};

/**
 * Should be used to extract callback from array of arguments. Modifies input param
 *
 * @method extractCallback
 * @param {Array} arguments
 * @return {Function|Null} callback, if exists
 */
Property.prototype.extractCallback = function (args) {
    if (utils.isFunction(args[args.length - 1])) {
        return args.pop(); // modify the args array!
    }
};


/**
 * Should attach function to method
 *
 * @method attachToObject
 * @param {Object}
 * @param {Function}
 */
Property.prototype.attachToObject = function (obj) {
    var proto = {
        get: this.buildGet(),
        enumerable: true
    };

    var names = this.name.split('.');
    var name = names[0];
    if (names.length > 1) {
        obj[names[0]] = obj[names[0]] || {};
        obj = obj[names[0]];
        name = names[1];
    }

    Object.defineProperty(obj, name, proto);
    obj[asyncGetterName(name)] = this.buildAsyncGet();
};

var asyncGetterName = function (name) {
    return 'get' + name.charAt(0).toUpperCase() + name.slice(1);
};

Property.prototype.buildGet = function () {
    var property = this;
    return function get() {
        return property.formatOutput(property.requestManager.send({
            method: property.getter
        }));
    };
};

Property.prototype.buildAsyncGet = function () {
    var property = this;
    var get = function (callback) {
        property.requestManager.sendAsync({
            method: property.getter
        }, function (err, result) {
            callback(err, property.formatOutput(result));
        });
    };
    get.request = this.request.bind(this);
    return get;
};

/**
 * Should be called to create pure JSONRPC request which can be used in batch request
 *
 * @method request
 * @param {...} params
 * @return {Object} jsonrpc request
 */
Property.prototype.request = function () {
    var payload = {
        method: this.getter,
        params: [],
        callback: this.extractCallback(Array.prototype.slice.call(arguments))
    };
    payload.format = this.formatOutput.bind(this);
    return payload;
};

module.exports = Property;



/***/ }),

/***/ "./node_modules/web3/lib/web3/requestmanager.js":
/*!******************************************************!*\
  !*** ./node_modules/web3/lib/web3/requestmanager.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file requestmanager.js
 * @author Jeffrey Wilcke <jeff@ethdev.com>
 * @author Marek Kotewicz <marek@ethdev.com>
 * @author Marian Oancea <marian@ethdev.com>
 * @author Fabian Vogelsteller <fabian@ethdev.com>
 * @author Gav Wood <g@ethdev.com>
 * @date 2014
 */

var Jsonrpc = __webpack_require__(/*! ./jsonrpc */ "./node_modules/web3/lib/web3/jsonrpc.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");
var c = __webpack_require__(/*! ../utils/config */ "./node_modules/web3/lib/utils/config.js");
var errors = __webpack_require__(/*! ./errors */ "./node_modules/web3/lib/web3/errors.js");

/**
 * It's responsible for passing messages to providers
 * It's also responsible for polling the ethereum node for incoming messages
 * Default poll timeout is 1 second
 * Singleton
 */
var RequestManager = function (provider) {
    this.provider = provider;
    this.polls = {};
    this.timeout = null;
};

/**
 * Should be used to synchronously send request
 *
 * @method send
 * @param {Object} data
 * @return {Object}
 */
RequestManager.prototype.send = function (data) {
    if (!this.provider) {
        console.error(errors.InvalidProvider());
        return null;
    }

    var payload = Jsonrpc.toPayload(data.method, data.params);
    var result = this.provider.send(payload);

    if (!Jsonrpc.isValidResponse(result)) {
        throw errors.InvalidResponse(result);
    }

    return result.result;
};

/**
 * Should be used to asynchronously send request
 *
 * @method sendAsync
 * @param {Object} data
 * @param {Function} callback
 */
RequestManager.prototype.sendAsync = function (data, callback) {
    if (!this.provider) {
        return callback(errors.InvalidProvider());
    }

    var payload = Jsonrpc.toPayload(data.method, data.params);
    this.provider.sendAsync(payload, function (err, result) {
        if (err) {
            return callback(err);
        }
        
        if (!Jsonrpc.isValidResponse(result)) {
            return callback(errors.InvalidResponse(result));
        }

        callback(null, result.result);
    });
};

/**
 * Should be called to asynchronously send batch request
 *
 * @method sendBatch
 * @param {Array} batch data
 * @param {Function} callback
 */
RequestManager.prototype.sendBatch = function (data, callback) {
    if (!this.provider) {
        return callback(errors.InvalidProvider());
    }

    var payload = Jsonrpc.toBatchPayload(data);

    this.provider.sendAsync(payload, function (err, results) {
        if (err) {
            return callback(err);
        }

        if (!utils.isArray(results)) {
            return callback(errors.InvalidResponse(results));
        }

        callback(err, results);
    }); 
};

/**
 * Should be used to set provider of request manager
 *
 * @method setProvider
 * @param {Object}
 */
RequestManager.prototype.setProvider = function (p) {
    this.provider = p;
};

/**
 * Should be used to start polling
 *
 * @method startPolling
 * @param {Object} data
 * @param {Number} pollId
 * @param {Function} callback
 * @param {Function} uninstall
 *
 * @todo cleanup number of params
 */
RequestManager.prototype.startPolling = function (data, pollId, callback, uninstall) {
    this.polls[pollId] = {data: data, id: pollId, callback: callback, uninstall: uninstall};


    // start polling
    if (!this.timeout) {
        this.poll();
    }
};

/**
 * Should be used to stop polling for filter with given id
 *
 * @method stopPolling
 * @param {Number} pollId
 */
RequestManager.prototype.stopPolling = function (pollId) {
    delete this.polls[pollId];

    // stop polling
    if(Object.keys(this.polls).length === 0 && this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
    }
};

/**
 * Should be called to reset the polling mechanism of the request manager
 *
 * @method reset
 */
RequestManager.prototype.reset = function (keepIsSyncing) {
    /*jshint maxcomplexity:5 */

    for (var key in this.polls) {
        // remove all polls, except sync polls,
        // they need to be removed manually by calling syncing.stopWatching()
        if(!keepIsSyncing || key.indexOf('syncPoll_') === -1) {
            this.polls[key].uninstall();
            delete this.polls[key];
        }
    }

    // stop polling
    if(Object.keys(this.polls).length === 0 && this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
    }
};

/**
 * Should be called to poll for changes on filter with given id
 *
 * @method poll
 */
RequestManager.prototype.poll = function () {
    /*jshint maxcomplexity: 6 */
    this.timeout = setTimeout(this.poll.bind(this), c.ETH_POLLING_TIMEOUT);

    if (Object.keys(this.polls).length === 0) {
        return;
    }

    if (!this.provider) {
        console.error(errors.InvalidProvider());
        return;
    }

    var pollsData = [];
    var pollsIds = [];
    for (var key in this.polls) {
        pollsData.push(this.polls[key].data);
        pollsIds.push(key);
    }

    if (pollsData.length === 0) {
        return;
    }

    var payload = Jsonrpc.toBatchPayload(pollsData);
    
    // map the request id to they poll id
    var pollsIdMap = {};
    payload.forEach(function(load, index){
        pollsIdMap[load.id] = pollsIds[index];
    });


    var self = this;
    this.provider.sendAsync(payload, function (error, results) {


        // TODO: console log?
        if (error) {
            return;
        }

        if (!utils.isArray(results)) {
            throw errors.InvalidResponse(results);
        }
        results.map(function (result) {
            var id = pollsIdMap[result.id];

            // make sure the filter is still installed after arrival of the request
            if (self.polls[id]) {
                result.callback = self.polls[id].callback;
                return result;
            } else
                return false;
        }).filter(function (result) {
            return !!result; 
        }).filter(function (result) {
            var valid = Jsonrpc.isValidResponse(result);
            if (!valid) {
                result.callback(errors.InvalidResponse(result));
            }
            return valid;
        }).forEach(function (result) {
            result.callback(null, result.result);
        });
    });
};

module.exports = RequestManager;



/***/ }),

/***/ "./node_modules/web3/lib/web3/settings.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/web3/settings.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



var Settings = function () {
    this.defaultBlock = 'latest';
    this.defaultAccount = undefined;
};

module.exports = Settings;



/***/ }),

/***/ "./node_modules/web3/lib/web3/syncing.js":
/*!***********************************************!*\
  !*** ./node_modules/web3/lib/web3/syncing.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** @file syncing.js
 * @authors:
 *   Fabian Vogelsteller <fabian@ethdev.com>
 * @date 2015
 */

var formatters = __webpack_require__(/*! ./formatters */ "./node_modules/web3/lib/web3/formatters.js");
var utils = __webpack_require__(/*! ../utils/utils */ "./node_modules/web3/lib/utils/utils.js");

var count = 1;

/**
Adds the callback and sets up the methods, to iterate over the results.

@method pollSyncing
@param {Object} self
*/
var pollSyncing = function(self) {

    var onMessage = function (error, sync) {
        if (error) {
            return self.callbacks.forEach(function (callback) {
                callback(error);
            });
        }

        if(utils.isObject(sync) && sync.startingBlock)
            sync = formatters.outputSyncingFormatter(sync);

        self.callbacks.forEach(function (callback) {
            if (self.lastSyncState !== sync) {
                
                // call the callback with true first so the app can stop anything, before receiving the sync data
                if(!self.lastSyncState && utils.isObject(sync))
                    callback(null, true);
                
                // call on the next CPU cycle, so the actions of the sync stop can be processes first
                setTimeout(function() {
                    callback(null, sync);
                }, 0);
                
                self.lastSyncState = sync;
            }
        });
    };

    self.requestManager.startPolling({
        method: 'eth_syncing',
        params: [],
    }, self.pollId, onMessage, self.stopWatching.bind(self));

};

var IsSyncing = function (requestManager, callback) {
    this.requestManager = requestManager;
    this.pollId = 'syncPoll_'+ count++;
    this.callbacks = [];
    this.addCallback(callback);
    this.lastSyncState = false;
    pollSyncing(this);

    return this;
};

IsSyncing.prototype.addCallback = function (callback) {
    if(callback)
        this.callbacks.push(callback);
    return this;
};

IsSyncing.prototype.stopWatching = function () {
    this.requestManager.stopPolling(this.pollId);
    this.callbacks = [];
};

module.exports = IsSyncing;



/***/ }),

/***/ "./node_modules/web3/lib/web3/transfer.js":
/*!************************************************!*\
  !*** ./node_modules/web3/lib/web3/transfer.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
/** 
 * @file transfer.js
 * @author Marek Kotewicz <marek@ethdev.com>
 * @date 2015
 */

var Iban = __webpack_require__(/*! ./iban */ "./node_modules/web3/lib/web3/iban.js");
var exchangeAbi = __webpack_require__(/*! ../contracts/SmartExchange.json */ "./node_modules/web3/lib/contracts/SmartExchange.json");

/**
 * Should be used to make Iban transfer
 *
 * @method transfer
 * @param {String} from
 * @param {String} to iban
 * @param {Value} value to be tranfered
 * @param {Function} callback, callback
 */
var transfer = function (eth, from, to, value, callback) {
    var iban = new Iban(to); 
    if (!iban.isValid()) {
        throw new Error('invalid iban address');
    }

    if (iban.isDirect()) {
        return transferToAddress(eth, from, iban.address(), value, callback);
    }
    
    if (!callback) {
        var address = eth.icapNamereg().addr(iban.institution());
        return deposit(eth, from, address, value, iban.client());
    }

    eth.icapNamereg().addr(iban.institution(), function (err, address) {
        return deposit(eth, from, address, value, iban.client(), callback);
    });
    
};

/**
 * Should be used to transfer funds to certain address
 *
 * @method transferToAddress
 * @param {String} from
 * @param {String} to
 * @param {Value} value to be tranfered
 * @param {Function} callback, callback
 */
var transferToAddress = function (eth, from, to, value, callback) {
    return eth.sendTransaction({
        address: to,
        from: from,
        value: value
    }, callback);
};

/**
 * Should be used to deposit funds to generic Exchange contract (must implement deposit(bytes32) method!)
 *
 * @method deposit
 * @param {String} from
 * @param {String} to
 * @param {Value} value to be transfered
 * @param {String} client unique identifier
 * @param {Function} callback, callback
 */
var deposit = function (eth, from, to, value, client, callback) {
    var abi = exchangeAbi;
    return eth.contract(abi).at(to).deposit(client, {
        from: from,
        value: value
    }, callback);
};

module.exports = transfer;



/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./node_modules/xhr2/lib/xhr2.js":
/*!***************************************!*\
  !*** ./node_modules/xhr2/lib/xhr2.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Generated by CoffeeScript 1.12.2
(function() {
  var InvalidStateError, NetworkError, ProgressEvent, SecurityError, SyntaxError, XMLHttpRequest, XMLHttpRequestEventTarget, XMLHttpRequestUpload, http, https, os, url,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  XMLHttpRequestEventTarget = (function() {
    function XMLHttpRequestEventTarget() {
      this.onloadstart = null;
      this.onprogress = null;
      this.onabort = null;
      this.onerror = null;
      this.onload = null;
      this.ontimeout = null;
      this.onloadend = null;
      this._listeners = {};
    }

    XMLHttpRequestEventTarget.prototype.onloadstart = null;

    XMLHttpRequestEventTarget.prototype.onprogress = null;

    XMLHttpRequestEventTarget.prototype.onabort = null;

    XMLHttpRequestEventTarget.prototype.onerror = null;

    XMLHttpRequestEventTarget.prototype.onload = null;

    XMLHttpRequestEventTarget.prototype.ontimeout = null;

    XMLHttpRequestEventTarget.prototype.onloadend = null;

    XMLHttpRequestEventTarget.prototype.addEventListener = function(eventType, listener) {
      var base;
      eventType = eventType.toLowerCase();
      (base = this._listeners)[eventType] || (base[eventType] = []);
      this._listeners[eventType].push(listener);
      return void 0;
    };

    XMLHttpRequestEventTarget.prototype.removeEventListener = function(eventType, listener) {
      var index;
      eventType = eventType.toLowerCase();
      if (this._listeners[eventType]) {
        index = this._listeners[eventType].indexOf(listener);
        if (index !== -1) {
          this._listeners[eventType].splice(index, 1);
        }
      }
      return void 0;
    };

    XMLHttpRequestEventTarget.prototype.dispatchEvent = function(event) {
      var eventType, j, len, listener, listeners;
      event.currentTarget = event.target = this;
      eventType = event.type;
      if (listeners = this._listeners[eventType]) {
        for (j = 0, len = listeners.length; j < len; j++) {
          listener = listeners[j];
          listener.call(this, event);
        }
      }
      if (listener = this["on" + eventType]) {
        listener.call(this, event);
      }
      return void 0;
    };

    return XMLHttpRequestEventTarget;

  })();

  http = __webpack_require__(/*! http */ "http");

  https = __webpack_require__(/*! https */ "https");

  os = __webpack_require__(/*! os */ "os");

  url = __webpack_require__(/*! url */ "url");

  XMLHttpRequest = (function(superClass) {
    extend(XMLHttpRequest, superClass);

    function XMLHttpRequest(options) {
      XMLHttpRequest.__super__.constructor.call(this);
      this.onreadystatechange = null;
      this._anonymous = options && options.anon;
      this.readyState = XMLHttpRequest.UNSENT;
      this.response = null;
      this.responseText = '';
      this.responseType = '';
      this.responseURL = '';
      this.status = 0;
      this.statusText = '';
      this.timeout = 0;
      this.upload = new XMLHttpRequestUpload(this);
      this._method = null;
      this._url = null;
      this._sync = false;
      this._headers = null;
      this._loweredHeaders = null;
      this._mimeOverride = null;
      this._request = null;
      this._response = null;
      this._responseParts = null;
      this._responseHeaders = null;
      this._aborting = null;
      this._error = null;
      this._loadedBytes = 0;
      this._totalBytes = 0;
      this._lengthComputable = false;
    }

    XMLHttpRequest.prototype.onreadystatechange = null;

    XMLHttpRequest.prototype.readyState = null;

    XMLHttpRequest.prototype.response = null;

    XMLHttpRequest.prototype.responseText = null;

    XMLHttpRequest.prototype.responseType = null;

    XMLHttpRequest.prototype.status = null;

    XMLHttpRequest.prototype.timeout = null;

    XMLHttpRequest.prototype.upload = null;

    XMLHttpRequest.prototype.open = function(method, url, async, user, password) {
      var xhrUrl;
      method = method.toUpperCase();
      if (method in this._restrictedMethods) {
        throw new SecurityError("HTTP method " + method + " is not allowed in XHR");
      }
      xhrUrl = this._parseUrl(url);
      if (async === void 0) {
        async = true;
      }
      switch (this.readyState) {
        case XMLHttpRequest.UNSENT:
        case XMLHttpRequest.OPENED:
        case XMLHttpRequest.DONE:
          null;
          break;
        case XMLHttpRequest.HEADERS_RECEIVED:
        case XMLHttpRequest.LOADING:
          null;
      }
      this._method = method;
      this._url = xhrUrl;
      this._sync = !async;
      this._headers = {};
      this._loweredHeaders = {};
      this._mimeOverride = null;
      this._setReadyState(XMLHttpRequest.OPENED);
      this._request = null;
      this._response = null;
      this.status = 0;
      this.statusText = '';
      this._responseParts = [];
      this._responseHeaders = null;
      this._loadedBytes = 0;
      this._totalBytes = 0;
      this._lengthComputable = false;
      return void 0;
    };

    XMLHttpRequest.prototype.setRequestHeader = function(name, value) {
      var loweredName;
      if (this.readyState !== XMLHttpRequest.OPENED) {
        throw new InvalidStateError("XHR readyState must be OPENED");
      }
      loweredName = name.toLowerCase();
      if (this._restrictedHeaders[loweredName] || /^sec\-/.test(loweredName) || /^proxy-/.test(loweredName)) {
        console.warn("Refused to set unsafe header \"" + name + "\"");
        return void 0;
      }
      value = value.toString();
      if (loweredName in this._loweredHeaders) {
        name = this._loweredHeaders[loweredName];
        this._headers[name] = this._headers[name] + ', ' + value;
      } else {
        this._loweredHeaders[loweredName] = name;
        this._headers[name] = value;
      }
      return void 0;
    };

    XMLHttpRequest.prototype.send = function(data) {
      if (this.readyState !== XMLHttpRequest.OPENED) {
        throw new InvalidStateError("XHR readyState must be OPENED");
      }
      if (this._request) {
        throw new InvalidStateError("send() already called");
      }
      switch (this._url.protocol) {
        case 'file:':
          this._sendFile(data);
          break;
        case 'http:':
        case 'https:':
          this._sendHttp(data);
          break;
        default:
          throw new NetworkError("Unsupported protocol " + this._url.protocol);
      }
      return void 0;
    };

    XMLHttpRequest.prototype.abort = function() {
      if (!this._request) {
        return;
      }
      this._request.abort();
      this._setError();
      this._dispatchProgress('abort');
      this._dispatchProgress('loadend');
      return void 0;
    };

    XMLHttpRequest.prototype.getResponseHeader = function(name) {
      var loweredName;
      if (!this._responseHeaders) {
        return null;
      }
      loweredName = name.toLowerCase();
      if (loweredName in this._responseHeaders) {
        return this._responseHeaders[loweredName];
      } else {
        return null;
      }
    };

    XMLHttpRequest.prototype.getAllResponseHeaders = function() {
      var lines, name, value;
      if (!this._responseHeaders) {
        return '';
      }
      lines = (function() {
        var ref, results;
        ref = this._responseHeaders;
        results = [];
        for (name in ref) {
          value = ref[name];
          results.push(name + ": " + value);
        }
        return results;
      }).call(this);
      return lines.join("\r\n");
    };

    XMLHttpRequest.prototype.overrideMimeType = function(newMimeType) {
      if (this.readyState === XMLHttpRequest.LOADING || this.readyState === XMLHttpRequest.DONE) {
        throw new InvalidStateError("overrideMimeType() not allowed in LOADING or DONE");
      }
      this._mimeOverride = newMimeType.toLowerCase();
      return void 0;
    };

    XMLHttpRequest.prototype.nodejsSet = function(options) {
      var baseUrl, parsedUrl;
      if ('httpAgent' in options) {
        this.nodejsHttpAgent = options.httpAgent;
      }
      if ('httpsAgent' in options) {
        this.nodejsHttpsAgent = options.httpsAgent;
      }
      if ('baseUrl' in options) {
        baseUrl = options.baseUrl;
        if (baseUrl !== null) {
          parsedUrl = url.parse(baseUrl, false, true);
          if (!parsedUrl.protocol) {
            throw new SyntaxError("baseUrl must be an absolute URL");
          }
        }
        this.nodejsBaseUrl = baseUrl;
      }
      return void 0;
    };

    XMLHttpRequest.nodejsSet = function(options) {
      XMLHttpRequest.prototype.nodejsSet(options);
      return void 0;
    };

    XMLHttpRequest.prototype.UNSENT = 0;

    XMLHttpRequest.UNSENT = 0;

    XMLHttpRequest.prototype.OPENED = 1;

    XMLHttpRequest.OPENED = 1;

    XMLHttpRequest.prototype.HEADERS_RECEIVED = 2;

    XMLHttpRequest.HEADERS_RECEIVED = 2;

    XMLHttpRequest.prototype.LOADING = 3;

    XMLHttpRequest.LOADING = 3;

    XMLHttpRequest.prototype.DONE = 4;

    XMLHttpRequest.DONE = 4;

    XMLHttpRequest.prototype.nodejsHttpAgent = http.globalAgent;

    XMLHttpRequest.prototype.nodejsHttpsAgent = https.globalAgent;

    XMLHttpRequest.prototype.nodejsBaseUrl = null;

    XMLHttpRequest.prototype._restrictedMethods = {
      CONNECT: true,
      TRACE: true,
      TRACK: true
    };

    XMLHttpRequest.prototype._restrictedHeaders = {
      'accept-charset': true,
      'accept-encoding': true,
      'access-control-request-headers': true,
      'access-control-request-method': true,
      connection: true,
      'content-length': true,
      cookie: true,
      cookie2: true,
      date: true,
      dnt: true,
      expect: true,
      host: true,
      'keep-alive': true,
      origin: true,
      referer: true,
      te: true,
      trailer: true,
      'transfer-encoding': true,
      upgrade: true,
      'user-agent': true,
      via: true
    };

    XMLHttpRequest.prototype._privateHeaders = {
      'set-cookie': true,
      'set-cookie2': true
    };

    XMLHttpRequest.prototype._userAgent = ("Mozilla/5.0 (" + (os.type()) + " " + (os.arch()) + ") ") + ("node.js/" + process.versions.node + " v8/" + process.versions.v8);

    XMLHttpRequest.prototype._setReadyState = function(newReadyState) {
      var event;
      this.readyState = newReadyState;
      event = new ProgressEvent('readystatechange');
      this.dispatchEvent(event);
      return void 0;
    };

    XMLHttpRequest.prototype._sendFile = function() {
      if (this._url.method !== 'GET') {
        throw new NetworkError('The file protocol only supports GET');
      }
      throw new Error("Protocol file: not implemented");
    };

    XMLHttpRequest.prototype._sendHttp = function(data) {
      if (this._sync) {
        throw new Error("Synchronous XHR processing not implemented");
      }
      if ((data != null) && (this._method === 'GET' || this._method === 'HEAD')) {
        console.warn("Discarding entity body for " + this._method + " requests");
        data = null;
      } else {
        data || (data = '');
      }
      this.upload._setData(data);
      this._finalizeHeaders();
      this._sendHxxpRequest();
      return void 0;
    };

    XMLHttpRequest.prototype._sendHxxpRequest = function() {
      var agent, hxxp, request;
      if (this._url.protocol === 'http:') {
        hxxp = http;
        agent = this.nodejsHttpAgent;
      } else {
        hxxp = https;
        agent = this.nodejsHttpsAgent;
      }
      request = hxxp.request({
        hostname: this._url.hostname,
        port: this._url.port,
        path: this._url.path,
        auth: this._url.auth,
        method: this._method,
        headers: this._headers,
        agent: agent
      });
      this._request = request;
      if (this.timeout) {
        request.setTimeout(this.timeout, (function(_this) {
          return function() {
            return _this._onHttpTimeout(request);
          };
        })(this));
      }
      request.on('response', (function(_this) {
        return function(response) {
          return _this._onHttpResponse(request, response);
        };
      })(this));
      request.on('error', (function(_this) {
        return function(error) {
          return _this._onHttpRequestError(request, error);
        };
      })(this));
      this.upload._startUpload(request);
      if (this._request === request) {
        this._dispatchProgress('loadstart');
      }
      return void 0;
    };

    XMLHttpRequest.prototype._finalizeHeaders = function() {
      this._headers['Connection'] = 'keep-alive';
      this._headers['Host'] = this._url.host;
      if (this._anonymous) {
        this._headers['Referer'] = 'about:blank';
      }
      this._headers['User-Agent'] = this._userAgent;
      this.upload._finalizeHeaders(this._headers, this._loweredHeaders);
      return void 0;
    };

    XMLHttpRequest.prototype._onHttpResponse = function(request, response) {
      var lengthString;
      if (this._request !== request) {
        return;
      }
      switch (response.statusCode) {
        case 301:
        case 302:
        case 303:
        case 307:
        case 308:
          this._url = this._parseUrl(response.headers['location']);
          this._method = 'GET';
          if ('content-type' in this._loweredHeaders) {
            delete this._headers[this._loweredHeaders['content-type']];
            delete this._loweredHeaders['content-type'];
          }
          if ('Content-Type' in this._headers) {
            delete this._headers['Content-Type'];
          }
          delete this._headers['Content-Length'];
          this.upload._reset();
          this._finalizeHeaders();
          this._sendHxxpRequest();
          return;
      }
      this._response = response;
      this._response.on('data', (function(_this) {
        return function(data) {
          return _this._onHttpResponseData(response, data);
        };
      })(this));
      this._response.on('end', (function(_this) {
        return function() {
          return _this._onHttpResponseEnd(response);
        };
      })(this));
      this._response.on('close', (function(_this) {
        return function() {
          return _this._onHttpResponseClose(response);
        };
      })(this));
      this.responseURL = this._url.href.split('#')[0];
      this.status = this._response.statusCode;
      this.statusText = http.STATUS_CODES[this.status];
      this._parseResponseHeaders(response);
      if (lengthString = this._responseHeaders['content-length']) {
        this._totalBytes = parseInt(lengthString);
        this._lengthComputable = true;
      } else {
        this._lengthComputable = false;
      }
      return this._setReadyState(XMLHttpRequest.HEADERS_RECEIVED);
    };

    XMLHttpRequest.prototype._onHttpResponseData = function(response, data) {
      if (this._response !== response) {
        return;
      }
      this._responseParts.push(data);
      this._loadedBytes += data.length;
      if (this.readyState !== XMLHttpRequest.LOADING) {
        this._setReadyState(XMLHttpRequest.LOADING);
      }
      return this._dispatchProgress('progress');
    };

    XMLHttpRequest.prototype._onHttpResponseEnd = function(response) {
      if (this._response !== response) {
        return;
      }
      this._parseResponse();
      this._request = null;
      this._response = null;
      this._setReadyState(XMLHttpRequest.DONE);
      this._dispatchProgress('load');
      return this._dispatchProgress('loadend');
    };

    XMLHttpRequest.prototype._onHttpResponseClose = function(response) {
      var request;
      if (this._response !== response) {
        return;
      }
      request = this._request;
      this._setError();
      request.abort();
      this._setReadyState(XMLHttpRequest.DONE);
      this._dispatchProgress('error');
      return this._dispatchProgress('loadend');
    };

    XMLHttpRequest.prototype._onHttpTimeout = function(request) {
      if (this._request !== request) {
        return;
      }
      this._setError();
      request.abort();
      this._setReadyState(XMLHttpRequest.DONE);
      this._dispatchProgress('timeout');
      return this._dispatchProgress('loadend');
    };

    XMLHttpRequest.prototype._onHttpRequestError = function(request, error) {
      if (this._request !== request) {
        return;
      }
      this._setError();
      request.abort();
      this._setReadyState(XMLHttpRequest.DONE);
      this._dispatchProgress('error');
      return this._dispatchProgress('loadend');
    };

    XMLHttpRequest.prototype._dispatchProgress = function(eventType) {
      var event;
      event = new ProgressEvent(eventType);
      event.lengthComputable = this._lengthComputable;
      event.loaded = this._loadedBytes;
      event.total = this._totalBytes;
      this.dispatchEvent(event);
      return void 0;
    };

    XMLHttpRequest.prototype._setError = function() {
      this._request = null;
      this._response = null;
      this._responseHeaders = null;
      this._responseParts = null;
      return void 0;
    };

    XMLHttpRequest.prototype._parseUrl = function(urlString) {
      var absoluteUrlString, index, password, user, xhrUrl;
      if (this.nodejsBaseUrl === null) {
        absoluteUrlString = urlString;
      } else {
        absoluteUrlString = url.resolve(this.nodejsBaseUrl, urlString);
      }
      xhrUrl = url.parse(absoluteUrlString, false, true);
      xhrUrl.hash = null;
      if (xhrUrl.auth && ((typeof user !== "undefined" && user !== null) || (typeof password !== "undefined" && password !== null))) {
        index = xhrUrl.auth.indexOf(':');
        if (index === -1) {
          if (!user) {
            user = xhrUrl.auth;
          }
        } else {
          if (!user) {
            user = xhrUrl.substring(0, index);
          }
          if (!password) {
            password = xhrUrl.substring(index + 1);
          }
        }
      }
      if (user || password) {
        xhrUrl.auth = user + ":" + password;
      }
      return xhrUrl;
    };

    XMLHttpRequest.prototype._parseResponseHeaders = function(response) {
      var loweredName, name, ref, value;
      this._responseHeaders = {};
      ref = response.headers;
      for (name in ref) {
        value = ref[name];
        loweredName = name.toLowerCase();
        if (this._privateHeaders[loweredName]) {
          continue;
        }
        if (this._mimeOverride !== null && loweredName === 'content-type') {
          value = this._mimeOverride;
        }
        this._responseHeaders[loweredName] = value;
      }
      if (this._mimeOverride !== null && !('content-type' in this._responseHeaders)) {
        this._responseHeaders['content-type'] = this._mimeOverride;
      }
      return void 0;
    };

    XMLHttpRequest.prototype._parseResponse = function() {
      var arrayBuffer, buffer, i, j, jsonError, ref, view;
      if (Buffer.concat) {
        buffer = Buffer.concat(this._responseParts);
      } else {
        buffer = this._concatBuffers(this._responseParts);
      }
      this._responseParts = null;
      switch (this.responseType) {
        case 'text':
          this._parseTextResponse(buffer);
          break;
        case 'json':
          this.responseText = null;
          try {
            this.response = JSON.parse(buffer.toString('utf-8'));
          } catch (error1) {
            jsonError = error1;
            this.response = null;
          }
          break;
        case 'buffer':
          this.responseText = null;
          this.response = buffer;
          break;
        case 'arraybuffer':
          this.responseText = null;
          arrayBuffer = new ArrayBuffer(buffer.length);
          view = new Uint8Array(arrayBuffer);
          for (i = j = 0, ref = buffer.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
            view[i] = buffer[i];
          }
          this.response = arrayBuffer;
          break;
        default:
          this._parseTextResponse(buffer);
      }
      return void 0;
    };

    XMLHttpRequest.prototype._parseTextResponse = function(buffer) {
      var e;
      try {
        this.responseText = buffer.toString(this._parseResponseEncoding());
      } catch (error1) {
        e = error1;
        this.responseText = buffer.toString('binary');
      }
      this.response = this.responseText;
      return void 0;
    };

    XMLHttpRequest.prototype._parseResponseEncoding = function() {
      var contentType, encoding, match;
      encoding = null;
      if (contentType = this._responseHeaders['content-type']) {
        if (match = /\;\s*charset\=(.*)$/.exec(contentType)) {
          return match[1];
        }
      }
      return 'utf-8';
    };

    XMLHttpRequest.prototype._concatBuffers = function(buffers) {
      var buffer, j, k, len, len1, length, target;
      if (buffers.length === 0) {
        return new Buffer(0);
      }
      if (buffers.length === 1) {
        return buffers[0];
      }
      length = 0;
      for (j = 0, len = buffers.length; j < len; j++) {
        buffer = buffers[j];
        length += buffer.length;
      }
      target = new Buffer(length);
      length = 0;
      for (k = 0, len1 = buffers.length; k < len1; k++) {
        buffer = buffers[k];
        buffer.copy(target, length);
        length += buffer.length;
      }
      return target;
    };

    return XMLHttpRequest;

  })(XMLHttpRequestEventTarget);

  module.exports = XMLHttpRequest;

  XMLHttpRequest.XMLHttpRequest = XMLHttpRequest;

  SecurityError = (function(superClass) {
    extend(SecurityError, superClass);

    function SecurityError() {
      SecurityError.__super__.constructor.apply(this, arguments);
    }

    return SecurityError;

  })(Error);

  XMLHttpRequest.SecurityError = SecurityError;

  InvalidStateError = (function(superClass) {
    extend(InvalidStateError, superClass);

    function InvalidStateError() {
      InvalidStateError.__super__.constructor.apply(this, arguments);
    }

    return InvalidStateError;

  })(Error);

  InvalidStateError = (function(superClass) {
    extend(InvalidStateError, superClass);

    function InvalidStateError() {
      return InvalidStateError.__super__.constructor.apply(this, arguments);
    }

    return InvalidStateError;

  })(Error);

  XMLHttpRequest.InvalidStateError = InvalidStateError;

  NetworkError = (function(superClass) {
    extend(NetworkError, superClass);

    function NetworkError() {
      NetworkError.__super__.constructor.apply(this, arguments);
    }

    return NetworkError;

  })(Error);

  XMLHttpRequest.SyntaxError = SyntaxError;

  SyntaxError = (function(superClass) {
    extend(SyntaxError, superClass);

    function SyntaxError() {
      SyntaxError.__super__.constructor.apply(this, arguments);
    }

    return SyntaxError;

  })(Error);

  ProgressEvent = (function() {
    function ProgressEvent(type) {
      this.type = type;
      this.target = null;
      this.currentTarget = null;
      this.lengthComputable = false;
      this.loaded = 0;
      this.total = 0;
    }

    ProgressEvent.prototype.bubbles = false;

    ProgressEvent.prototype.cancelable = false;

    ProgressEvent.prototype.target = null;

    ProgressEvent.prototype.loaded = null;

    ProgressEvent.prototype.lengthComputable = null;

    ProgressEvent.prototype.total = null;

    return ProgressEvent;

  })();

  XMLHttpRequest.ProgressEvent = ProgressEvent;

  XMLHttpRequestUpload = (function(superClass) {
    extend(XMLHttpRequestUpload, superClass);

    function XMLHttpRequestUpload(request) {
      XMLHttpRequestUpload.__super__.constructor.call(this);
      this._request = request;
      this._reset();
    }

    XMLHttpRequestUpload.prototype._reset = function() {
      this._contentType = null;
      this._body = null;
      return void 0;
    };

    XMLHttpRequestUpload.prototype._setData = function(data) {
      var body, i, j, k, offset, ref, ref1, view;
      if (typeof data === 'undefined' || data === null) {
        return;
      }
      if (typeof data === 'string') {
        if (data.length !== 0) {
          this._contentType = 'text/plain;charset=UTF-8';
        }
        this._body = new Buffer(data, 'utf8');
      } else if (Buffer.isBuffer(data)) {
        this._body = data;
      } else if (data instanceof ArrayBuffer) {
        body = new Buffer(data.byteLength);
        view = new Uint8Array(data);
        for (i = j = 0, ref = data.byteLength; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          body[i] = view[i];
        }
        this._body = body;
      } else if (data.buffer && data.buffer instanceof ArrayBuffer) {
        body = new Buffer(data.byteLength);
        offset = data.byteOffset;
        view = new Uint8Array(data.buffer);
        for (i = k = 0, ref1 = data.byteLength; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {
          body[i] = view[i + offset];
        }
        this._body = body;
      } else {
        throw new Error("Unsupported send() data " + data);
      }
      return void 0;
    };

    XMLHttpRequestUpload.prototype._finalizeHeaders = function(headers, loweredHeaders) {
      if (this._contentType) {
        if (!('content-type' in loweredHeaders)) {
          headers['Content-Type'] = this._contentType;
        }
      }
      if (this._body) {
        headers['Content-Length'] = this._body.length.toString();
      }
      return void 0;
    };

    XMLHttpRequestUpload.prototype._startUpload = function(request) {
      if (this._body) {
        request.write(this._body);
      }
      request.end();
      return void 0;
    };

    return XMLHttpRequestUpload;

  })(XMLHttpRequestEventTarget);

  XMLHttpRequest.XMLHttpRequestUpload = XMLHttpRequestUpload;

}).call(this);


/***/ }),

/***/ "./node_modules/xmlhttprequest/lib/XMLHttpRequest.js":
/*!***********************************************************!*\
  !*** ./node_modules/xmlhttprequest/lib/XMLHttpRequest.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.
 *
 * This can be used with JS designed for browsers to improve reuse of code and
 * allow the use of existing libraries.
 *
 * Usage: include("XMLHttpRequest.js") and use XMLHttpRequest per W3C specs.
 *
 * @author Dan DeFelippi <dan@driverdan.com>
 * @contributor David Ellis <d.f.ellis@ieee.org>
 * @license MIT
 */

var Url = __webpack_require__(/*! url */ "url");
var spawn = __webpack_require__(/*! child_process */ "child_process").spawn;
var fs = __webpack_require__(/*! fs */ "fs");

exports.XMLHttpRequest = function() {
  "use strict";

  /**
   * Private variables
   */
  var self = this;
  var http = __webpack_require__(/*! http */ "http");
  var https = __webpack_require__(/*! https */ "https");

  // Holds http.js objects
  var request;
  var response;

  // Request settings
  var settings = {};

  // Disable header blacklist.
  // Not part of XHR specs.
  var disableHeaderCheck = false;

  // Set some default headers
  var defaultHeaders = {
    "User-Agent": "node-XMLHttpRequest",
    "Accept": "*/*",
  };

  var headers = {};
  var headersCase = {};

  // These headers are not user setable.
  // The following are allowed but banned in the spec:
  // * user-agent
  var forbiddenRequestHeaders = [
    "accept-charset",
    "accept-encoding",
    "access-control-request-headers",
    "access-control-request-method",
    "connection",
    "content-length",
    "content-transfer-encoding",
    "cookie",
    "cookie2",
    "date",
    "expect",
    "host",
    "keep-alive",
    "origin",
    "referer",
    "te",
    "trailer",
    "transfer-encoding",
    "upgrade",
    "via"
  ];

  // These request methods are not allowed
  var forbiddenRequestMethods = [
    "TRACE",
    "TRACK",
    "CONNECT"
  ];

  // Send flag
  var sendFlag = false;
  // Error flag, used when errors occur or abort is called
  var errorFlag = false;

  // Event listeners
  var listeners = {};

  /**
   * Constants
   */

  this.UNSENT = 0;
  this.OPENED = 1;
  this.HEADERS_RECEIVED = 2;
  this.LOADING = 3;
  this.DONE = 4;

  /**
   * Public vars
   */

  // Current state
  this.readyState = this.UNSENT;

  // default ready state change handler in case one is not set or is set late
  this.onreadystatechange = null;

  // Result & response
  this.responseText = "";
  this.responseXML = "";
  this.status = null;
  this.statusText = null;
  
  // Whether cross-site Access-Control requests should be made using
  // credentials such as cookies or authorization headers
  this.withCredentials = false;

  /**
   * Private methods
   */

  /**
   * Check if the specified header is allowed.
   *
   * @param string header Header to validate
   * @return boolean False if not allowed, otherwise true
   */
  var isAllowedHttpHeader = function(header) {
    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);
  };

  /**
   * Check if the specified method is allowed.
   *
   * @param string method Request method to validate
   * @return boolean False if not allowed, otherwise true
   */
  var isAllowedHttpMethod = function(method) {
    return (method && forbiddenRequestMethods.indexOf(method) === -1);
  };

  /**
   * Public methods
   */

  /**
   * Open the connection. Currently supports local server requests.
   *
   * @param string method Connection method (eg GET, POST)
   * @param string url URL for the connection.
   * @param boolean async Asynchronous connection. Default is true.
   * @param string user Username for basic authentication (optional)
   * @param string password Password for basic authentication (optional)
   */
  this.open = function(method, url, async, user, password) {
    this.abort();
    errorFlag = false;

    // Check for valid request method
    if (!isAllowedHttpMethod(method)) {
      throw new Error("SecurityError: Request method not allowed");
    }

    settings = {
      "method": method,
      "url": url.toString(),
      "async": (typeof async !== "boolean" ? true : async),
      "user": user || null,
      "password": password || null
    };

    setState(this.OPENED);
  };

  /**
   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.
   * This does not conform to the W3C spec.
   *
   * @param boolean state Enable or disable header checking.
   */
  this.setDisableHeaderCheck = function(state) {
    disableHeaderCheck = state;
  };

  /**
   * Sets a header for the request or appends the value if one is already set.
   *
   * @param string header Header name
   * @param string value Header value
   */
  this.setRequestHeader = function(header, value) {
    if (this.readyState !== this.OPENED) {
      throw new Error("INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN");
    }
    if (!isAllowedHttpHeader(header)) {
      console.warn("Refused to set unsafe header \"" + header + "\"");
      return;
    }
    if (sendFlag) {
      throw new Error("INVALID_STATE_ERR: send flag is true");
    }
    header = headersCase[header.toLowerCase()] || header;
    headersCase[header.toLowerCase()] = header;
    headers[header] = headers[header] ? headers[header] + ', ' + value : value;
  };

  /**
   * Gets a header from the server response.
   *
   * @param string header Name of header to get.
   * @return string Text of the header or null if it doesn't exist.
   */
  this.getResponseHeader = function(header) {
    if (typeof header === "string"
      && this.readyState > this.OPENED
      && response
      && response.headers
      && response.headers[header.toLowerCase()]
      && !errorFlag
    ) {
      return response.headers[header.toLowerCase()];
    }

    return null;
  };

  /**
   * Gets all the response headers.
   *
   * @return string A string with all response headers separated by CR+LF
   */
  this.getAllResponseHeaders = function() {
    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {
      return "";
    }
    var result = "";

    for (var i in response.headers) {
      // Cookie headers are excluded
      if (i !== "set-cookie" && i !== "set-cookie2") {
        result += i + ": " + response.headers[i] + "\r\n";
      }
    }
    return result.substr(0, result.length - 2);
  };

  /**
   * Gets a request header
   *
   * @param string name Name of header to get
   * @return string Returns the request header or empty string if not set
   */
  this.getRequestHeader = function(name) {
    if (typeof name === "string" && headersCase[name.toLowerCase()]) {
      return headers[headersCase[name.toLowerCase()]];
    }

    return "";
  };

  /**
   * Sends the request to the server.
   *
   * @param string data Optional data to send as request body.
   */
  this.send = function(data) {
    if (this.readyState !== this.OPENED) {
      throw new Error("INVALID_STATE_ERR: connection must be opened before send() is called");
    }

    if (sendFlag) {
      throw new Error("INVALID_STATE_ERR: send has already been called");
    }

    var ssl = false, local = false;
    var url = Url.parse(settings.url);
    var host;
    // Determine the server
    switch (url.protocol) {
      case "https:":
        ssl = true;
        // SSL & non-SSL both need host, no break here.
      case "http:":
        host = url.hostname;
        break;

      case "file:":
        local = true;
        break;

      case undefined:
      case null:
      case "":
        host = "localhost";
        break;

      default:
        throw new Error("Protocol not supported.");
    }

    // Load files off the local filesystem (file://)
    if (local) {
      if (settings.method !== "GET") {
        throw new Error("XMLHttpRequest: Only GET method is supported");
      }

      if (settings.async) {
        fs.readFile(url.pathname, "utf8", function(error, data) {
          if (error) {
            self.handleError(error);
          } else {
            self.status = 200;
            self.responseText = data;
            setState(self.DONE);
          }
        });
      } else {
        try {
          this.responseText = fs.readFileSync(url.pathname, "utf8");
          this.status = 200;
          setState(self.DONE);
        } catch(e) {
          this.handleError(e);
        }
      }

      return;
    }

    // Default to port 80. If accessing localhost on another port be sure
    // to use http://localhost:port/path
    var port = url.port || (ssl ? 443 : 80);
    // Add query string if one is used
    var uri = url.pathname + (url.search ? url.search : "");

    // Set the defaults if they haven't been set
    for (var name in defaultHeaders) {
      if (!headersCase[name.toLowerCase()]) {
        headers[name] = defaultHeaders[name];
      }
    }

    // Set the Host header or the server may reject the request
    headers.Host = host;
    if (!((ssl && port === 443) || port === 80)) {
      headers.Host += ":" + url.port;
    }

    // Set Basic Auth if necessary
    if (settings.user) {
      if (typeof settings.password === "undefined") {
        settings.password = "";
      }
      var authBuf = new Buffer(settings.user + ":" + settings.password);
      headers.Authorization = "Basic " + authBuf.toString("base64");
    }

    // Set content length header
    if (settings.method === "GET" || settings.method === "HEAD") {
      data = null;
    } else if (data) {
      headers["Content-Length"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);

      if (!headers["Content-Type"]) {
        headers["Content-Type"] = "text/plain;charset=UTF-8";
      }
    } else if (settings.method === "POST") {
      // For a post with no data set Content-Length: 0.
      // This is required by buggy servers that don't meet the specs.
      headers["Content-Length"] = 0;
    }

    var options = {
      host: host,
      port: port,
      path: uri,
      method: settings.method,
      headers: headers,
      agent: false,
      withCredentials: self.withCredentials
    };

    // Reset error flag
    errorFlag = false;

    // Handle async requests
    if (settings.async) {
      // Use the proper protocol
      var doRequest = ssl ? https.request : http.request;

      // Request is being sent, set send flag
      sendFlag = true;

      // As per spec, this is called here for historical reasons.
      self.dispatchEvent("readystatechange");

      // Handler for the response
      var responseHandler = function responseHandler(resp) {
        // Set response var to the response we got back
        // This is so it remains accessable outside this scope
        response = resp;
        // Check for redirect
        // @TODO Prevent looped redirects
        if (response.statusCode === 301 || response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {
          // Change URL to the redirect location
          settings.url = response.headers.location;
          var url = Url.parse(settings.url);
          // Set host var in case it's used later
          host = url.hostname;
          // Options for the new request
          var newOptions = {
            hostname: url.hostname,
            port: url.port,
            path: url.path,
            method: response.statusCode === 303 ? "GET" : settings.method,
            headers: headers,
            withCredentials: self.withCredentials
          };

          // Issue the new request
          request = doRequest(newOptions, responseHandler).on("error", errorHandler);
          request.end();
          // @TODO Check if an XHR event needs to be fired here
          return;
        }

        response.setEncoding("utf8");

        setState(self.HEADERS_RECEIVED);
        self.status = response.statusCode;

        response.on("data", function(chunk) {
          // Make sure there's some data
          if (chunk) {
            self.responseText += chunk;
          }
          // Don't emit state changes if the connection has been aborted.
          if (sendFlag) {
            setState(self.LOADING);
          }
        });

        response.on("end", function() {
          if (sendFlag) {
            // Discard the end event if the connection has been aborted
            setState(self.DONE);
            sendFlag = false;
          }
        });

        response.on("error", function(error) {
          self.handleError(error);
        });
      };

      // Error handler for the request
      var errorHandler = function errorHandler(error) {
        self.handleError(error);
      };

      // Create the request
      request = doRequest(options, responseHandler).on("error", errorHandler);

      // Node 0.4 and later won't accept empty data. Make sure it's needed.
      if (data) {
        request.write(data);
      }

      request.end();

      self.dispatchEvent("loadstart");
    } else { // Synchronous
      // Create a temporary file for communication with the other Node process
      var contentFile = ".node-xmlhttprequest-content-" + process.pid;
      var syncFile = ".node-xmlhttprequest-sync-" + process.pid;
      fs.writeFileSync(syncFile, "", "utf8");
      // The async request the other Node process executes
      var execString = "var http = require('http'), https = require('https'), fs = require('fs');"
        + "var doRequest = http" + (ssl ? "s" : "") + ".request;"
        + "var options = " + JSON.stringify(options) + ";"
        + "var responseText = '';"
        + "var req = doRequest(options, function(response) {"
        + "response.setEncoding('utf8');"
        + "response.on('data', function(chunk) {"
        + "  responseText += chunk;"
        + "});"
        + "response.on('end', function() {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: null, data: {statusCode: response.statusCode, headers: response.headers, text: responseText}}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + "response.on('error', function(error) {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + "}).on('error', function(error) {"
        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
        + "fs.unlinkSync('" + syncFile + "');"
        + "});"
        + (data ? "req.write('" + JSON.stringify(data).slice(1,-1).replace(/'/g, "\\'") + "');":"")
        + "req.end();";
      // Start the other Node Process, executing this string
      var syncProc = spawn(process.argv[0], ["-e", execString]);
      while(fs.existsSync(syncFile)) {
        // Wait while the sync file is empty
      }
      var resp = JSON.parse(fs.readFileSync(contentFile, 'utf8'));
      // Kill the child process once the file has data
      syncProc.stdin.end();
      // Remove the temporary file
      fs.unlinkSync(contentFile);

      if (resp.err) {
        self.handleError(resp.err);
      } else {
        response = resp.data;
        self.status = resp.data.statusCode;
        self.responseText = resp.data.text;
        setState(self.DONE);
      }
    }
  };

  /**
   * Called when an error is encountered to deal with it.
   */
  this.handleError = function(error) {
    this.status = 0;
    this.statusText = error;
    this.responseText = error.stack;
    errorFlag = true;
    setState(this.DONE);
    this.dispatchEvent('error');
  };

  /**
   * Aborts a request.
   */
  this.abort = function() {
    if (request) {
      request.abort();
      request = null;
    }

    headers = defaultHeaders;
    this.status = 0;
    this.responseText = "";
    this.responseXML = "";

    errorFlag = true;

    if (this.readyState !== this.UNSENT
        && (this.readyState !== this.OPENED || sendFlag)
        && this.readyState !== this.DONE) {
      sendFlag = false;
      setState(this.DONE);
    }
    this.readyState = this.UNSENT;
    this.dispatchEvent('abort');
  };

  /**
   * Adds an event listener. Preferred method of binding to events.
   */
  this.addEventListener = function(event, callback) {
    if (!(event in listeners)) {
      listeners[event] = [];
    }
    // Currently allows duplicate callbacks. Should it?
    listeners[event].push(callback);
  };

  /**
   * Remove an event callback that has already been bound.
   * Only works on the matching funciton, cannot be a copy.
   */
  this.removeEventListener = function(event, callback) {
    if (event in listeners) {
      // Filter will return a new array with the callback removed
      listeners[event] = listeners[event].filter(function(ev) {
        return ev !== callback;
      });
    }
  };

  /**
   * Dispatch any events, including both "on" methods and events attached using addEventListener.
   */
  this.dispatchEvent = function(event) {
    if (typeof self["on" + event] === "function") {
      self["on" + event]();
    }
    if (event in listeners) {
      for (var i = 0, len = listeners[event].length; i < len; i++) {
        listeners[event][i].call(self);
      }
    }
  };

  /**
   * Changes readyState and calls onreadystatechange.
   *
   * @param int state New state
   */
  var setState = function(state) {
    if (state == self.LOADING || self.readyState !== state) {
      self.readyState = state;

      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {
        self.dispatchEvent("readystatechange");
      }

      if (self.readyState === self.DONE && !errorFlag) {
        self.dispatchEvent("load");
        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)
        self.dispatchEvent("loadend");
      }
    }
  };
};


/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("child_process");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,